<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classILLIXR_1_1display_1_1display__backend" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ILLIXR::display::display_backend</compoundname>
    <derivedcompoundref refid="classILLIXR_1_1display_1_1glfw__extended" prot="public" virt="non-virtual">ILLIXR::display::glfw_extended</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1display_1_1headless" prot="public" virt="non-virtual">ILLIXR::display::headless</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1display_1_1x11__direct" prot="public" virt="non-virtual">ILLIXR::display::x11_direct</derivedcompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="classILLIXR_1_1display_1_1display__backend_1a6bb549f03727635d111f544ca0c0cf35" prot="public" static="no" strong="no">
        <type></type>
        <name>display_backend_type</name>
        <qualifiedname>ILLIXR::display::display_backend::display_backend_type</qualifiedname>
        <enumvalue id="classILLIXR_1_1display_1_1display__backend_1a6bb549f03727635d111f544ca0c0cf35a6c22ae7cd43cc6c85dc63463f39b30b3" prot="public">
          <name>GLFW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classILLIXR_1_1display_1_1display__backend_1a6bb549f03727635d111f544ca0c0cf35a76bb4a005202c52102006cef21d0ee35" prot="public">
          <name>X11_DIRECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classILLIXR_1_1display_1_1display__backend_1a6bb549f03727635d111f544ca0c0cf35a9d4de65feff923a0f7da4d0c8b8cd878" prot="public">
          <name>HEADLESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" line="10" column="5" bodyfile="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" bodystart="10" bodyend="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classILLIXR_1_1display_1_1display__backend_1a9ea10d97922d75ec50123c500e456e58" prot="protected" static="no" mutable="no">
        <type>VkInstance</type>
        <definition>VkInstance ILLIXR::display::display_backend::vk_instance_</definition>
        <argsstring></argsstring>
        <name>vk_instance_</name>
        <qualifiedname>ILLIXR::display::display_backend::vk_instance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" line="23" column="16" bodyfile="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classILLIXR_1_1display_1_1display__backend_1a48c4d9d8e7e5599793b02b1f5c18a38d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ILLIXR::display::display_backend::setup_display</definition>
        <argsstring>(const std::shared_ptr&lt; switchboard &gt; sb, VkInstance vk_instance, VkPhysicalDevice vk_physical_device)=0</argsstring>
        <name>setup_display</name>
        <qualifiedname>ILLIXR::display::display_backend::setup_display</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classILLIXR_1_1switchboard" kindref="compound">switchboard</ref> &gt;</type>
          <declname>sb</declname>
        </param>
        <param>
          <type>VkInstance</type>
          <declname>vk_instance</declname>
        </param>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>vk_physical_device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" line="12" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1display_1_1display__backend_1a21ebfd9665eab3dc93446909015dc017" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>VkSurfaceKHR</type>
        <definition>virtual VkSurfaceKHR ILLIXR::display::display_backend::create_surface</definition>
        <argsstring>()=0</argsstring>
        <name>create_surface</name>
        <qualifiedname>ILLIXR::display::display_backend::create_surface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" line="14" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1display_1_1display__backend_1adcf23384a18793748608eee0feeb10cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ILLIXR::display::display_backend::cleanup</definition>
        <argsstring>()=0</argsstring>
        <name>cleanup</name>
        <qualifiedname>ILLIXR::display::display_backend::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" line="15" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1display_1_1display__backend_1a1ae5a1dc1e63a5e920d97a1235b88b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::set&lt; const char * &gt;</type>
        <definition>virtual std::set&lt; const char * &gt; ILLIXR::display::display_backend::get_required_instance_extensions</definition>
        <argsstring>()=0</argsstring>
        <name>get_required_instance_extensions</name>
        <qualifiedname>ILLIXR::display::display_backend::get_required_instance_extensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" line="17" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1display_1_1display__backend_1a94ed86254b25408d365d7a1c99a20513" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::set&lt; const char * &gt;</type>
        <definition>virtual std::set&lt; const char * &gt; ILLIXR::display::display_backend::get_required_device_extensions</definition>
        <argsstring>()=0</argsstring>
        <name>get_required_device_extensions</name>
        <qualifiedname>ILLIXR::display::display_backend::get_required_device_extensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" line="18" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1display_1_1display__backend_1a6cd6989ffad3a129ffe9f687d490861c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>display_backend_type</type>
        <definition>virtual display_backend_type ILLIXR::display::display_backend::get_type</definition>
        <argsstring>()=0</argsstring>
        <name>get_type</name>
        <qualifiedname>ILLIXR::display::display_backend::get_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" line="20" column="34"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" line="8" column="1" bodyfile="/home/friedel/devel/ILLIXR/src/display/display_backend.hpp" bodystart="8" bodyend="24"/>
    <listofallmembers>
      <member refid="classILLIXR_1_1display_1_1display__backend_1adcf23384a18793748608eee0feeb10cf" prot="public" virt="pure-virtual"><scope>ILLIXR::display::display_backend</scope><name>cleanup</name></member>
      <member refid="classILLIXR_1_1display_1_1display__backend_1a21ebfd9665eab3dc93446909015dc017" prot="public" virt="pure-virtual"><scope>ILLIXR::display::display_backend</scope><name>create_surface</name></member>
      <member refid="classILLIXR_1_1display_1_1display__backend_1a6bb549f03727635d111f544ca0c0cf35" prot="public" virt="non-virtual"><scope>ILLIXR::display::display_backend</scope><name>display_backend_type</name></member>
      <member refid="classILLIXR_1_1display_1_1display__backend_1a94ed86254b25408d365d7a1c99a20513" prot="public" virt="pure-virtual"><scope>ILLIXR::display::display_backend</scope><name>get_required_device_extensions</name></member>
      <member refid="classILLIXR_1_1display_1_1display__backend_1a1ae5a1dc1e63a5e920d97a1235b88b0e" prot="public" virt="pure-virtual"><scope>ILLIXR::display::display_backend</scope><name>get_required_instance_extensions</name></member>
      <member refid="classILLIXR_1_1display_1_1display__backend_1a6cd6989ffad3a129ffe9f687d490861c" prot="public" virt="pure-virtual"><scope>ILLIXR::display::display_backend</scope><name>get_type</name></member>
      <member refid="classILLIXR_1_1display_1_1display__backend_1a6bb549f03727635d111f544ca0c0cf35a6c22ae7cd43cc6c85dc63463f39b30b3" prot="public" virt="non-virtual"><scope>ILLIXR::display::display_backend</scope><name>GLFW</name></member>
      <member refid="classILLIXR_1_1display_1_1display__backend_1a6bb549f03727635d111f544ca0c0cf35a9d4de65feff923a0f7da4d0c8b8cd878" prot="public" virt="non-virtual"><scope>ILLIXR::display::display_backend</scope><name>HEADLESS</name></member>
      <member refid="classILLIXR_1_1display_1_1display__backend_1a48c4d9d8e7e5599793b02b1f5c18a38d" prot="public" virt="pure-virtual"><scope>ILLIXR::display::display_backend</scope><name>setup_display</name></member>
      <member refid="classILLIXR_1_1display_1_1display__backend_1a9ea10d97922d75ec50123c500e456e58" prot="protected" virt="non-virtual"><scope>ILLIXR::display::display_backend</scope><name>vk_instance_</name></member>
      <member refid="classILLIXR_1_1display_1_1display__backend_1a6bb549f03727635d111f544ca0c0cf35a76bb4a005202c52102006cef21d0ee35" prot="public" virt="non-virtual"><scope>ILLIXR::display::display_backend</scope><name>X11_DIRECT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
