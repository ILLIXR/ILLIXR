<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="include_2illixr_2plugin_8hpp" kind="file" language="C++">
    <compoundname>plugin.hpp</compoundname>
    <includes refid="phonebook_8hpp" local="yes">phonebook.hpp</includes>
    <includes refid="record__logger_8hpp" local="yes">record_logger.hpp</includes>
    <includes local="no">memory</includes>
    <includes local="no">spdlog/common.h</includes>
    <includes local="no">spdlog/sinks/basic_file_sink.h</includes>
    <includes local="no">spdlog/sinks/stdout_color_sinks.h</includes>
    <includes local="no">spdlog/spdlog.h</includes>
    <includes local="no">string</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">utility</includes>
    <includedby refid="threadloop_8hpp" local="yes">/home/friedel/devel/ILLIXR/include/illixr/threadloop.hpp</includedby>
    <includedby refid="plugins_2ground__truth__slam_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/ground_truth_slam/plugin.hpp</includedby>
    <includedby refid="plugins_2gtsam__integrator_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/gtsam_integrator/plugin.hpp</includedby>
    <includedby refid="plugins_2hand__tracking_2viewer_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/hand_tracking/viewer/plugin.hpp</includedby>
    <includedby refid="plugins_2offload__data_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_data/plugin.hpp</includedby>
    <includedby refid="plugins_2offload__rendering__client_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_rendering_client/plugin.cpp</includedby>
    <includedby refid="plugins_2offload__rendering__server_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/plugin.hpp</includedby>
    <includedby refid="plugins_2offload__vio_2server__tx_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_vio/server_tx/plugin.hpp</includedby>
    <includedby refid="plugins_2passthrough__integrator_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/passthrough_integrator/plugin.hpp</includedby>
    <includedby refid="plugins_2record__imu__cam_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/record_imu_cam/plugin.hpp</includedby>
    <includedby refid="plugins_2record__rgb__depth_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/record_rgb_depth/plugin.hpp</includedby>
    <includedby refid="plugins_2rk4__integrator_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/rk4_integrator/plugin.hpp</includedby>
    <includedby refid="plugins_2tcp__network__backend_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/tcp_network_backend/plugin.hpp</includedby>
    <includedby refid="fauxpose_2service_8hpp" local="yes">/home/friedel/devel/ILLIXR/services/fauxpose/service.hpp</includedby>
    <includedby refid="pose__lookup_2service_8hpp" local="yes">/home/friedel/devel/ILLIXR/services/pose_lookup/service.hpp</includedby>
    <includedby refid="pose__prediction_2service_8hpp" local="yes">/home/friedel/devel/ILLIXR/services/pose_prediction/service.hpp</includedby>
    <includedby refid="runtime__impl_8cpp" local="yes">/home/friedel/devel/ILLIXR/src/runtime_impl.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>phonebook.hpp</label>
        <link refid="phonebook_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp</label>
        <link refid="include_2illixr_2plugin_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>record_logger.hpp</label>
        <link refid="record__logger_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>any</label>
      </node>
      <node id="14">
        <label>atomic</label>
      </node>
      <node id="3">
        <label>cassert</label>
      </node>
      <node id="15">
        <label>chrono</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="5">
        <label>mutex</label>
      </node>
      <node id="16">
        <label>optional</label>
      </node>
      <node id="6">
        <label>shared_mutex</label>
      </node>
      <node id="21">
        <label>spdlog/common.h</label>
      </node>
      <node id="22">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="23">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="11">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="20">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>stdexcept</label>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="8">
        <label>typeindex</label>
      </node>
      <node id="24">
        <label>typeinfo</label>
      </node>
      <node id="9">
        <label>unordered_map</label>
      </node>
      <node id="18">
        <label>utility</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp</label>
        <link refid="include_2illixr_2plugin_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/friedel/devel/ILLIXR/include/illixr/threadloop.hpp</label>
        <link refid="threadloop_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/friedel/devel/ILLIXR/plugins/debugview/plugin.hpp</label>
        <link refid="plugins_2debugview_2plugin_8hpp_source"/>
      </node>
      <node id="4">
        <label>/home/friedel/devel/ILLIXR/plugins/depthai/plugin.hpp</label>
        <link refid="plugins_2depthai_2plugin_8hpp_source"/>
      </node>
      <node id="5">
        <label>/home/friedel/devel/ILLIXR/plugins/gldemo/plugin.hpp</label>
        <link refid="plugins_2gldemo_2plugin_8hpp_source"/>
      </node>
      <node id="29">
        <label>/home/friedel/devel/ILLIXR/plugins/ground_truth_slam/plugin.hpp</label>
        <link refid="plugins_2ground__truth__slam_2plugin_8hpp_source"/>
      </node>
      <node id="30">
        <label>/home/friedel/devel/ILLIXR/plugins/gtsam_integrator/plugin.hpp</label>
        <link refid="plugins_2gtsam__integrator_2plugin_8hpp_source"/>
      </node>
      <node id="31">
        <label>/home/friedel/devel/ILLIXR/plugins/hand_tracking/viewer/plugin.hpp</label>
        <link refid="plugins_2hand__tracking_2viewer_2plugin_8hpp_source"/>
      </node>
      <node id="6">
        <label>/home/friedel/devel/ILLIXR/plugins/lighthouse/plugin.hpp</label>
        <link refid="plugins_2lighthouse_2plugin_8hpp_source"/>
      </node>
      <node id="7">
        <label>/home/friedel/devel/ILLIXR/plugins/native_renderer/plugin.hpp</label>
        <link refid="plugins_2native__renderer_2plugin_8hpp_source"/>
      </node>
      <node id="8">
        <label>/home/friedel/devel/ILLIXR/plugins/offline_cam/plugin.hpp</label>
        <link refid="plugins_2offline__cam_2plugin_8hpp_source"/>
      </node>
      <node id="9">
        <label>/home/friedel/devel/ILLIXR/plugins/offline_imu/plugin.hpp</label>
        <link refid="plugins_2offline__imu_2plugin_8hpp_source"/>
      </node>
      <node id="32">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_data/plugin.hpp</label>
        <link refid="plugins_2offload__data_2plugin_8hpp_source"/>
      </node>
      <node id="10">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_client/offload_rendering_client.hpp</label>
        <link refid="offload__rendering__client_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_client/plugin.cpp</label>
        <link refid="plugins_2offload__rendering__client_2plugin_8cpp"/>
      </node>
      <node id="12">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/offload_rendering_server.hpp</label>
        <link refid="offload__rendering__server_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/plugin.cpp</label>
        <link refid="plugins_2offload__rendering__server_2plugin_8cpp"/>
      </node>
      <node id="13">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/plugin.hpp</label>
        <link refid="plugins_2offload__rendering__server_2plugin_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/device_rx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2device__rx_2plugin_8hpp_source"/>
      </node>
      <node id="16">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/device_tx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2device__tx_2plugin_8hpp_source"/>
      </node>
      <node id="17">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2server__rx_2plugin_8hpp_source"/>
      </node>
      <node id="33">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/server_tx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2server__tx_2plugin_8hpp_source"/>
      </node>
      <node id="18">
        <label>/home/friedel/devel/ILLIXR/plugins/openni/plugin.hpp</label>
        <link refid="plugins_2openni_2plugin_8hpp_source"/>
      </node>
      <node id="19">
        <label>/home/friedel/devel/ILLIXR/plugins/openwarp_vk/plugin.hpp</label>
        <link refid="plugins_2openwarp__vk_2plugin_8hpp_source"/>
      </node>
      <node id="34">
        <label>/home/friedel/devel/ILLIXR/plugins/passthrough_integrator/plugin.hpp</label>
        <link refid="plugins_2passthrough__integrator_2plugin_8hpp_source"/>
      </node>
      <node id="20">
        <label>/home/friedel/devel/ILLIXR/plugins/realsense/plugin.hpp</label>
        <link refid="plugins_2realsense_2plugin_8hpp_source"/>
      </node>
      <node id="35">
        <label>/home/friedel/devel/ILLIXR/plugins/record_imu_cam/plugin.hpp</label>
        <link refid="plugins_2record__imu__cam_2plugin_8hpp_source"/>
      </node>
      <node id="36">
        <label>/home/friedel/devel/ILLIXR/plugins/record_rgb_depth/plugin.hpp</label>
        <link refid="plugins_2record__rgb__depth_2plugin_8hpp_source"/>
      </node>
      <node id="37">
        <label>/home/friedel/devel/ILLIXR/plugins/rk4_integrator/plugin.hpp</label>
        <link refid="plugins_2rk4__integrator_2plugin_8hpp_source"/>
      </node>
      <node id="38">
        <label>/home/friedel/devel/ILLIXR/plugins/tcp_network_backend/plugin.hpp</label>
        <link refid="plugins_2tcp__network__backend_2plugin_8hpp_source"/>
      </node>
      <node id="21">
        <label>/home/friedel/devel/ILLIXR/plugins/timewarp_gl/plugin.hpp</label>
        <link refid="plugins_2timewarp__gl_2plugin_8hpp_source"/>
      </node>
      <node id="22">
        <label>/home/friedel/devel/ILLIXR/plugins/timewarp_vk/plugin.hpp</label>
        <link refid="plugins_2timewarp__vk_2plugin_8hpp_source"/>
      </node>
      <node id="23">
        <label>/home/friedel/devel/ILLIXR/plugins/webcam/plugin.hpp</label>
        <link refid="plugins_2webcam_2plugin_8hpp_source"/>
      </node>
      <node id="24">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/data_injection/plugin.hpp</label>
        <link refid="plugins_2zed_2data__injection_2plugin_8hpp_source"/>
      </node>
      <node id="26">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/plugin.hpp</label>
        <link refid="plugins_2zed_2plugin_8hpp_source"/>
      </node>
      <node id="25">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/zed_camera_thread.hpp</label>
        <link refid="zed__camera__thread_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/home/friedel/devel/ILLIXR/services/fauxpose/service.hpp</label>
        <link refid="fauxpose_2service_8hpp_source"/>
      </node>
      <node id="40">
        <label>/home/friedel/devel/ILLIXR/services/pose_lookup/service.hpp</label>
        <link refid="pose__lookup_2service_8hpp_source"/>
      </node>
      <node id="41">
        <label>/home/friedel/devel/ILLIXR/services/pose_prediction/service.hpp</label>
        <link refid="pose__prediction_2service_8hpp_source"/>
      </node>
      <node id="27">
        <label>/home/friedel/devel/ILLIXR/services/vkdemo/service.hpp</label>
        <link refid="vkdemo_2service_8hpp_source"/>
      </node>
      <node id="28">
        <label>/home/friedel/devel/ILLIXR/src/vulkan_display.hpp</label>
        <link refid="vulkan__display_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classILLIXR_1_1plugin" prot="public">ILLIXR::plugin</innerclass>
    <innernamespace refid="namespaceILLIXR">ILLIXR</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="include_2illixr_2plugin_8hpp_1aa29023b17f5259cc4186f4627e1d9b5c" prot="public" static="no">
        <name>PLUGIN_MAIN</name>
        <param><defname>PLUGIN_CLASS</defname></param>
        <initializer>    extern &quot;C&quot; plugin* this_plugin_factory(phonebook* pb) { \
        auto* obj = new PLUGIN_CLASS{#PLUGIN_CLASS, pb};    \
        return obj;                                         \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="137" column="9" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="137" bodyend="141"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="include_2illixr_2plugin_8hpp_1acea3046cb58c1ad9436dbe995f3ac690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool needs_monado</definition>
        <argsstring>()</argsstring>
        <name>needs_monado</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="17" column="6" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="17" bodyend="23"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;phonebook.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;record_logger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/common.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/sinks/basic_file_sink.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/sinks/stdout_color_sinks.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/spdlog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOUBLE_INCLUDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needs_monado()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>MONADO_REQUIRED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceILLIXR" kindref="compound">ILLIXR</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">plugin_id_t<sp/>=<sp/>std::size_t;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>This<sp/>gets<sp/>included,<sp/>but<sp/>it<sp/>is<sp/>functionally<sp/>&apos;private&apos;.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>record_header<sp/>_plugin_start_header{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;plugin_name&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;plugin_id&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(plugin_id_t)},</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;plugin_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(std::string)},</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classILLIXR_1_1plugin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classILLIXR_1_1plugin" kindref="compound">plugin</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1plugin" kindref="compound">plugin</ref>(std::string<sp/>name,<sp/><ref refid="classILLIXR_1_1phonebook" kindref="compound">phonebook</ref>*<sp/>pb)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>name_{std::move(name)}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>phonebook_{pb}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>record_logger_{phonebook_-&gt;<ref refid="classILLIXR_1_1phonebook_1a3d292059ea83e59808695622fec36fe2" kindref="member">lookup_impl</ref>&lt;<ref refid="classILLIXR_1_1record__logger" kindref="compound">record_logger</ref>&gt;()}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>gen_guid_{phonebook_-&gt;<ref refid="classILLIXR_1_1phonebook_1a3d292059ea83e59808695622fec36fe2" kindref="member">lookup_impl</ref>&lt;<ref refid="classILLIXR_1_1gen__guid" kindref="compound">gen_guid</ref>&gt;()}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>id_{gen_guid_-&gt;get()}<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1plugin" kindref="compound">~plugin</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classILLIXR_1_1plugin_1a30d7294817fc5e8a8216fbfbca233cdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1plugin_1a30d7294817fc5e8a8216fbfbca233cdc" kindref="member">start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>record_logger_-&gt;log(<ref refid="classILLIXR_1_1record" kindref="compound">record</ref>{_plugin_start_header,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{id_},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{name_},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}});</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classILLIXR_1_1plugin_1a2cefabfb6dd9800b1ebc8b07031661c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1plugin_1a2cefabfb6dd9800b1ebc8b07031661c4" kindref="member">stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plugin_logger_)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin_logger_-&gt;flush();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/>[[nodiscard]]<sp/>std::string<sp/>get_name()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name_;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spdlogger(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>log_level)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!log_level)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_level<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;warn&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_level<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;spdlog::sink_ptr&gt;<sp/>sinks;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_sink<sp/>=<sp/>std::make_shared&lt;spdlog::sinks::basic_file_sink_mt&gt;(</highlight><highlight class="stringliteral">&quot;logs/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name_<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.log&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console_sink<sp/>=<sp/>std::make_shared&lt;spdlog::sinks::stdout_color_sink_mt&gt;();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sinks.push_back(file_sink);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sinks.push_back(console_sink);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spdlog::get(name_)<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin_logger_<sp/>=<sp/>std::make_shared&lt;spdlog::logger&gt;(name_,<sp/>begin(sinks),<sp/>end(sinks));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin_logger_-&gt;set_level(spdlog::level::from_str(log_level));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::register_logger(plugin_logger_);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin_logger_<sp/>=<sp/>spdlog::get(name_);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plugin_logger_;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spd_add_file_sink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>extension,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>log_level)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!plugin_logger_)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Logger<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>file_sink<sp/>=<sp/>std::make_shared&lt;spdlog::sinks::basic_file_sink_mt&gt;(</highlight><highlight class="stringliteral">&quot;logs/&quot;</highlight><highlight class="normal"><sp/>+<sp/>file_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+<sp/>extension,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_sink-&gt;set_level(spdlog::level::from_str(log_level));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin_logger_-&gt;sinks().push_back(file_sink);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sink_count<sp/>=<sp/>plugin_logger_-&gt;sinks().size();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin_logger_-&gt;sinks()[sink_count<sp/>-<sp/>1]-&gt;set_pattern(</highlight><highlight class="stringliteral">&quot;%v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>phonebook*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phonebook_;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;record_logger&gt;<sp/>record_logger_;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;gen_guid&gt;<sp/><sp/><sp/><sp/><sp/><sp/>gen_guid_;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/><sp/><sp/><sp/><sp/><sp/>plugin_logger_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLUGIN_MAIN(PLUGIN_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>extern<sp/>&quot;C&quot;<sp/>plugin*<sp/>this_plugin_factory(phonebook*<sp/>pb)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto*<sp/>obj<sp/>=<sp/>new<sp/>PLUGIN_CLASS{#PLUGIN_CLASS,<sp/>pb};<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>obj;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ILLIXR</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp"/>
  </compounddef>
</doxygen>
