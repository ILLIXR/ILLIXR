<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structILLIXR_1_1data__format_1_1point" kind="struct" language="C++" prot="public">
    <compoundname>ILLIXR::data_format::point</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Eigen::Vector3f</basecompoundref>
    <derivedcompoundref refid="structILLIXR_1_1data__format_1_1point__with__validity" prot="public" virt="non-virtual">ILLIXR::data_format::point_with_validity</derivedcompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structILLIXR_1_1data__format_1_1point_1a352d21c81e43299dc15adf5ecdb52111" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ILLIXR::data_format::point::point</definition>
        <argsstring>()</argsstring>
        <name>point</name>
        <qualifiedname>ILLIXR::data_format::point::point</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" line="21" column="5" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="structILLIXR_1_1data__format_1_1point_1a778571bb8cee1db4c5129260a87009f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ILLIXR::data_format::point::point</definition>
        <argsstring>(const float x, const float y, const float z=0.)</argsstring>
        <name>point</name>
        <qualifiedname>ILLIXR::data_format::point::point</qualifiedname>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>z</declname>
          <defval>0.</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initial point based on the given x, y, and z coordinates <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate in arbitrary units </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate in arbitrary units </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The z coordinate in arbitrary units, default is 0, indicating a point in 2-D space </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" line="30" column="5" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structILLIXR_1_1data__format_1_1point_1a16a51a168c1cebd9df0ff0779697e6df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ILLIXR::data_format::point::set</definition>
        <argsstring>(const float x_, const float y_, const float z_=0.)</argsstring>
        <name>set</name>
        <qualifiedname>ILLIXR::data_format::point::set</qualifiedname>
        <param>
          <type>const float</type>
          <declname>x_</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y_</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>z_</declname>
          <defval>0.</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the coordinates based on the given x, y, and z coordinates <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate in arbitrary units </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate in arbitrary units </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The z coordinate in arbitrary units, default is 0, indicating a point in 2-D space </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" line="39" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structILLIXR_1_1data__format_1_1point_1a4876cffd1a044fd9948a0a2e4af58403" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>point &amp;</type>
        <definition>point &amp; ILLIXR::data_format::point::operator=</definition>
        <argsstring>(const Eigen::Vector3f &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>ILLIXR::data_format::point::operator=</qualifiedname>
        <param>
          <type>const Eigen::Vector3f &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the updated point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" line="50" column="11" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structILLIXR_1_1data__format_1_1point_1a4e4487c361cca164ccf773b4d19178fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>int</type>
            <declname>Option</declname>
            <defname>Option</defname>
          </param>
        </templateparamlist>
        <type>point &amp;</type>
        <definition>point &amp; ILLIXR::data_format::point::operator=</definition>
        <argsstring>(const Eigen::Product&lt; T, U, Option &gt; &amp;pr)</argsstring>
        <name>operator=</name>
        <qualifiedname>ILLIXR::data_format::point::operator=</qualifiedname>
        <param>
          <type>const Eigen::Product&lt; T, U, Option &gt; &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator when dealing with multiplication products <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the left hand side expression </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the right hand side expression </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Option</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>the multiplication product </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to the updated point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" line="66" column="11" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structILLIXR_1_1data__format_1_1point_1a5f121c9baa1a5927c19683207fff5c88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>point &amp;</type>
        <definition>point &amp; ILLIXR::data_format::point::operator+=</definition>
        <argsstring>(const Eigen::Vector3f &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>ILLIXR::data_format::point::operator+=</qualifiedname>
        <param>
          <type>const Eigen::Vector3f &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Addition operator for adding two points <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the point to add to this one </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to the updated point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" line="78" column="11" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structILLIXR_1_1data__format_1_1point_1ab8a0cd6a274553d00c43244c38cf8a0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>point &amp;</type>
        <definition>point &amp; ILLIXR::data_format::point::operator-=</definition>
        <argsstring>(const Eigen::Vector3f &amp;other)</argsstring>
        <name>operator-=</name>
        <qualifiedname>ILLIXR::data_format::point::operator-=</qualifiedname>
        <param>
          <type>const Eigen::Vector3f &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtraction operator for adding two points <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the point to subtract from this one </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to the updated point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" line="90" column="11" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" bodystart="90" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" line="17" column="1" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/data_format/point.hpp" bodystart="17" bodyend="96"/>
    <listofallmembers>
      <member refid="structILLIXR_1_1data__format_1_1point_1a5f121c9baa1a5927c19683207fff5c88" prot="public" virt="non-virtual"><scope>ILLIXR::data_format::point</scope><name>operator+=</name></member>
      <member refid="structILLIXR_1_1data__format_1_1point_1ab8a0cd6a274553d00c43244c38cf8a0a" prot="public" virt="non-virtual"><scope>ILLIXR::data_format::point</scope><name>operator-=</name></member>
      <member refid="structILLIXR_1_1data__format_1_1point_1a4876cffd1a044fd9948a0a2e4af58403" prot="public" virt="non-virtual"><scope>ILLIXR::data_format::point</scope><name>operator=</name></member>
      <member refid="structILLIXR_1_1data__format_1_1point_1a4e4487c361cca164ccf773b4d19178fb" prot="public" virt="non-virtual"><scope>ILLIXR::data_format::point</scope><name>operator=</name></member>
      <member refid="structILLIXR_1_1data__format_1_1point_1a352d21c81e43299dc15adf5ecdb52111" prot="public" virt="non-virtual"><scope>ILLIXR::data_format::point</scope><name>point</name></member>
      <member refid="structILLIXR_1_1data__format_1_1point_1a778571bb8cee1db4c5129260a87009f2" prot="public" virt="non-virtual"><scope>ILLIXR::data_format::point</scope><name>point</name></member>
      <member refid="structILLIXR_1_1data__format_1_1point_1a16a51a168c1cebd9df0ff0779697e6df" prot="public" virt="non-virtual"><scope>ILLIXR::data_format::point</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
