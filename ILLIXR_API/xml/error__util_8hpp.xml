<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="error__util_8hpp" kind="file" language="C++">
    <compoundname>error_util.hpp</compoundname>
    <includes refid="global__module__defs_8hpp" local="yes">global_module_defs.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">spdlog/spdlog.h</includes>
    <includes local="no">string</includes>
    <includedby refid="cpu__timer_8hpp" local="yes">/home/friedel/devel/ILLIXR/include/illixr/cpu_timer.hpp</includedby>
    <includedby refid="data__loading_8hpp" local="yes">/home/friedel/devel/ILLIXR/include/illixr/data_loading.hpp</includedby>
    <includedby refid="dynamic__lib_8hpp" local="yes">/home/friedel/devel/ILLIXR/include/illixr/dynamic_lib.hpp</includedby>
    <includedby refid="extended__window_8hpp" local="yes">/home/friedel/devel/ILLIXR/include/illixr/extended_window.hpp</includedby>
    <includedby refid="shader__util_8hpp" local="yes">/home/friedel/devel/ILLIXR/include/illixr/shader_util.hpp</includedby>
    <includedby refid="threadloop_8hpp" local="yes">/home/friedel/devel/ILLIXR/include/illixr/threadloop.hpp</includedby>
    <includedby refid="plugins_2debugview_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/debugview/plugin.cpp</includedby>
    <includedby refid="plugins_2gldemo_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/gldemo/plugin.cpp</includedby>
    <includedby refid="plugins_2lighthouse_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/lighthouse/plugin.cpp</includedby>
    <includedby refid="plugins_2offload__data_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_data/plugin.hpp</includedby>
    <includedby refid="video__encoder_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_vio/device_tx/video_encoder.cpp</includedby>
    <includedby refid="video__decoder_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/video_decoder.cpp</includedby>
    <includedby refid="plugins_2rk4__integrator_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/rk4_integrator/plugin.hpp</includedby>
    <includedby refid="plugins_2timewarp__gl_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/timewarp_gl/plugin.cpp</includedby>
    <includedby refid="plugins_2zed_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/zed/plugin.cpp</includedby>
    <includedby refid="utils_8hpp" local="yes">/home/friedel/devel/ILLIXR/services/pose_lookup/utils.hpp</includedby>
    <includedby refid="glfw__extended_8cpp" local="yes">/home/friedel/devel/ILLIXR/src/display/glfw_extended.cpp</includedby>
    <includedby refid="src_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/src/plugin.cpp</includedby>
    <includedby refid="runtime__impl_8cpp" local="yes">/home/friedel/devel/ILLIXR/src/runtime_impl.cpp</includedby>
    <includedby refid="sqlite__record__logger_8hpp" local="yes">/home/friedel/devel/ILLIXR/src/sqlite_record_logger.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/include/illixr/error_util.hpp</label>
        <link refid="error__util_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>global_module_defs.hpp</label>
        <link refid="global__module__defs_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>phonebook.hpp</label>
        <link refid="phonebook_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>relative_clock.hpp</label>
        <link refid="relative__clock_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="14">
        <label>chrono</label>
      </node>
      <node id="17">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="7">
        <label>mutex</label>
      </node>
      <node id="15">
        <label>ratio</label>
      </node>
      <node id="8">
        <label>shared_mutex</label>
      </node>
      <node id="13">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="9">
        <label>stdexcept</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="10">
        <label>typeindex</label>
      </node>
      <node id="11">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/friedel/devel/ILLIXR/include/illixr/cpu_timer.hpp</label>
        <link refid="cpu__timer_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/home/friedel/devel/ILLIXR/include/illixr/data_loading.hpp</label>
        <link refid="data__loading_8hpp_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>/home/friedel/devel/ILLIXR/include/illixr/dynamic_lib.hpp</label>
        <link refid="dynamic__lib_8hpp_source"/>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/include/illixr/error_util.hpp</label>
        <link refid="error__util_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/friedel/devel/ILLIXR/include/illixr/extended_window.hpp</label>
        <link refid="extended__window_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/home/friedel/devel/ILLIXR/include/illixr/shader_util.hpp</label>
        <link refid="shader__util_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/friedel/devel/ILLIXR/include/illixr/threadloop.hpp</label>
        <link refid="threadloop_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/friedel/devel/ILLIXR/plugins/debugview/plugin.hpp</label>
        <link refid="plugins_2debugview_2plugin_8hpp_source"/>
      </node>
      <node id="5">
        <label>/home/friedel/devel/ILLIXR/plugins/depthai/plugin.hpp</label>
        <link refid="plugins_2depthai_2plugin_8hpp_source"/>
      </node>
      <node id="6">
        <label>/home/friedel/devel/ILLIXR/plugins/gldemo/plugin.hpp</label>
        <link refid="plugins_2gldemo_2plugin_8hpp_source"/>
      </node>
      <node id="31">
        <label>/home/friedel/devel/ILLIXR/plugins/ground_truth_slam/plugin.hpp</label>
        <link refid="plugins_2ground__truth__slam_2plugin_8hpp_source"/>
      </node>
      <node id="7">
        <label>/home/friedel/devel/ILLIXR/plugins/lighthouse/plugin.hpp</label>
        <link refid="plugins_2lighthouse_2plugin_8hpp_source"/>
      </node>
      <node id="8">
        <label>/home/friedel/devel/ILLIXR/plugins/native_renderer/plugin.hpp</label>
        <link refid="plugins_2native__renderer_2plugin_8hpp_source"/>
      </node>
      <node id="9">
        <label>/home/friedel/devel/ILLIXR/plugins/offline_cam/plugin.hpp</label>
        <link refid="plugins_2offline__cam_2plugin_8hpp_source"/>
      </node>
      <node id="10">
        <label>/home/friedel/devel/ILLIXR/plugins/offline_imu/plugin.hpp</label>
        <link refid="plugins_2offline__imu_2plugin_8hpp_source"/>
      </node>
      <node id="36">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_data/plugin.hpp</label>
        <link refid="plugins_2offload__data_2plugin_8hpp_source"/>
      </node>
      <node id="11">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_client/offload_rendering_client.hpp</label>
        <link refid="offload__rendering__client_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_client/plugin.cpp</label>
        <link refid="plugins_2offload__rendering__client_2plugin_8cpp"/>
      </node>
      <node id="13">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/offload_rendering_server.hpp</label>
        <link refid="offload__rendering__server_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/plugin.cpp</label>
        <link refid="plugins_2offload__rendering__server_2plugin_8cpp"/>
      </node>
      <node id="14">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/plugin.hpp</label>
        <link refid="plugins_2offload__rendering__server_2plugin_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/device_rx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2device__rx_2plugin_8hpp_source"/>
      </node>
      <node id="17">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/device_tx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2device__tx_2plugin_8hpp_source"/>
      </node>
      <node id="18">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2server__rx_2plugin_8hpp_source"/>
      </node>
      <node id="19">
        <label>/home/friedel/devel/ILLIXR/plugins/openni/plugin.hpp</label>
        <link refid="plugins_2openni_2plugin_8hpp_source"/>
      </node>
      <node id="20">
        <label>/home/friedel/devel/ILLIXR/plugins/openwarp_vk/plugin.hpp</label>
        <link refid="plugins_2openwarp__vk_2plugin_8hpp_source"/>
      </node>
      <node id="21">
        <label>/home/friedel/devel/ILLIXR/plugins/realsense/plugin.hpp</label>
        <link refid="plugins_2realsense_2plugin_8hpp_source"/>
      </node>
      <node id="37">
        <label>/home/friedel/devel/ILLIXR/plugins/rk4_integrator/plugin.hpp</label>
        <link refid="plugins_2rk4__integrator_2plugin_8hpp_source"/>
      </node>
      <node id="22">
        <label>/home/friedel/devel/ILLIXR/plugins/timewarp_gl/plugin.hpp</label>
        <link refid="plugins_2timewarp__gl_2plugin_8hpp_source"/>
      </node>
      <node id="23">
        <label>/home/friedel/devel/ILLIXR/plugins/timewarp_vk/plugin.hpp</label>
        <link refid="plugins_2timewarp__vk_2plugin_8hpp_source"/>
      </node>
      <node id="24">
        <label>/home/friedel/devel/ILLIXR/plugins/webcam/plugin.hpp</label>
        <link refid="plugins_2webcam_2plugin_8hpp_source"/>
      </node>
      <node id="25">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/data_injection/plugin.hpp</label>
        <link refid="plugins_2zed_2data__injection_2plugin_8hpp_source"/>
      </node>
      <node id="27">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/plugin.hpp</label>
        <link refid="plugins_2zed_2plugin_8hpp_source"/>
      </node>
      <node id="26">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/zed_camera_thread.hpp</label>
        <link refid="zed__camera__thread_8hpp_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>/home/friedel/devel/ILLIXR/services/pose_lookup/service.hpp</label>
        <link refid="pose__lookup_2service_8hpp_source"/>
      </node>
      <node id="38">
        <label>/home/friedel/devel/ILLIXR/services/pose_lookup/utils.hpp</label>
        <link refid="utils_8hpp_source"/>
      </node>
      <node id="28">
        <label>/home/friedel/devel/ILLIXR/services/vkdemo/service.hpp</label>
        <link refid="vkdemo_2service_8hpp_source"/>
      </node>
      <node id="39">
        <label>/home/friedel/devel/ILLIXR/src/sqlite_record_logger.hpp</label>
        <link refid="sqlite__record__logger_8hpp_source"/>
      </node>
      <node id="29">
        <label>/home/friedel/devel/ILLIXR/src/vulkan_display.hpp</label>
        <link refid="vulkan__display_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceILLIXR">ILLIXR</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="error__util_8hpp_1a40f7944fc46db77778d106ff61ceb4c5" prot="public" static="no">
        <name>RAC_ERRNO</name>
        <param></param>
        <initializer><ref refid="namespaceILLIXR_1ad26c997bbb58ee34724c1d1645ca3cf3" kindref="member">ILLIXR::report_and_clear_errno</ref>(__FILE__, __LINE__, __func__)</initializer>
        <briefdescription>
<para>Parameterless macro for report_and_clear_errno. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/error_util.hpp" line="17" column="13" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/error_util.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="error__util_8hpp_1af3826debdc7e3ffbf0a6c5df033a0583" prot="public" static="no">
        <name>RAC_ERRNO_MSG</name>
        <param><defname>msg</defname></param>
        <initializer><ref refid="namespaceILLIXR_1ad26c997bbb58ee34724c1d1645ca3cf3" kindref="member">ILLIXR::report_and_clear_errno</ref>(__FILE__, __LINE__, __func__, msg)</initializer>
        <briefdescription>
<para>RAC_ERRNO. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameterized macro for report_and_clear_errno.</para>
<para>Prints a message from the calling context for additional info. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/error_util.hpp" line="26" column="13" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/error_util.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;global_module_defs.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/spdlog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;cerrno&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAC_ERRNO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>RAC_ERRNO()<sp/>ILLIXR::report_and_clear_errno(__FILE__,<sp/>__LINE__,<sp/>__func__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAC_ERRNO_MSG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>RAC_ERRNO_MSG(msg)<sp/>ILLIXR::report_and_clear_errno(__FILE__,<sp/>__LINE__,<sp/>__func__,<sp/>msg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceILLIXR" kindref="compound">ILLIXR</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>use<sp/>switchboard<sp/>interface<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ENABLE_VERBOSE_ERRORS{getenv(</highlight><highlight class="stringliteral">&quot;ILLIXR_ENABLE_VERBOSE_ERRORS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceILLIXR_1a6a413eeed5a6a30c4b09dbbb4717fcb4" kindref="member">ILLIXR::str_to_bool</ref>(getenv(</highlight><highlight class="stringliteral">&quot;ILLIXR_ENABLE_VERBOSE_ERRORS&quot;</highlight><highlight class="normal">))};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="namespaceILLIXR_1ad26c997bbb58ee34724c1d1645ca3cf3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceILLIXR_1ad26c997bbb58ee34724c1d1645ca3cf3" kindref="member">report_and_clear_errno</ref>([[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>line,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>function,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ILLIXR::ENABLE_VERBOSE_ERRORS)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::get(</highlight><highlight class="stringliteral">&quot;illixr&quot;</highlight><highlight class="normal">)-&gt;error(</highlight><highlight class="stringliteral">&quot;[error_util]<sp/>||<sp/>Errno<sp/>was<sp/>set:<sp/>{}<sp/>@<sp/>{}:{}<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>errno,<sp/>file,<sp/>line,<sp/>function);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!msg.empty())<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::get(</highlight><highlight class="stringliteral">&quot;illixr&quot;</highlight><highlight class="normal">)-&gt;error(</highlight><highlight class="stringliteral">&quot;[error_util]|&gt;<sp/>Message:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="namespaceILLIXR_1a0f43f628688a8968a09a358bfa012a22" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceILLIXR_1a0f43f628688a8968a09a358bfa012a22" kindref="member">abort</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_val<sp/>=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::get(</highlight><highlight class="stringliteral">&quot;illixr&quot;</highlight><highlight class="normal">)-&gt;error(</highlight><highlight class="stringliteral">&quot;[error_util]<sp/>**<sp/>ERROR<sp/>**<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::abort();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::exit(error_val);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ILLIXR</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/include/illixr/error_util.hpp"/>
  </compounddef>
</doxygen>
