<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="plugins_2offload__rendering__server_2CMakeLists_8txt" kind="file" language="C++">
    <compoundname>CMakeLists.txt</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="plugins_2offload__rendering__server_2CMakeLists_8txt_1a2edb36652763d204a5a46f715c04c4f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cmake_minimum_required</definition>
        <argsstring>(VERSION 3.16) project(offload_rendering_server) get_external_for_plugin(Monado_vk) set(PLUGIN_NAME &quot;plugin.offload_rendering_server$</argsstring>
        <name>cmake_minimum_required</name>
        <param>
          <type>VERSION 3.</type>
          <declname>16</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/CMakeLists.txt" line="1" column="1" bodyfile="/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/CMakeLists.txt" bodystart="1" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="plugins_2offload__rendering__server_2CMakeLists_8txt_1adb01cf3aa61f8ab7855e8f018b977498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>set</definition>
        <argsstring>(PLUGIN_SOURCE &quot;${CMAKE_BINARY_DIR}/plugins/offload_rendering_server/plugin.cpp&quot;) set(CMAKE_CXX_STANDARD 17) set(CMAKE_CXX_STANDARD_REQUIRED ON) get_external_for_plugin(ILLIXR_FFmpeg) add_compile_definitions(ILLIXR_LIBAV) add_library($</argsstring>
        <name>set</name>
        <param>
          <type>PLUGIN_SOURCE &quot;${CMAKE_BINARY_DIR}/plugins/offload_rendering_server/plugin.cpp&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/CMakeLists.txt" line="8" column="1" bodyfile="/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/CMakeLists.txt" bodystart="8" bodyend="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">cmake_minimum_required(VERSION<sp/>3.16)</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">project(offload_rendering_server)</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>Note<sp/>that<sp/>the<sp/>offload<sp/>rendering<sp/>server<sp/>only<sp/>supports<sp/>Monado<sp/>(not<sp/>native)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">get_external_for_plugin(Monado_vk)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">set(PLUGIN_NAME<sp/></highlight><highlight class="stringliteral">&quot;plugin.offload_rendering_server${ILLIXR_BUILD_SUFFIX}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">set(PLUGIN_SOURCE<sp/></highlight><highlight class="stringliteral">&quot;${CMAKE_BINARY_DIR}/plugins/offload_rendering_server/plugin.cpp&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">set(CMAKE_CXX_STANDARD<sp/>17)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">set(CMAKE_CXX_STANDARD_REQUIRED<sp/>ON)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ffmpeg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">get_external_for_plugin(ILLIXR_FFmpeg)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">add_compile_definitions(ILLIXR_LIBAV)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">add_library(${PLUGIN_NAME}<sp/>SHARED<sp/>plugin.cpp</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin.hpp</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_rendering_server.cpp</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_rendering_server.hpp</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/data_format/pose_prediction.hpp</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/data_format/serializable_data.hpp</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/data_format/frame.hpp</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/phonebook.hpp</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/switchboard.hpp</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/threadloop.hpp</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/vk/display_provider.hpp</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/vk/ffmpeg_utils.hpp</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/vk/render_pass.hpp</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/vk/vulkan_utils.hpp</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/include/illixr/vk/vk_extension_request.hpp</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_SOURCE_DIR}/utils/serializable_data.cpp</highlight></codeline>
<codeline lineno="34"><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">target_compile_definitions(${PLUGIN_NAME}<sp/>PRIVATE<sp/>MONADO_REQUIRED)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">target_include_directories(${PLUGIN_NAME}<sp/>PUBLIC<sp/>${CMAKE_CURRENT_SOURCE_DIR})</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">set_target_properties(${PLUGIN_NAME}<sp/>PROPERTIES<sp/>OUTPUT_NAME<sp/>${PLUGIN_NAME})</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Vulkan_EXTERNAL)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>add_dependencies(${PLUGIN_NAME}<sp/>${Vulkan_DEP_STR})</highlight></codeline>
<codeline lineno="42"><highlight class="normal">endif()</highlight></codeline>
<codeline lineno="43"><highlight class="normal">if(ILLIXR_FFmpeg_EXTERNAL)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>add_dependencies(${PLUGIN_NAME}<sp/>${ILLIXR_FFmpeg_DEP_STR})</highlight></codeline>
<codeline lineno="45"><highlight class="normal">endif()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">target_link_libraries(${PLUGIN_NAME}<sp/>illixr_vulkan_utils<sp/>spdlog::spdlog<sp/>${Vulkan_LIBRARIES})</highlight></codeline>
<codeline lineno="48"><highlight class="normal">target_include_directories(${PLUGIN_NAME}<sp/>BEFORE<sp/>PUBLIC<sp/>${Vulkan_INCLUDE_DIRS}<sp/>${ILLIXR_SOURCE_DIR}/include)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">target_link_libraries(${PLUGIN_NAME}<sp/>${libavdevice_illixr_LIBRARIES}<sp/>${libavformat_illixr_LIBRARIES}<sp/>${libavcodec_illixr_LIBRARIES}<sp/>${libavutil_illixr_LIBRARIES})</highlight></codeline>
<codeline lineno="51"><highlight class="normal">target_include_directories(${PLUGIN_NAME}<sp/>PUBLIC<sp/>${libavcodec_illixr_INCLUDE_DIRS})</highlight></codeline>
<codeline lineno="52"><highlight class="normal">get_target_property(INC_DIRS<sp/>${PLUGIN_NAME}<sp/>INCLUDE_DIRECTORIES)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">install(TARGETS<sp/>${PLUGIN_NAME}<sp/>DESTINATION<sp/>lib)</highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/CMakeLists.txt"/>
  </compounddef>
</doxygen>
