<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classILLIXR_1_1record__header" kind="class" language="C++" prot="public">
    <compoundname>ILLIXR::record_header</compoundname>
    <includes refid="record__logger_8hpp" local="no">record_logger.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classILLIXR_1_1record__header_1a8a5f60f98477b1bbc818456ecb5420ee" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t ILLIXR::record_header::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <qualifiedname>ILLIXR::record_header::id_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="91" column="70" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classILLIXR_1_1record__header_1aa99eca5f47d7df887504c795cfa9c09a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ILLIXR::record_header::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <qualifiedname>ILLIXR::record_header::name_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="92" column="70" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classILLIXR_1_1record__header_1ae5f8f833b1e9e99d55d9c503015ea7f0" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; std::pair&lt; std::string, const std::type_info &amp; &gt; &gt;</type>
        <definition>const std::vector&lt;std::pair&lt;std::string, const std::type_info&amp;&gt; &gt; ILLIXR::record_header::columns_</definition>
        <argsstring></argsstring>
        <name>columns_</name>
        <qualifiedname>ILLIXR::record_header::columns_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="93" column="23" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classILLIXR_1_1record__header_1ad0fd92339e506fe180818884e771e900" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ILLIXR::record_header::record_header</definition>
        <argsstring>(const std::string &amp;name, std::vector&lt; std::pair&lt; std::string, const std::type_info &amp; &gt; &gt; columns_)</argsstring>
        <name>record_header</name>
        <qualifiedname>ILLIXR::record_header::record_header</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::vector&lt; std::pair&lt; std::string, const std::type_info &amp; &gt; &gt;</type>
          <declname>columns_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="31" column="5" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1record__header_1a24dd44346428035992b45b2e7be72f6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ILLIXR::record_header::operator==</definition>
        <argsstring>(const record_header &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>ILLIXR::record_header::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classILLIXR_1_1record__header" kindref="compound">record_header</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares two schemata. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="39" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="39" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1record__header_1aeb4cf041cf977f98953bb4eda647b620" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ILLIXR::record_header::operator!=</definition>
        <argsstring>(const record_header &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>ILLIXR::record_header::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classILLIXR_1_1record__header" kindref="compound">record_header</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="56" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1record__header_1a6cab40e4516417f9b1496b6de0dc4608" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t ILLIXR::record_header::get_id</definition>
        <argsstring>() const</argsstring>
        <name>get_id</name>
        <qualifiedname>ILLIXR::record_header::get_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="60" column="18" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1record__header_1a3e9b744ca174117584cc6a490ea8e79e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; ILLIXR::record_header::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <qualifiedname>ILLIXR::record_header::get_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="64" column="24" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1record__header_1ad7ca0a7680324c34dd9b09daa5476ff1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; ILLIXR::record_header::get_column_name</definition>
        <argsstring>(unsigned column) const</argsstring>
        <name>get_column_name</name>
        <qualifiedname>ILLIXR::record_header::get_column_name</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="68" column="24" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1record__header_1aa0cebd7d10fc2a2555e640998dad0bb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::type_info &amp;</type>
        <definition>const std::type_info &amp; ILLIXR::record_header::get_column_type</definition>
        <argsstring>(unsigned column) const</argsstring>
        <name>get_column_type</name>
        <qualifiedname>ILLIXR::record_header::get_column_type</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="72" column="27" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1record__header_1ad38a30d4e5bd790e6fe080e0219638b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned ILLIXR::record_header::get_columns</definition>
        <argsstring>() const</argsstring>
        <name>get_columns</name>
        <qualifiedname>ILLIXR::record_header::get_columns</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="76" column="15" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1record__header_1a9d1a0d1610fa44eb61cfd20b41da1360" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ILLIXR::record_header::to_string</definition>
        <argsstring>() const</argsstring>
        <name>to_string</name>
        <qualifiedname>ILLIXR::record_header::to_string</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="80" column="18" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="80" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Schema of each record. </para>
    </briefdescription>
    <detaileddescription>
<para>name_ should be globally unique. </para>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" line="29" column="1" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/record_logger.hpp" bodystart="29" bodyend="94"/>
    <listofallmembers>
      <member refid="classILLIXR_1_1record__header_1ae5f8f833b1e9e99d55d9c503015ea7f0" prot="private" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>columns_</name></member>
      <member refid="classILLIXR_1_1record__header_1ad7ca0a7680324c34dd9b09daa5476ff1" prot="public" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>get_column_name</name></member>
      <member refid="classILLIXR_1_1record__header_1aa0cebd7d10fc2a2555e640998dad0bb6" prot="public" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>get_column_type</name></member>
      <member refid="classILLIXR_1_1record__header_1ad38a30d4e5bd790e6fe080e0219638b9" prot="public" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>get_columns</name></member>
      <member refid="classILLIXR_1_1record__header_1a6cab40e4516417f9b1496b6de0dc4608" prot="public" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>get_id</name></member>
      <member refid="classILLIXR_1_1record__header_1a3e9b744ca174117584cc6a490ea8e79e" prot="public" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>get_name</name></member>
      <member refid="classILLIXR_1_1record__header_1a8a5f60f98477b1bbc818456ecb5420ee" prot="private" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>id_</name></member>
      <member refid="classILLIXR_1_1record__header_1aa99eca5f47d7df887504c795cfa9c09a" prot="private" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>name_</name></member>
      <member refid="classILLIXR_1_1record__header_1aeb4cf041cf977f98953bb4eda647b620" prot="public" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>operator!=</name></member>
      <member refid="classILLIXR_1_1record__header_1a24dd44346428035992b45b2e7be72f6c" prot="public" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>operator==</name></member>
      <member refid="classILLIXR_1_1record__header_1ad0fd92339e506fe180818884e771e900" prot="public" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>record_header</name></member>
      <member refid="classILLIXR_1_1record__header_1a9d1a0d1610fa44eb61cfd20b41da1360" prot="public" virt="non-virtual"><scope>ILLIXR::record_header</scope><name>to_string</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
