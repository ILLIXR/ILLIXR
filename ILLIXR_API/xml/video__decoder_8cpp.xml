<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="video__decoder_8cpp" kind="file" language="C++">
    <compoundname>video_decoder.cpp</compoundname>
    <includes refid="video__decoder_8hpp" local="yes">video_decoder.hpp</includes>
    <includes refid="error__util_8hpp" local="yes">illixr/error_util.hpp</includes>
    <includes local="no">gst/app/gstappsrc.h</includes>
    <includes local="no">utility</includes>
    <incdepgraph>
      <node id="9">
        <label>illixr/error_util.hpp</label>
        <link refid="error__util_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>global_module_defs.hpp</label>
        <link refid="global__module__defs_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>phonebook.hpp</label>
        <link refid="phonebook_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>relative_clock.hpp</label>
        <link refid="relative__clock_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/video_decoder.cpp</label>
        <link refid="video__decoder_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>video_decoder.hpp</label>
        <link refid="video__decoder_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>algorithm</label>
      </node>
      <node id="13">
        <label>cassert</label>
      </node>
      <node id="22">
        <label>chrono</label>
      </node>
      <node id="25">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>condition_variable</label>
      </node>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="27">
        <label>gst/app/gstappsrc.h</label>
      </node>
      <node id="3">
        <label>gst/gst.h</label>
      </node>
      <node id="20">
        <label>iostream</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="15">
        <label>mutex</label>
      </node>
      <node id="6">
        <label>opencv2/core/mat.hpp</label>
      </node>
      <node id="7">
        <label>queue</label>
      </node>
      <node id="23">
        <label>ratio</label>
      </node>
      <node id="16">
        <label>shared_mutex</label>
      </node>
      <node id="21">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="17">
        <label>stdexcept</label>
      </node>
      <node id="26">
        <label>string</label>
      </node>
      <node id="18">
        <label>typeindex</label>
      </node>
      <node id="19">
        <label>unordered_map</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceILLIXR">ILLIXR</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="video__decoder_8cpp_1a6a5a49798a96db987404c8aa3b804fe3" prot="public" static="no">
        <name>IMG_WIDTH</name>
        <initializer>752</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/video_decoder.cpp" line="19" column="14" bodyfile="/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/video_decoder.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="video__decoder_8cpp_1a509566621a0b52524e800f69546c94be" prot="public" static="no">
        <name>IMG_HEIGHT</name>
        <initializer>480</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/video_decoder.cpp" line="20" column="13" bodyfile="/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/video_decoder.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>steven<sp/>on<sp/>7/8/22.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;video_decoder.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;illixr/error_util.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gst/app/gstappsrc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceILLIXR" kindref="compound">ILLIXR</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>ZED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ZED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>IMG_WIDTH<sp/><sp/>672</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>IMG_HEIGHT<sp/>376</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>IMG_WIDTH<sp/><sp/>752</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>IMG_HEIGHT<sp/>480</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">GstFlowReturn<sp/>cb_new_sample(GstElement*<sp/>appsink,<sp/>gpointer*<sp/>user_data)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">video_decoder*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(user_data)-&gt;cb_appsink(appsink);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>video_decoder::create_pipelines()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>gst_init(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>appsrc_img0_<sp/><sp/>=<sp/>gst_element_factory_make(</highlight><highlight class="stringliteral">&quot;appsrc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;appsrc_img0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>appsrc_img1_<sp/><sp/>=<sp/>gst_element_factory_make(</highlight><highlight class="stringliteral">&quot;appsrc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;appsrc_img1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>appsink_img0_<sp/>=<sp/>gst_element_factory_make(</highlight><highlight class="stringliteral">&quot;appsink&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;appsink_img0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>appsink_img1_<sp/>=<sp/>gst_element_factory_make(</highlight><highlight class="stringliteral">&quot;appsink&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;appsink_img1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nvvideoconvert_0<sp/>=<sp/>gst_element_factory_make(</highlight><highlight class="stringliteral">&quot;nvvideoconvert&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nvvideoconvert0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nvvideoconvert_1<sp/>=<sp/>gst_element_factory_make(</highlight><highlight class="stringliteral">&quot;nvvideoconvert&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nvvideoconvert1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoder_img0<sp/>=<sp/>gst_element_factory_make(</highlight><highlight class="stringliteral">&quot;nvv4l2decoder&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;decoder_img0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoder_img1<sp/>=<sp/>gst_element_factory_make(</highlight><highlight class="stringliteral">&quot;nvv4l2decoder&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;decoder_img1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>caps_filter_0<sp/>=<sp/>gst_element_factory_make(</highlight><highlight class="stringliteral">&quot;capsfilter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;caps_filter_0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>caps_filter_1<sp/>=<sp/>gst_element_factory_make(</highlight><highlight class="stringliteral">&quot;capsfilter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;caps_filter_1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(G_OBJECT(caps_filter_0),<sp/></highlight><highlight class="stringliteral">&quot;caps&quot;</highlight><highlight class="normal">,<sp/>gst_caps_from_string(</highlight><highlight class="stringliteral">&quot;video/x-raw,format=GRAY8&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(G_OBJECT(caps_filter_1),<sp/></highlight><highlight class="stringliteral">&quot;caps&quot;</highlight><highlight class="normal">,<sp/>gst_caps_from_string(</highlight><highlight class="stringliteral">&quot;video/x-raw,format=GRAY8&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>caps<sp/>with<sp/>width<sp/>and<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>caps_x265<sp/>=<sp/>gst_caps_new_simple(</highlight><highlight class="stringliteral">&quot;video/x-h264&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;stream-format&quot;</highlight><highlight class="normal">,<sp/>G_TYPE_STRING,<sp/></highlight><highlight class="stringliteral">&quot;byte-stream&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alignment&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G_TYPE_STRING,<sp/></highlight><highlight class="stringliteral">&quot;au&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(G_OBJECT(appsrc_img0_),<sp/></highlight><highlight class="stringliteral">&quot;caps&quot;</highlight><highlight class="normal">,<sp/>caps_x265,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(G_OBJECT(appsrc_img1_),<sp/></highlight><highlight class="stringliteral">&quot;caps&quot;</highlight><highlight class="normal">,<sp/>caps_x265,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>gst_caps_unref(caps_x265);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(G_OBJECT(appsrc_img0_),<sp/></highlight><highlight class="stringliteral">&quot;stream-type&quot;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;format&quot;</highlight><highlight class="normal">,<sp/>GST_FORMAT_BYTES,<sp/></highlight><highlight class="stringliteral">&quot;is-live&quot;</highlight><highlight class="normal">,<sp/>TRUE,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(G_OBJECT(appsrc_img1_),<sp/></highlight><highlight class="stringliteral">&quot;stream-type&quot;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;format&quot;</highlight><highlight class="normal">,<sp/>GST_FORMAT_BYTES,<sp/></highlight><highlight class="stringliteral">&quot;is-live&quot;</highlight><highlight class="normal">,<sp/>TRUE,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(G_OBJECT(decoder_img0),<sp/></highlight><highlight class="stringliteral">&quot;low-latency-mode&quot;</highlight><highlight class="normal">,<sp/>TRUE,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(G_OBJECT(decoder_img1),<sp/></highlight><highlight class="stringliteral">&quot;low-latency-mode&quot;</highlight><highlight class="normal">,<sp/>TRUE,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(appsink_img0_,<sp/></highlight><highlight class="stringliteral">&quot;emit-signals&quot;</highlight><highlight class="normal">,<sp/>TRUE,<sp/></highlight><highlight class="stringliteral">&quot;sync&quot;</highlight><highlight class="normal">,<sp/>FALSE,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(appsink_img1_,<sp/></highlight><highlight class="stringliteral">&quot;emit-signals&quot;</highlight><highlight class="normal">,<sp/>TRUE,<sp/></highlight><highlight class="stringliteral">&quot;sync&quot;</highlight><highlight class="normal">,<sp/>FALSE,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(appsink_img0_,<sp/></highlight><highlight class="stringliteral">&quot;new-sample&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(cb_new_sample),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(appsink_img1_,<sp/></highlight><highlight class="stringliteral">&quot;new-sample&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(cb_new_sample),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeline_img0_<sp/>=<sp/>gst_pipeline_new(</highlight><highlight class="stringliteral">&quot;pipeline_img0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeline_img1_<sp/>=<sp/>gst_pipeline_new(</highlight><highlight class="stringliteral">&quot;pipeline_img1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>gst_bin_add_many(GST_BIN(pipeline_img0_),<sp/>appsrc_img0_,<sp/>decoder_img0,<sp/>nvvideoconvert_0,<sp/>caps_filter_0,<sp/>appsink_img0_,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>gst_bin_add_many(GST_BIN(pipeline_img1_),<sp/>appsrc_img1_,<sp/>decoder_img1,<sp/>nvvideoconvert_1,<sp/>caps_filter_1,<sp/>appsink_img1_,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gst_element_link_many(appsrc_img0_,<sp/>decoder_img0,<sp/>nvvideoconvert_0,<sp/>caps_filter_0,<sp/>appsink_img0_,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!gst_element_link_many(appsrc_img1_,<sp/>decoder_img1,<sp/>nvvideoconvert_1,<sp/>caps_filter_1,<sp/>appsink_img1_,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceILLIXR_1a0f43f628688a8968a09a358bfa012a22" kindref="member">abort</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>link<sp/>elements&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>gst_element_set_state(pipeline_img0_,<sp/>GST_STATE_PLAYING);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>gst_element_set_state(pipeline_img1_,<sp/>GST_STATE_PLAYING);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">video_decoder::video_decoder(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(cv::Mat&amp;&amp;,<sp/>cv::Mat&amp;&amp;)&gt;<sp/>callback)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>callback_(std::move(callback))<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>video_decoder::init()<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>create_pipelines();</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>video_decoder::enqueue(std::string&amp;<sp/>img0,<sp/>std::string&amp;<sp/>img1)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buffer_img0<sp/>=</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gst_buffer_new_wrapped_full(GST_MEMORY_FLAG_READONLY,<sp/>img0.data(),<sp/>img0.size(),<sp/>0,<sp/>img0.size(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buffer_img1<sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gst_buffer_new_wrapped_full(GST_MEMORY_FLAG_READONLY,<sp/>img1.data(),<sp/>img1.size(),<sp/>0,<sp/>img1.size(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>GST_BUFFER_OFFSET(buffer_img0)<sp/>=<sp/>num_samples_;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>GST_BUFFER_OFFSET(buffer_img1)<sp/>=<sp/>num_samples_;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>num_samples_++;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret_img0<sp/>=<sp/>gst_app_src_push_buffer(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">GstAppSrc*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appsrc_img0_),<sp/>buffer_img0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret_img1<sp/>=<sp/>gst_app_src_push_buffer(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">GstAppSrc*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appsrc_img1_),<sp/>buffer_img1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret_img0<sp/>!=<sp/>GST_FLOW_OK<sp/>||<sp/>ret_img1<sp/>!=<sp/>GST_FLOW_OK)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceILLIXR_1a0f43f628688a8968a09a358bfa012a22" kindref="member">abort</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>push<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">GstFlowReturn<sp/>video_decoder::cb_appsink(GstElement*<sp/>sink)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>GstSample*<sp/>sample;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_emit_by_name(sink,<sp/></highlight><highlight class="stringliteral">&quot;pull-sample&quot;</highlight><highlight class="normal">,<sp/>&amp;sample);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GstBuffer*<sp/>buffer<sp/>=<sp/>gst_sample_get_buffer(sample);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(pipeline_sync_mutex_);<sp/></highlight><highlight class="comment">//<sp/>lock<sp/>acquired</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sink<sp/>==<sp/>appsink_img0_)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gst_buffer_map(buffer,<sp/>&amp;img0_map_,<sp/>GST_MAP_READ);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img0_ready_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gst_buffer_map(buffer,<sp/>&amp;img1_map_,<sp/>GST_MAP_READ);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img1_ready_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(img0_ready_<sp/>&amp;&amp;<sp/>img1_ready_)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_(cv::Mat(IMG_HEIGHT,<sp/>IMG_WIDTH,<sp/>CV_8UC1,<sp/>img0_map_.data),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat(IMG_HEIGHT,<sp/>IMG_WIDTH,<sp/>CV_8UC1,<sp/>img1_map_.data));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img0_ready_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img1_ready_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock.unlock();<sp/></highlight><highlight class="comment">//<sp/>unlock<sp/>and<sp/>notify<sp/>the<sp/>waiting<sp/>thread<sp/>to<sp/>clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline_sync_.notify_one();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline_sync_.wait(lock,<sp/>[&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!img0_ready_<sp/>&amp;&amp;<sp/>!img1_ready_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>unlocks<sp/>the<sp/>mutex<sp/>if<sp/>condition<sp/>is<sp/>not<sp/>met</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock.unlock();<sp/></highlight><highlight class="comment">//<sp/>wait<sp/>has<sp/>acquired<sp/>the<sp/>lock.<sp/>unlock<sp/>it<sp/>and<sp/>start<sp/>cleaning<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sink<sp/>==<sp/>appsink_img0_)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gst_buffer_unmap(buffer,<sp/>&amp;img0_map_);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gst_buffer_unmap(buffer,<sp/>&amp;img1_map_);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gst_sample_unref(sample);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GST_FLOW_OK;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GST_FLOW_ERROR;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ILLIXR</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/video_decoder.cpp"/>
  </compounddef>
</doxygen>
