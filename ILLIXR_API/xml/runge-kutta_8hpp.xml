<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="runge-kutta_8hpp" kind="file" language="C++">
    <compoundname>runge-kutta.hpp</compoundname>
    <includes refid="proper__quaternion_8hpp" local="yes">data_format/proper_quaternion.hpp</includes>
    <includes local="no">eigen3/Eigen/Dense</includes>
    <includes local="no">iostream</includes>
    <includedby refid="plugins_2rk4__integrator_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/rk4_integrator/plugin.cpp</includedby>
    <includedby refid="pose__prediction_2service_8cpp" local="yes">/home/friedel/devel/ILLIXR/services/pose_prediction/service.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>data_format/proper_quaternion.hpp</label>
        <link refid="proper__quaternion_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/include/illixr/runge-kutta.hpp</label>
        <link refid="runge-kutta_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innerclass refid="structILLIXR_1_1state__plus" prot="public">ILLIXR::state_plus</innerclass>
    <innernamespace refid="namespaceILLIXR">ILLIXR</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;data_format/proper_quaternion.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eigen3/Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceILLIXR" kindref="compound">ILLIXR</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data_format::proper_quaterniond<sp/>dq_0(1.,<sp/>0.,<sp/>0.,<sp/>0.);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10" refid="namespaceILLIXR_1aec11e8f2ff03d257d7c2afae3cb2f4dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceILLIXR_1aec11e8f2ff03d257d7c2afae3cb2f4dd" kindref="member">Gravity</ref>(0.0,<sp/>0.0,<sp/>9.81);<sp/></highlight></codeline>
<codeline lineno="17" refid="namespaceILLIXR_1a5bd8d81cfe65b937340c67e9a589019b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::Matrix3d<sp/><ref refid="namespaceILLIXR_1a5bd8d81cfe65b937340c67e9a589019b" kindref="member">symmetric_skew</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>skew_q;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>skew_q<sp/>&lt;&lt;<sp/>0,<sp/>-vec[2],<sp/>vec[1],<sp/>vec[2],<sp/>0,<sp/>-vec[0],<sp/>-vec[1],<sp/>vec[0],<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>skew_q;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespaceILLIXR_1a8c301a452ca3632a038471cd4a8971d0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::Matrix4d<sp/><ref refid="namespaceILLIXR_1a8c301a452ca3632a038471cd4a8971d0" kindref="member">makeOmega</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix4d<sp/>omega<sp/><sp/><sp/>=<sp/>Eigen::Matrix4d::Zero();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>omega.block&lt;3,<sp/>3&gt;(0,<sp/>0)<sp/>=<sp/>-<ref refid="namespaceILLIXR_1a5bd8d81cfe65b937340c67e9a589019b" kindref="member">symmetric_skew</ref>(w);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>omega.block&lt;1,<sp/>3&gt;(3,<sp/>0)<sp/>=<sp/>-w.transpose();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>omega.block&lt;3,<sp/>1&gt;(0,<sp/>3)<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>omega;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="namespaceILLIXR_1a148f0178da2163d9502c8baa98b80e25" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/><ref refid="namespaceILLIXR_1a148f0178da2163d9502c8baa98b80e25" kindref="member">delta_q</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref>&amp;<sp/>k_n)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>dq(dq_0<sp/>+<sp/>0.5<sp/>*<sp/>k_n);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>dq.<ref refid="classILLIXR_1_1data__format_1_1proper__quaternion_1a682f50b5b1d69abbf5ac28d0d3ab9fc1" kindref="member">normalize</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dq;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespaceILLIXR_1a2ed3180c01ca68739457d9e6e1bb345b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/><ref refid="namespaceILLIXR_1a2ed3180c01ca68739457d9e6e1bb345b" kindref="member">q_dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>av,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref>&amp;<sp/>dq)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref>(Eigen::Vector4d(0.5<sp/>*<sp/><ref refid="namespaceILLIXR_1a8c301a452ca3632a038471cd4a8971d0" kindref="member">makeOmega</ref>(av)<sp/>*<sp/>dq.<ref refid="classILLIXR_1_1data__format_1_1proper__quaternion_1a716e4dde8fcc89c6bf218e975bcce36f" kindref="member">asVector</ref>()));</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="namespaceILLIXR_1ab37b29077ea259ad97e7a7a6eda126ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/><ref refid="namespaceILLIXR_1ab37b29077ea259ad97e7a7a6eda126ba" kindref="member">p_dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>iv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>k_n)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Vector3d(iv<sp/>+<sp/>0.5<sp/>*<sp/>k_n);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespaceILLIXR_1a262e769f9eff33421412d36cd4c20767" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/><ref refid="namespaceILLIXR_1a262e769f9eff33421412d36cd4c20767" kindref="member">v_dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref>&amp;<sp/>dq,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref>&amp;<sp/>q,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>l_acc)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>temp<sp/>=<sp/>q<sp/>*<sp/>dq;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>temp.<ref refid="classILLIXR_1_1data__format_1_1proper__quaternion_1a682f50b5b1d69abbf5ac28d0d3ab9fc1" kindref="member">normalize</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp.toRotationMatrix()<sp/>*<sp/>l_acc<sp/>-<sp/><ref refid="namespaceILLIXR_1aec11e8f2ff03d257d7c2afae3cb2f4dd" kindref="member">Gravity</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="94" refid="namespaceILLIXR_1a336855893ddf44edcfa95f29f59de96b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceILLIXR_1a336855893ddf44edcfa95f29f59de96b" kindref="member">solve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>yn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>k1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>k2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>k3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>k4)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yn<sp/>+<sp/>(k1<sp/>+<sp/>2.<sp/>*<sp/>(k2<sp/>+<sp/>k3)<sp/>+<sp/>k4)<sp/>/<sp/>6.;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structILLIXR_1_1state__plus" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>orientation;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref>&amp;<sp/>pq,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>vel,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>pos)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>orientation(pq)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>velocity(vel)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>position(pos)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Quaterniond&amp;<sp/>pq,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>vel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>pos)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>orientation(pq)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>velocity(vel)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>position(pos)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>&amp;<sp/>sp)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Quat<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sp.orientation<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vel<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sp.velocity<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pos<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sp.position<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="namespaceILLIXR_1a2877edb6b96154ae5d478c6d98a0b7c0" refkind="member"><highlight class="normal"><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref><sp/><ref refid="namespaceILLIXR_1a2877edb6b96154ae5d478c6d98a0b7c0" kindref="member">predict_mean_rk4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>&amp;<sp/>sp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>ang_vel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>linear_acc,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>ang_vel2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>linear_acc2)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/><sp/><sp/><sp/><sp/><sp/><sp/>av<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ang_vel;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/><sp/><sp/><sp/><sp/><sp/><sp/>la<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>linear_acc;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>delta_av<sp/>=<sp/>(ang_vel2<sp/>-<sp/>ang_vel)<sp/>/<sp/>dt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>delta_la<sp/>=<sp/>(linear_acc2<sp/>-<sp/>linear_acc)<sp/>/<sp/>dt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y0<sp/>================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>q_0<sp/>=<sp/>sp.orientation;<sp/></highlight><highlight class="comment">//<sp/>initial<sp/>orientation<sp/>quaternion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_0<sp/>=<sp/>sp.position;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>position<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_0<sp/>=<sp/>sp.velocity;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>velocity<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>RK4<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>orientation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>k1_q<sp/>=<sp/><ref refid="namespaceILLIXR_1a2ed3180c01ca68739457d9e6e1bb345b" kindref="member">q_dot</ref>(av,<sp/>dq_0)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>av<sp/>+=<sp/>0.5<sp/>*<sp/>delta_av<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>dq_1<sp/>=<sp/><ref refid="namespaceILLIXR_1a148f0178da2163d9502c8baa98b80e25" kindref="member">delta_q</ref>(k1_q);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>k2_q<sp/>=<sp/><ref refid="namespaceILLIXR_1a2ed3180c01ca68739457d9e6e1bb345b" kindref="member">q_dot</ref>(av,<sp/>dq_1)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>dq_2<sp/>=<sp/><ref refid="namespaceILLIXR_1a148f0178da2163d9502c8baa98b80e25" kindref="member">delta_q</ref>(k2_q);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>k3_q<sp/>=<sp/><ref refid="namespaceILLIXR_1a2ed3180c01ca68739457d9e6e1bb345b" kindref="member">q_dot</ref>(av,<sp/>dq_2)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>av<sp/>+=<sp/>0.5<sp/>*<sp/>delta_av<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>dq_3<sp/>=<sp/><ref refid="namespaceILLIXR_1a148f0178da2163d9502c8baa98b80e25" kindref="member">delta_q</ref>(2.<sp/>*<sp/>k3_q);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>k4_q<sp/>=<sp/><ref refid="namespaceILLIXR_1a2ed3180c01ca68739457d9e6e1bb345b" kindref="member">q_dot</ref>(av,<sp/>dq_3)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>k1_v<sp/>=<sp/><ref refid="namespaceILLIXR_1a262e769f9eff33421412d36cd4c20767" kindref="member">v_dot</ref>(dq_0,<sp/>q_0,<sp/>la)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>la<sp/>+=<sp/>0.5<sp/>*<sp/>delta_la<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>k2_v<sp/>=<sp/><ref refid="namespaceILLIXR_1a262e769f9eff33421412d36cd4c20767" kindref="member">v_dot</ref>(dq_1,<sp/>q_0,<sp/>la)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>k3_v<sp/>=<sp/><ref refid="namespaceILLIXR_1a262e769f9eff33421412d36cd4c20767" kindref="member">v_dot</ref>(dq_2,<sp/>q_0,<sp/>la)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>la<sp/>+=<sp/>0.5<sp/>*<sp/>delta_la<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>k4_v<sp/>=<sp/><ref refid="namespaceILLIXR_1a262e769f9eff33421412d36cd4c20767" kindref="member">v_dot</ref>(dq_3,<sp/>q_0,<sp/>la)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>k1_p<sp/>=<sp/>v_0<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>k2_p<sp/>=<sp/><ref refid="namespaceILLIXR_1ab37b29077ea259ad97e7a7a6eda126ba" kindref="member">p_dot</ref>(v_0,<sp/>k1_v)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>k3_p<sp/>=<sp/><ref refid="namespaceILLIXR_1ab37b29077ea259ad97e7a7a6eda126ba" kindref="member">p_dot</ref>(v_0,<sp/>k2_v)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>k4_p<sp/>=<sp/><ref refid="namespaceILLIXR_1ab37b29077ea259ad97e7a7a6eda126ba" kindref="member">p_dot</ref>(v_0,<sp/>2.<sp/>*<sp/>k3_v)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y+dt<sp/>================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1data__format_1_1proper__quaternion" kindref="compound">data_format::proper_quaterniond</ref><sp/>dq<sp/>=<sp/><ref refid="namespaceILLIXR_1a336855893ddf44edcfa95f29f59de96b" kindref="member">solve</ref>(dq_0,<sp/>k1_q,<sp/>k2_q,<sp/>k3_q,<sp/>k4_q);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>dq.<ref refid="classILLIXR_1_1data__format_1_1proper__quaternion_1a682f50b5b1d69abbf5ac28d0d3ab9fc1" kindref="member">normalize</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>.orientation<sp/>=<sp/>q_0<sp/>*<sp/>dq;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>.orientation.<ref refid="classILLIXR_1_1data__format_1_1proper__quaternion_1a682f50b5b1d69abbf5ac28d0d3ab9fc1" kindref="member">normalize</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>.position<sp/>=<sp/><ref refid="namespaceILLIXR_1a336855893ddf44edcfa95f29f59de96b" kindref="member">solve</ref>(p_0,<sp/>k1_p,<sp/>k2_p,<sp/>k3_p,<sp/>k4_p);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>.velocity<sp/>=<sp/><ref refid="namespaceILLIXR_1a336855893ddf44edcfa95f29f59de96b" kindref="member">solve</ref>(v_0,<sp/>k1_v,<sp/>k2_v,<sp/>k3_v,<sp/>k4_v);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1state__plus" kindref="compound">state_plus</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ILLIXR</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/include/illixr/runge-kutta.hpp"/>
  </compounddef>
</doxygen>
