// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sr_input.proto

#ifndef PROTOBUF_INCLUDED_sr_5finput_2eproto
#define PROTOBUF_INCLUDED_sr_5finput_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_sr_5finput_2eproto 

namespace protobuf_sr_5finput_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_sr_5finput_2eproto
namespace sr_input_proto {
class CompressMeshData;
class CompressMeshDataDefaultTypeInternal;
extern CompressMeshDataDefaultTypeInternal _CompressMeshData_default_instance_;
class ImgData;
class ImgDataDefaultTypeInternal;
extern ImgDataDefaultTypeInternal _ImgData_default_instance_;
class MeshData;
class MeshDataDefaultTypeInternal;
extern MeshDataDefaultTypeInternal _MeshData_default_instance_;
class Pose;
class PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
class SRSendData;
class SRSendDataDefaultTypeInternal;
extern SRSendDataDefaultTypeInternal _SRSendData_default_instance_;
}  // namespace sr_input_proto
namespace google {
namespace protobuf {
template<> ::sr_input_proto::CompressMeshData* Arena::CreateMaybeMessage<::sr_input_proto::CompressMeshData>(Arena*);
template<> ::sr_input_proto::ImgData* Arena::CreateMaybeMessage<::sr_input_proto::ImgData>(Arena*);
template<> ::sr_input_proto::MeshData* Arena::CreateMaybeMessage<::sr_input_proto::MeshData>(Arena*);
template<> ::sr_input_proto::Pose* Arena::CreateMaybeMessage<::sr_input_proto::Pose>(Arena*);
template<> ::sr_input_proto::SRSendData* Arena::CreateMaybeMessage<::sr_input_proto::SRSendData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sr_input_proto {

// ===================================================================

class Pose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sr_input_proto.Pose) */ {
 public:
  Pose();
  virtual ~Pose();

  Pose(const Pose& from);

  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pose(Pose&& from) noexcept
    : Pose() {
    *this = ::std::move(from);
  }

  inline Pose& operator=(Pose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Pose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pose* internal_default_instance() {
    return reinterpret_cast<const Pose*>(
               &_Pose_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Pose* other);
  friend void swap(Pose& a, Pose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pose* New() const final {
    return CreateMaybeMessage<Pose>(NULL);
  }

  Pose* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pose>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Pose& from);
  void MergeFrom(const Pose& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double p_x = 1;
  void clear_p_x();
  static const int kPXFieldNumber = 1;
  double p_x() const;
  void set_p_x(double value);

  // double p_y = 2;
  void clear_p_y();
  static const int kPYFieldNumber = 2;
  double p_y() const;
  void set_p_y(double value);

  // double p_z = 3;
  void clear_p_z();
  static const int kPZFieldNumber = 3;
  double p_z() const;
  void set_p_z(double value);

  // double o_x = 4;
  void clear_o_x();
  static const int kOXFieldNumber = 4;
  double o_x() const;
  void set_o_x(double value);

  // double o_y = 5;
  void clear_o_y();
  static const int kOYFieldNumber = 5;
  double o_y() const;
  void set_o_y(double value);

  // double o_z = 6;
  void clear_o_z();
  static const int kOZFieldNumber = 6;
  double o_z() const;
  void set_o_z(double value);

  // double o_w = 7;
  void clear_o_w();
  static const int kOWFieldNumber = 7;
  double o_w() const;
  void set_o_w(double value);

  // @@protoc_insertion_point(class_scope:sr_input_proto.Pose)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double p_x_;
  double p_y_;
  double p_z_;
  double o_x_;
  double o_y_;
  double o_z_;
  double o_w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sr_5finput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sr_input_proto.ImgData) */ {
 public:
  ImgData();
  virtual ~ImgData();

  ImgData(const ImgData& from);

  inline ImgData& operator=(const ImgData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImgData(ImgData&& from) noexcept
    : ImgData() {
    *this = ::std::move(from);
  }

  inline ImgData& operator=(ImgData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImgData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImgData* internal_default_instance() {
    return reinterpret_cast<const ImgData*>(
               &_ImgData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ImgData* other);
  friend void swap(ImgData& a, ImgData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImgData* New() const final {
    return CreateMaybeMessage<ImgData>(NULL);
  }

  ImgData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImgData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImgData& from);
  void MergeFrom(const ImgData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes img_data = 1;
  void clear_img_data();
  static const int kImgDataFieldNumber = 1;
  const ::std::string& img_data() const;
  void set_img_data(const ::std::string& value);
  #if LANG_CXX11
  void set_img_data(::std::string&& value);
  #endif
  void set_img_data(const char* value);
  void set_img_data(const void* value, size_t size);
  ::std::string* mutable_img_data();
  ::std::string* release_img_data();
  void set_allocated_img_data(::std::string* img_data);

  // int32 rows = 2;
  void clear_rows();
  static const int kRowsFieldNumber = 2;
  ::google::protobuf::int32 rows() const;
  void set_rows(::google::protobuf::int32 value);

  // int32 columns = 3;
  void clear_columns();
  static const int kColumnsFieldNumber = 3;
  ::google::protobuf::int32 columns() const;
  void set_columns(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sr_input_proto.ImgData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr img_data_;
  ::google::protobuf::int32 rows_;
  ::google::protobuf::int32 columns_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sr_5finput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeshData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sr_input_proto.MeshData) */ {
 public:
  MeshData();
  virtual ~MeshData();

  MeshData(const MeshData& from);

  inline MeshData& operator=(const MeshData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeshData(MeshData&& from) noexcept
    : MeshData() {
    *this = ::std::move(from);
  }

  inline MeshData& operator=(MeshData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeshData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeshData* internal_default_instance() {
    return reinterpret_cast<const MeshData*>(
               &_MeshData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MeshData* other);
  friend void swap(MeshData& a, MeshData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeshData* New() const final {
    return CreateMaybeMessage<MeshData>(NULL);
  }

  MeshData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MeshData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MeshData& from);
  void MergeFrom(const MeshData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeshData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double v_x = 1;
  int v_x_size() const;
  void clear_v_x();
  static const int kVXFieldNumber = 1;
  double v_x(int index) const;
  void set_v_x(int index, double value);
  void add_v_x(double value);
  const ::google::protobuf::RepeatedField< double >&
      v_x() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_v_x();

  // repeated double v_y = 2;
  int v_y_size() const;
  void clear_v_y();
  static const int kVYFieldNumber = 2;
  double v_y(int index) const;
  void set_v_y(int index, double value);
  void add_v_y(double value);
  const ::google::protobuf::RepeatedField< double >&
      v_y() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_v_y();

  // repeated double v_f = 3;
  int v_f_size() const;
  void clear_v_f();
  static const int kVFFieldNumber = 3;
  double v_f(int index) const;
  void set_v_f(int index, double value);
  void add_v_f(double value);
  const ::google::protobuf::RepeatedField< double >&
      v_f() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_v_f();

  // repeated int32 c_r = 4;
  int c_r_size() const;
  void clear_c_r();
  static const int kCRFieldNumber = 4;
  ::google::protobuf::int32 c_r(int index) const;
  void set_c_r(int index, ::google::protobuf::int32 value);
  void add_c_r(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      c_r() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_c_r();

  // repeated int32 c_g = 5;
  int c_g_size() const;
  void clear_c_g();
  static const int kCGFieldNumber = 5;
  ::google::protobuf::int32 c_g(int index) const;
  void set_c_g(int index, ::google::protobuf::int32 value);
  void add_c_g(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      c_g() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_c_g();

  // repeated int32 c_b = 6;
  int c_b_size() const;
  void clear_c_b();
  static const int kCBFieldNumber = 6;
  ::google::protobuf::int32 c_b(int index) const;
  void set_c_b(int index, ::google::protobuf::int32 value);
  void add_c_b(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      c_b() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_c_b();

  // repeated int64 f_1 = 7;
  int f_1_size() const;
  void clear_f_1();
  static const int kF1FieldNumber = 7;
  ::google::protobuf::int64 f_1(int index) const;
  void set_f_1(int index, ::google::protobuf::int64 value);
  void add_f_1(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      f_1() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_f_1();

  // repeated int64 f_2 = 8;
  int f_2_size() const;
  void clear_f_2();
  static const int kF2FieldNumber = 8;
  ::google::protobuf::int64 f_2(int index) const;
  void set_f_2(int index, ::google::protobuf::int64 value);
  void add_f_2(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      f_2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_f_2();

  // repeated int64 f_3 = 9;
  int f_3_size() const;
  void clear_f_3();
  static const int kF3FieldNumber = 9;
  ::google::protobuf::int64 f_3(int index) const;
  void set_f_3(int index, ::google::protobuf::int64 value);
  void add_f_3(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      f_3() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_f_3();

  // @@protoc_insertion_point(class_scope:sr_input_proto.MeshData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > v_x_;
  mutable int _v_x_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > v_y_;
  mutable int _v_y_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > v_f_;
  mutable int _v_f_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > c_r_;
  mutable int _c_r_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > c_g_;
  mutable int _c_g_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > c_b_;
  mutable int _c_b_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > f_1_;
  mutable int _f_1_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > f_2_;
  mutable int _f_2_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > f_3_;
  mutable int _f_3_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sr_5finput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompressMeshData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sr_input_proto.CompressMeshData) */ {
 public:
  CompressMeshData();
  virtual ~CompressMeshData();

  CompressMeshData(const CompressMeshData& from);

  inline CompressMeshData& operator=(const CompressMeshData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompressMeshData(CompressMeshData&& from) noexcept
    : CompressMeshData() {
    *this = ::std::move(from);
  }

  inline CompressMeshData& operator=(CompressMeshData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CompressMeshData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompressMeshData* internal_default_instance() {
    return reinterpret_cast<const CompressMeshData*>(
               &_CompressMeshData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CompressMeshData* other);
  friend void swap(CompressMeshData& a, CompressMeshData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompressMeshData* New() const final {
    return CreateMaybeMessage<CompressMeshData>(NULL);
  }

  CompressMeshData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompressMeshData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompressMeshData& from);
  void MergeFrom(const CompressMeshData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompressMeshData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes draco_data = 1;
  void clear_draco_data();
  static const int kDracoDataFieldNumber = 1;
  const ::std::string& draco_data() const;
  void set_draco_data(const ::std::string& value);
  #if LANG_CXX11
  void set_draco_data(::std::string&& value);
  #endif
  void set_draco_data(const char* value);
  void set_draco_data(const void* value, size_t size);
  ::std::string* mutable_draco_data();
  ::std::string* release_draco_data();
  void set_allocated_draco_data(::std::string* draco_data);

  // @@protoc_insertion_point(class_scope:sr_input_proto.CompressMeshData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr draco_data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sr_5finput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SRSendData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sr_input_proto.SRSendData) */ {
 public:
  SRSendData();
  virtual ~SRSendData();

  SRSendData(const SRSendData& from);

  inline SRSendData& operator=(const SRSendData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SRSendData(SRSendData&& from) noexcept
    : SRSendData() {
    *this = ::std::move(from);
  }

  inline SRSendData& operator=(SRSendData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SRSendData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SRSendData* internal_default_instance() {
    return reinterpret_cast<const SRSendData*>(
               &_SRSendData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SRSendData* other);
  friend void swap(SRSendData& a, SRSendData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SRSendData* New() const final {
    return CreateMaybeMessage<SRSendData>(NULL);
  }

  SRSendData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SRSendData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SRSendData& from);
  void MergeFrom(const SRSendData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SRSendData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sr_input_proto.Pose input_pose = 1;
  bool has_input_pose() const;
  void clear_input_pose();
  static const int kInputPoseFieldNumber = 1;
  private:
  const ::sr_input_proto::Pose& _internal_input_pose() const;
  public:
  const ::sr_input_proto::Pose& input_pose() const;
  ::sr_input_proto::Pose* release_input_pose();
  ::sr_input_proto::Pose* mutable_input_pose();
  void set_allocated_input_pose(::sr_input_proto::Pose* input_pose);

  // .sr_input_proto.ImgData depth_img_data = 2;
  bool has_depth_img_data() const;
  void clear_depth_img_data();
  static const int kDepthImgDataFieldNumber = 2;
  private:
  const ::sr_input_proto::ImgData& _internal_depth_img_data() const;
  public:
  const ::sr_input_proto::ImgData& depth_img_data() const;
  ::sr_input_proto::ImgData* release_depth_img_data();
  ::sr_input_proto::ImgData* mutable_depth_img_data();
  void set_allocated_depth_img_data(::sr_input_proto::ImgData* depth_img_data);

  // .sr_input_proto.ImgData rgb_img_data = 3;
  bool has_rgb_img_data() const;
  void clear_rgb_img_data();
  static const int kRgbImgDataFieldNumber = 3;
  private:
  const ::sr_input_proto::ImgData& _internal_rgb_img_data() const;
  public:
  const ::sr_input_proto::ImgData& rgb_img_data() const;
  ::sr_input_proto::ImgData* release_rgb_img_data();
  ::sr_input_proto::ImgData* mutable_rgb_img_data();
  void set_allocated_rgb_img_data(::sr_input_proto::ImgData* rgb_img_data);

  // int32 id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sr_input_proto.SRSendData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::sr_input_proto::Pose* input_pose_;
  ::sr_input_proto::ImgData* depth_img_data_;
  ::sr_input_proto::ImgData* rgb_img_data_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sr_5finput_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Pose

// double p_x = 1;
inline void Pose::clear_p_x() {
  p_x_ = 0;
}
inline double Pose::p_x() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.Pose.p_x)
  return p_x_;
}
inline void Pose::set_p_x(double value) {
  
  p_x_ = value;
  // @@protoc_insertion_point(field_set:sr_input_proto.Pose.p_x)
}

// double p_y = 2;
inline void Pose::clear_p_y() {
  p_y_ = 0;
}
inline double Pose::p_y() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.Pose.p_y)
  return p_y_;
}
inline void Pose::set_p_y(double value) {
  
  p_y_ = value;
  // @@protoc_insertion_point(field_set:sr_input_proto.Pose.p_y)
}

// double p_z = 3;
inline void Pose::clear_p_z() {
  p_z_ = 0;
}
inline double Pose::p_z() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.Pose.p_z)
  return p_z_;
}
inline void Pose::set_p_z(double value) {
  
  p_z_ = value;
  // @@protoc_insertion_point(field_set:sr_input_proto.Pose.p_z)
}

// double o_x = 4;
inline void Pose::clear_o_x() {
  o_x_ = 0;
}
inline double Pose::o_x() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.Pose.o_x)
  return o_x_;
}
inline void Pose::set_o_x(double value) {
  
  o_x_ = value;
  // @@protoc_insertion_point(field_set:sr_input_proto.Pose.o_x)
}

// double o_y = 5;
inline void Pose::clear_o_y() {
  o_y_ = 0;
}
inline double Pose::o_y() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.Pose.o_y)
  return o_y_;
}
inline void Pose::set_o_y(double value) {
  
  o_y_ = value;
  // @@protoc_insertion_point(field_set:sr_input_proto.Pose.o_y)
}

// double o_z = 6;
inline void Pose::clear_o_z() {
  o_z_ = 0;
}
inline double Pose::o_z() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.Pose.o_z)
  return o_z_;
}
inline void Pose::set_o_z(double value) {
  
  o_z_ = value;
  // @@protoc_insertion_point(field_set:sr_input_proto.Pose.o_z)
}

// double o_w = 7;
inline void Pose::clear_o_w() {
  o_w_ = 0;
}
inline double Pose::o_w() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.Pose.o_w)
  return o_w_;
}
inline void Pose::set_o_w(double value) {
  
  o_w_ = value;
  // @@protoc_insertion_point(field_set:sr_input_proto.Pose.o_w)
}

// -------------------------------------------------------------------

// ImgData

// bytes img_data = 1;
inline void ImgData::clear_img_data() {
  img_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImgData::img_data() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.ImgData.img_data)
  return img_data_.GetNoArena();
}
inline void ImgData::set_img_data(const ::std::string& value) {
  
  img_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sr_input_proto.ImgData.img_data)
}
#if LANG_CXX11
inline void ImgData::set_img_data(::std::string&& value) {
  
  img_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sr_input_proto.ImgData.img_data)
}
#endif
inline void ImgData::set_img_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  img_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sr_input_proto.ImgData.img_data)
}
inline void ImgData::set_img_data(const void* value, size_t size) {
  
  img_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sr_input_proto.ImgData.img_data)
}
inline ::std::string* ImgData::mutable_img_data() {
  
  // @@protoc_insertion_point(field_mutable:sr_input_proto.ImgData.img_data)
  return img_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImgData::release_img_data() {
  // @@protoc_insertion_point(field_release:sr_input_proto.ImgData.img_data)
  
  return img_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImgData::set_allocated_img_data(::std::string* img_data) {
  if (img_data != NULL) {
    
  } else {
    
  }
  img_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), img_data);
  // @@protoc_insertion_point(field_set_allocated:sr_input_proto.ImgData.img_data)
}

// int32 rows = 2;
inline void ImgData::clear_rows() {
  rows_ = 0;
}
inline ::google::protobuf::int32 ImgData::rows() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.ImgData.rows)
  return rows_;
}
inline void ImgData::set_rows(::google::protobuf::int32 value) {
  
  rows_ = value;
  // @@protoc_insertion_point(field_set:sr_input_proto.ImgData.rows)
}

// int32 columns = 3;
inline void ImgData::clear_columns() {
  columns_ = 0;
}
inline ::google::protobuf::int32 ImgData::columns() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.ImgData.columns)
  return columns_;
}
inline void ImgData::set_columns(::google::protobuf::int32 value) {
  
  columns_ = value;
  // @@protoc_insertion_point(field_set:sr_input_proto.ImgData.columns)
}

// -------------------------------------------------------------------

// MeshData

// repeated double v_x = 1;
inline int MeshData::v_x_size() const {
  return v_x_.size();
}
inline void MeshData::clear_v_x() {
  v_x_.Clear();
}
inline double MeshData::v_x(int index) const {
  // @@protoc_insertion_point(field_get:sr_input_proto.MeshData.v_x)
  return v_x_.Get(index);
}
inline void MeshData::set_v_x(int index, double value) {
  v_x_.Set(index, value);
  // @@protoc_insertion_point(field_set:sr_input_proto.MeshData.v_x)
}
inline void MeshData::add_v_x(double value) {
  v_x_.Add(value);
  // @@protoc_insertion_point(field_add:sr_input_proto.MeshData.v_x)
}
inline const ::google::protobuf::RepeatedField< double >&
MeshData::v_x() const {
  // @@protoc_insertion_point(field_list:sr_input_proto.MeshData.v_x)
  return v_x_;
}
inline ::google::protobuf::RepeatedField< double >*
MeshData::mutable_v_x() {
  // @@protoc_insertion_point(field_mutable_list:sr_input_proto.MeshData.v_x)
  return &v_x_;
}

// repeated double v_y = 2;
inline int MeshData::v_y_size() const {
  return v_y_.size();
}
inline void MeshData::clear_v_y() {
  v_y_.Clear();
}
inline double MeshData::v_y(int index) const {
  // @@protoc_insertion_point(field_get:sr_input_proto.MeshData.v_y)
  return v_y_.Get(index);
}
inline void MeshData::set_v_y(int index, double value) {
  v_y_.Set(index, value);
  // @@protoc_insertion_point(field_set:sr_input_proto.MeshData.v_y)
}
inline void MeshData::add_v_y(double value) {
  v_y_.Add(value);
  // @@protoc_insertion_point(field_add:sr_input_proto.MeshData.v_y)
}
inline const ::google::protobuf::RepeatedField< double >&
MeshData::v_y() const {
  // @@protoc_insertion_point(field_list:sr_input_proto.MeshData.v_y)
  return v_y_;
}
inline ::google::protobuf::RepeatedField< double >*
MeshData::mutable_v_y() {
  // @@protoc_insertion_point(field_mutable_list:sr_input_proto.MeshData.v_y)
  return &v_y_;
}

// repeated double v_f = 3;
inline int MeshData::v_f_size() const {
  return v_f_.size();
}
inline void MeshData::clear_v_f() {
  v_f_.Clear();
}
inline double MeshData::v_f(int index) const {
  // @@protoc_insertion_point(field_get:sr_input_proto.MeshData.v_f)
  return v_f_.Get(index);
}
inline void MeshData::set_v_f(int index, double value) {
  v_f_.Set(index, value);
  // @@protoc_insertion_point(field_set:sr_input_proto.MeshData.v_f)
}
inline void MeshData::add_v_f(double value) {
  v_f_.Add(value);
  // @@protoc_insertion_point(field_add:sr_input_proto.MeshData.v_f)
}
inline const ::google::protobuf::RepeatedField< double >&
MeshData::v_f() const {
  // @@protoc_insertion_point(field_list:sr_input_proto.MeshData.v_f)
  return v_f_;
}
inline ::google::protobuf::RepeatedField< double >*
MeshData::mutable_v_f() {
  // @@protoc_insertion_point(field_mutable_list:sr_input_proto.MeshData.v_f)
  return &v_f_;
}

// repeated int32 c_r = 4;
inline int MeshData::c_r_size() const {
  return c_r_.size();
}
inline void MeshData::clear_c_r() {
  c_r_.Clear();
}
inline ::google::protobuf::int32 MeshData::c_r(int index) const {
  // @@protoc_insertion_point(field_get:sr_input_proto.MeshData.c_r)
  return c_r_.Get(index);
}
inline void MeshData::set_c_r(int index, ::google::protobuf::int32 value) {
  c_r_.Set(index, value);
  // @@protoc_insertion_point(field_set:sr_input_proto.MeshData.c_r)
}
inline void MeshData::add_c_r(::google::protobuf::int32 value) {
  c_r_.Add(value);
  // @@protoc_insertion_point(field_add:sr_input_proto.MeshData.c_r)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MeshData::c_r() const {
  // @@protoc_insertion_point(field_list:sr_input_proto.MeshData.c_r)
  return c_r_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MeshData::mutable_c_r() {
  // @@protoc_insertion_point(field_mutable_list:sr_input_proto.MeshData.c_r)
  return &c_r_;
}

// repeated int32 c_g = 5;
inline int MeshData::c_g_size() const {
  return c_g_.size();
}
inline void MeshData::clear_c_g() {
  c_g_.Clear();
}
inline ::google::protobuf::int32 MeshData::c_g(int index) const {
  // @@protoc_insertion_point(field_get:sr_input_proto.MeshData.c_g)
  return c_g_.Get(index);
}
inline void MeshData::set_c_g(int index, ::google::protobuf::int32 value) {
  c_g_.Set(index, value);
  // @@protoc_insertion_point(field_set:sr_input_proto.MeshData.c_g)
}
inline void MeshData::add_c_g(::google::protobuf::int32 value) {
  c_g_.Add(value);
  // @@protoc_insertion_point(field_add:sr_input_proto.MeshData.c_g)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MeshData::c_g() const {
  // @@protoc_insertion_point(field_list:sr_input_proto.MeshData.c_g)
  return c_g_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MeshData::mutable_c_g() {
  // @@protoc_insertion_point(field_mutable_list:sr_input_proto.MeshData.c_g)
  return &c_g_;
}

// repeated int32 c_b = 6;
inline int MeshData::c_b_size() const {
  return c_b_.size();
}
inline void MeshData::clear_c_b() {
  c_b_.Clear();
}
inline ::google::protobuf::int32 MeshData::c_b(int index) const {
  // @@protoc_insertion_point(field_get:sr_input_proto.MeshData.c_b)
  return c_b_.Get(index);
}
inline void MeshData::set_c_b(int index, ::google::protobuf::int32 value) {
  c_b_.Set(index, value);
  // @@protoc_insertion_point(field_set:sr_input_proto.MeshData.c_b)
}
inline void MeshData::add_c_b(::google::protobuf::int32 value) {
  c_b_.Add(value);
  // @@protoc_insertion_point(field_add:sr_input_proto.MeshData.c_b)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MeshData::c_b() const {
  // @@protoc_insertion_point(field_list:sr_input_proto.MeshData.c_b)
  return c_b_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MeshData::mutable_c_b() {
  // @@protoc_insertion_point(field_mutable_list:sr_input_proto.MeshData.c_b)
  return &c_b_;
}

// repeated int64 f_1 = 7;
inline int MeshData::f_1_size() const {
  return f_1_.size();
}
inline void MeshData::clear_f_1() {
  f_1_.Clear();
}
inline ::google::protobuf::int64 MeshData::f_1(int index) const {
  // @@protoc_insertion_point(field_get:sr_input_proto.MeshData.f_1)
  return f_1_.Get(index);
}
inline void MeshData::set_f_1(int index, ::google::protobuf::int64 value) {
  f_1_.Set(index, value);
  // @@protoc_insertion_point(field_set:sr_input_proto.MeshData.f_1)
}
inline void MeshData::add_f_1(::google::protobuf::int64 value) {
  f_1_.Add(value);
  // @@protoc_insertion_point(field_add:sr_input_proto.MeshData.f_1)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MeshData::f_1() const {
  // @@protoc_insertion_point(field_list:sr_input_proto.MeshData.f_1)
  return f_1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MeshData::mutable_f_1() {
  // @@protoc_insertion_point(field_mutable_list:sr_input_proto.MeshData.f_1)
  return &f_1_;
}

// repeated int64 f_2 = 8;
inline int MeshData::f_2_size() const {
  return f_2_.size();
}
inline void MeshData::clear_f_2() {
  f_2_.Clear();
}
inline ::google::protobuf::int64 MeshData::f_2(int index) const {
  // @@protoc_insertion_point(field_get:sr_input_proto.MeshData.f_2)
  return f_2_.Get(index);
}
inline void MeshData::set_f_2(int index, ::google::protobuf::int64 value) {
  f_2_.Set(index, value);
  // @@protoc_insertion_point(field_set:sr_input_proto.MeshData.f_2)
}
inline void MeshData::add_f_2(::google::protobuf::int64 value) {
  f_2_.Add(value);
  // @@protoc_insertion_point(field_add:sr_input_proto.MeshData.f_2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MeshData::f_2() const {
  // @@protoc_insertion_point(field_list:sr_input_proto.MeshData.f_2)
  return f_2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MeshData::mutable_f_2() {
  // @@protoc_insertion_point(field_mutable_list:sr_input_proto.MeshData.f_2)
  return &f_2_;
}

// repeated int64 f_3 = 9;
inline int MeshData::f_3_size() const {
  return f_3_.size();
}
inline void MeshData::clear_f_3() {
  f_3_.Clear();
}
inline ::google::protobuf::int64 MeshData::f_3(int index) const {
  // @@protoc_insertion_point(field_get:sr_input_proto.MeshData.f_3)
  return f_3_.Get(index);
}
inline void MeshData::set_f_3(int index, ::google::protobuf::int64 value) {
  f_3_.Set(index, value);
  // @@protoc_insertion_point(field_set:sr_input_proto.MeshData.f_3)
}
inline void MeshData::add_f_3(::google::protobuf::int64 value) {
  f_3_.Add(value);
  // @@protoc_insertion_point(field_add:sr_input_proto.MeshData.f_3)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MeshData::f_3() const {
  // @@protoc_insertion_point(field_list:sr_input_proto.MeshData.f_3)
  return f_3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MeshData::mutable_f_3() {
  // @@protoc_insertion_point(field_mutable_list:sr_input_proto.MeshData.f_3)
  return &f_3_;
}

// -------------------------------------------------------------------

// CompressMeshData

// bytes draco_data = 1;
inline void CompressMeshData::clear_draco_data() {
  draco_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CompressMeshData::draco_data() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.CompressMeshData.draco_data)
  return draco_data_.GetNoArena();
}
inline void CompressMeshData::set_draco_data(const ::std::string& value) {
  
  draco_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sr_input_proto.CompressMeshData.draco_data)
}
#if LANG_CXX11
inline void CompressMeshData::set_draco_data(::std::string&& value) {
  
  draco_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sr_input_proto.CompressMeshData.draco_data)
}
#endif
inline void CompressMeshData::set_draco_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  draco_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sr_input_proto.CompressMeshData.draco_data)
}
inline void CompressMeshData::set_draco_data(const void* value, size_t size) {
  
  draco_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sr_input_proto.CompressMeshData.draco_data)
}
inline ::std::string* CompressMeshData::mutable_draco_data() {
  
  // @@protoc_insertion_point(field_mutable:sr_input_proto.CompressMeshData.draco_data)
  return draco_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CompressMeshData::release_draco_data() {
  // @@protoc_insertion_point(field_release:sr_input_proto.CompressMeshData.draco_data)
  
  return draco_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CompressMeshData::set_allocated_draco_data(::std::string* draco_data) {
  if (draco_data != NULL) {
    
  } else {
    
  }
  draco_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), draco_data);
  // @@protoc_insertion_point(field_set_allocated:sr_input_proto.CompressMeshData.draco_data)
}

// -------------------------------------------------------------------

// SRSendData

// .sr_input_proto.Pose input_pose = 1;
inline bool SRSendData::has_input_pose() const {
  return this != internal_default_instance() && input_pose_ != NULL;
}
inline void SRSendData::clear_input_pose() {
  if (GetArenaNoVirtual() == NULL && input_pose_ != NULL) {
    delete input_pose_;
  }
  input_pose_ = NULL;
}
inline const ::sr_input_proto::Pose& SRSendData::_internal_input_pose() const {
  return *input_pose_;
}
inline const ::sr_input_proto::Pose& SRSendData::input_pose() const {
  const ::sr_input_proto::Pose* p = input_pose_;
  // @@protoc_insertion_point(field_get:sr_input_proto.SRSendData.input_pose)
  return p != NULL ? *p : *reinterpret_cast<const ::sr_input_proto::Pose*>(
      &::sr_input_proto::_Pose_default_instance_);
}
inline ::sr_input_proto::Pose* SRSendData::release_input_pose() {
  // @@protoc_insertion_point(field_release:sr_input_proto.SRSendData.input_pose)
  
  ::sr_input_proto::Pose* temp = input_pose_;
  input_pose_ = NULL;
  return temp;
}
inline ::sr_input_proto::Pose* SRSendData::mutable_input_pose() {
  
  if (input_pose_ == NULL) {
    auto* p = CreateMaybeMessage<::sr_input_proto::Pose>(GetArenaNoVirtual());
    input_pose_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sr_input_proto.SRSendData.input_pose)
  return input_pose_;
}
inline void SRSendData::set_allocated_input_pose(::sr_input_proto::Pose* input_pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_pose_;
  }
  if (input_pose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_pose, submessage_arena);
    }
    
  } else {
    
  }
  input_pose_ = input_pose;
  // @@protoc_insertion_point(field_set_allocated:sr_input_proto.SRSendData.input_pose)
}

// .sr_input_proto.ImgData depth_img_data = 2;
inline bool SRSendData::has_depth_img_data() const {
  return this != internal_default_instance() && depth_img_data_ != NULL;
}
inline void SRSendData::clear_depth_img_data() {
  if (GetArenaNoVirtual() == NULL && depth_img_data_ != NULL) {
    delete depth_img_data_;
  }
  depth_img_data_ = NULL;
}
inline const ::sr_input_proto::ImgData& SRSendData::_internal_depth_img_data() const {
  return *depth_img_data_;
}
inline const ::sr_input_proto::ImgData& SRSendData::depth_img_data() const {
  const ::sr_input_proto::ImgData* p = depth_img_data_;
  // @@protoc_insertion_point(field_get:sr_input_proto.SRSendData.depth_img_data)
  return p != NULL ? *p : *reinterpret_cast<const ::sr_input_proto::ImgData*>(
      &::sr_input_proto::_ImgData_default_instance_);
}
inline ::sr_input_proto::ImgData* SRSendData::release_depth_img_data() {
  // @@protoc_insertion_point(field_release:sr_input_proto.SRSendData.depth_img_data)
  
  ::sr_input_proto::ImgData* temp = depth_img_data_;
  depth_img_data_ = NULL;
  return temp;
}
inline ::sr_input_proto::ImgData* SRSendData::mutable_depth_img_data() {
  
  if (depth_img_data_ == NULL) {
    auto* p = CreateMaybeMessage<::sr_input_proto::ImgData>(GetArenaNoVirtual());
    depth_img_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sr_input_proto.SRSendData.depth_img_data)
  return depth_img_data_;
}
inline void SRSendData::set_allocated_depth_img_data(::sr_input_proto::ImgData* depth_img_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete depth_img_data_;
  }
  if (depth_img_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      depth_img_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, depth_img_data, submessage_arena);
    }
    
  } else {
    
  }
  depth_img_data_ = depth_img_data;
  // @@protoc_insertion_point(field_set_allocated:sr_input_proto.SRSendData.depth_img_data)
}

// .sr_input_proto.ImgData rgb_img_data = 3;
inline bool SRSendData::has_rgb_img_data() const {
  return this != internal_default_instance() && rgb_img_data_ != NULL;
}
inline void SRSendData::clear_rgb_img_data() {
  if (GetArenaNoVirtual() == NULL && rgb_img_data_ != NULL) {
    delete rgb_img_data_;
  }
  rgb_img_data_ = NULL;
}
inline const ::sr_input_proto::ImgData& SRSendData::_internal_rgb_img_data() const {
  return *rgb_img_data_;
}
inline const ::sr_input_proto::ImgData& SRSendData::rgb_img_data() const {
  const ::sr_input_proto::ImgData* p = rgb_img_data_;
  // @@protoc_insertion_point(field_get:sr_input_proto.SRSendData.rgb_img_data)
  return p != NULL ? *p : *reinterpret_cast<const ::sr_input_proto::ImgData*>(
      &::sr_input_proto::_ImgData_default_instance_);
}
inline ::sr_input_proto::ImgData* SRSendData::release_rgb_img_data() {
  // @@protoc_insertion_point(field_release:sr_input_proto.SRSendData.rgb_img_data)
  
  ::sr_input_proto::ImgData* temp = rgb_img_data_;
  rgb_img_data_ = NULL;
  return temp;
}
inline ::sr_input_proto::ImgData* SRSendData::mutable_rgb_img_data() {
  
  if (rgb_img_data_ == NULL) {
    auto* p = CreateMaybeMessage<::sr_input_proto::ImgData>(GetArenaNoVirtual());
    rgb_img_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sr_input_proto.SRSendData.rgb_img_data)
  return rgb_img_data_;
}
inline void SRSendData::set_allocated_rgb_img_data(::sr_input_proto::ImgData* rgb_img_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rgb_img_data_;
  }
  if (rgb_img_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rgb_img_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rgb_img_data, submessage_arena);
    }
    
  } else {
    
  }
  rgb_img_data_ = rgb_img_data;
  // @@protoc_insertion_point(field_set_allocated:sr_input_proto.SRSendData.rgb_img_data)
}

// int32 id = 4;
inline void SRSendData::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 SRSendData::id() const {
  // @@protoc_insertion_point(field_get:sr_input_proto.SRSendData.id)
  return id_;
}
inline void SRSendData::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:sr_input_proto.SRSendData.id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sr_input_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_sr_5finput_2eproto
