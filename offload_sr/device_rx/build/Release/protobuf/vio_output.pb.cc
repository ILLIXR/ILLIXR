// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vio_output.proto

#include "vio_output.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_vio_5foutput_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vio_5foutput_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Quat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vio_5foutput_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vec3;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vio_5foutput_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IMUParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vio_5foutput_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SlowPose;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vio_5foutput_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_IMUIntInput;
}  // namespace protobuf_vio_5foutput_2eproto
namespace vio_output_proto {
class Vec3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vec3>
      _instance;
} _Vec3_default_instance_;
class QuatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quat>
      _instance;
} _Quat_default_instance_;
class IMUParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMUParams>
      _instance;
} _IMUParams_default_instance_;
class SlowPoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SlowPose>
      _instance;
} _SlowPose_default_instance_;
class IMUIntInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMUIntInput>
      _instance;
} _IMUIntInput_default_instance_;
class VIOOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VIOOutput>
      _instance;
} _VIOOutput_default_instance_;
}  // namespace vio_output_proto
namespace protobuf_vio_5foutput_2eproto {
static void InitDefaultsVec3() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vio_output_proto::_Vec3_default_instance_;
    new (ptr) ::vio_output_proto::Vec3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vio_output_proto::Vec3::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vec3 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVec3}, {}};

static void InitDefaultsQuat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vio_output_proto::_Quat_default_instance_;
    new (ptr) ::vio_output_proto::Quat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vio_output_proto::Quat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Quat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuat}, {}};

static void InitDefaultsIMUParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vio_output_proto::_IMUParams_default_instance_;
    new (ptr) ::vio_output_proto::IMUParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vio_output_proto::IMUParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IMUParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIMUParams}, {
      &protobuf_vio_5foutput_2eproto::scc_info_Vec3.base,}};

static void InitDefaultsSlowPose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vio_output_proto::_SlowPose_default_instance_;
    new (ptr) ::vio_output_proto::SlowPose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vio_output_proto::SlowPose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SlowPose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSlowPose}, {
      &protobuf_vio_5foutput_2eproto::scc_info_Vec3.base,
      &protobuf_vio_5foutput_2eproto::scc_info_Quat.base,}};

static void InitDefaultsIMUIntInput() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vio_output_proto::_IMUIntInput_default_instance_;
    new (ptr) ::vio_output_proto::IMUIntInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vio_output_proto::IMUIntInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_IMUIntInput =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsIMUIntInput}, {
      &protobuf_vio_5foutput_2eproto::scc_info_IMUParams.base,
      &protobuf_vio_5foutput_2eproto::scc_info_Vec3.base,
      &protobuf_vio_5foutput_2eproto::scc_info_Quat.base,}};

static void InitDefaultsVIOOutput() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vio_output_proto::_VIOOutput_default_instance_;
    new (ptr) ::vio_output_proto::VIOOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vio_output_proto::VIOOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_VIOOutput =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVIOOutput}, {
      &protobuf_vio_5foutput_2eproto::scc_info_SlowPose.base,
      &protobuf_vio_5foutput_2eproto::scc_info_IMUIntInput.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Vec3.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Quat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IMUParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SlowPose.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IMUIntInput.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VIOOutput.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::Vec3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::Vec3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::Vec3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::Vec3, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::Quat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::Quat, w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::Quat, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::Quat, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::Quat, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUParams, gyro_noise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUParams, acc_noise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUParams, gyro_walk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUParams, acc_walk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUParams, n_gravity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUParams, imu_integration_sigma_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUParams, nominal_rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::SlowPose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::SlowPose, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::SlowPose, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::SlowPose, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUIntInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUIntInput, last_cam_integration_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUIntInput, t_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUIntInput, imu_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUIntInput, biasacc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUIntInput, biasgyro_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUIntInput, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUIntInput, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::IMUIntInput, velocity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::VIOOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::VIOOutput, slow_pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::VIOOutput, imu_int_input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::VIOOutput, start_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::VIOOutput, end_server_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::VIOOutput, dataset_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vio_output_proto::VIOOutput, frame_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::vio_output_proto::Vec3)},
  { 8, -1, sizeof(::vio_output_proto::Quat)},
  { 17, -1, sizeof(::vio_output_proto::IMUParams)},
  { 29, -1, sizeof(::vio_output_proto::SlowPose)},
  { 37, -1, sizeof(::vio_output_proto::IMUIntInput)},
  { 50, -1, sizeof(::vio_output_proto::VIOOutput)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::vio_output_proto::_Vec3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vio_output_proto::_Quat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vio_output_proto::_IMUParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vio_output_proto::_SlowPose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vio_output_proto::_IMUIntInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vio_output_proto::_VIOOutput_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "vio_output.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020vio_output.proto\022\020vio_output_proto\"\'\n\004"
      "Vec3\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"2\n"
      "\004Quat\022\t\n\001w\030\001 \001(\001\022\t\n\001x\030\002 \001(\001\022\t\n\001y\030\003 \001(\001\022\t"
      "\n\001z\030\004 \001(\001\"\267\001\n\tIMUParams\022\022\n\ngyro_noise\030\001 "
      "\001(\001\022\021\n\tacc_noise\030\002 \001(\001\022\021\n\tgyro_walk\030\003 \001("
      "\001\022\020\n\010acc_walk\030\004 \001(\001\022)\n\tn_gravity\030\005 \001(\0132\026"
      ".vio_output_proto.Vec3\022\035\n\025imu_integratio"
      "n_sigma\030\006 \001(\001\022\024\n\014nominal_rate\030\007 \001(\001\"q\n\010S"
      "lowPose\022\021\n\ttimestamp\030\001 \001(\006\022(\n\010position\030\002"
      " \001(\0132\026.vio_output_proto.Vec3\022(\n\010rotation"
      "\030\003 \001(\0132\026.vio_output_proto.Quat\"\304\002\n\013IMUIn"
      "tInput\022!\n\031last_cam_integration_time\030\001 \001("
      "\006\022\020\n\010t_offset\030\002 \001(\006\022/\n\nimu_params\030\003 \001(\0132"
      "\033.vio_output_proto.IMUParams\022\'\n\007biasAcc\030"
      "\004 \001(\0132\026.vio_output_proto.Vec3\022(\n\010biasGyr"
      "o\030\005 \001(\0132\026.vio_output_proto.Vec3\022(\n\010posit"
      "ion\030\006 \001(\0132\026.vio_output_proto.Vec3\022(\n\010rot"
      "ation\030\007 \001(\0132\026.vio_output_proto.Quat\022(\n\010v"
      "elocity\030\010 \001(\0132\026.vio_output_proto.Vec3\"\324\001"
      "\n\tVIOOutput\022-\n\tslow_pose\030\001 \001(\0132\032.vio_out"
      "put_proto.SlowPose\0224\n\rimu_int_input\030\002 \001("
      "\0132\035.vio_output_proto.IMUIntInput\022\027\n\017star"
      "t_timestamp\030\003 \001(\006\022\034\n\024end_server_timestam"
      "p\030\004 \001(\006\022\031\n\021dataset_timestamp\030\005 \001(\006\022\020\n\010fr"
      "ame_id\030\006 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 980);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vio_output.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vio_5foutput_2eproto
namespace vio_output_proto {

// ===================================================================

void Vec3::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vec3::kXFieldNumber;
const int Vec3::kYFieldNumber;
const int Vec3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vec3::Vec3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vio_5foutput_2eproto::scc_info_Vec3.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vio_output_proto.Vec3)
}
Vec3::Vec3(const Vec3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:vio_output_proto.Vec3)
}

void Vec3::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Vec3::~Vec3() {
  // @@protoc_insertion_point(destructor:vio_output_proto.Vec3)
  SharedDtor();
}

void Vec3::SharedDtor() {
}

void Vec3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vec3::descriptor() {
  ::protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vec3& Vec3::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vio_5foutput_2eproto::scc_info_Vec3.base);
  return *internal_default_instance();
}


void Vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:vio_output_proto.Vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vec3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vio_output_proto.Vec3)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vio_output_proto.Vec3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vio_output_proto.Vec3)
  return false;
#undef DO_
}

void Vec3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vio_output_proto.Vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vio_output_proto.Vec3)
}

::google::protobuf::uint8* Vec3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vio_output_proto.Vec3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vio_output_proto.Vec3)
  return target;
}

size_t Vec3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vio_output_proto.Vec3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vio_output_proto.Vec3)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vec3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vio_output_proto.Vec3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vio_output_proto.Vec3)
    MergeFrom(*source);
  }
}

void Vec3::MergeFrom(const Vec3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vio_output_proto.Vec3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vec3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vio_output_proto.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec3::CopyFrom(const Vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vio_output_proto.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec3::IsInitialized() const {
  return true;
}

void Vec3::Swap(Vec3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vec3::InternalSwap(Vec3* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vec3::GetMetadata() const {
  protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Quat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quat::kWFieldNumber;
const int Quat::kXFieldNumber;
const int Quat::kYFieldNumber;
const int Quat::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quat::Quat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vio_5foutput_2eproto::scc_info_Quat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vio_output_proto.Quat)
}
Quat::Quat(const Quat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&w_, &from.w_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&w_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:vio_output_proto.Quat)
}

void Quat::SharedCtor() {
  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&w_)) + sizeof(z_));
}

Quat::~Quat() {
  // @@protoc_insertion_point(destructor:vio_output_proto.Quat)
  SharedDtor();
}

void Quat::SharedDtor() {
}

void Quat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Quat::descriptor() {
  ::protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quat& Quat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vio_5foutput_2eproto::scc_info_Quat.base);
  return *internal_default_instance();
}


void Quat::Clear() {
// @@protoc_insertion_point(message_clear_start:vio_output_proto.Quat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&w_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Quat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vio_output_proto.Quat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double w = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vio_output_proto.Quat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vio_output_proto.Quat)
  return false;
#undef DO_
}

void Quat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vio_output_proto.Quat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double w = 1;
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->w(), output);
  }

  // double x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }

  // double y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }

  // double z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vio_output_proto.Quat)
}

::google::protobuf::uint8* Quat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vio_output_proto.Quat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double w = 1;
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->w(), target);
  }

  // double x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }

  // double y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }

  // double z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vio_output_proto.Quat)
  return target;
}

size_t Quat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vio_output_proto.Quat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double w = 1;
  if (this->w() != 0) {
    total_size += 1 + 8;
  }

  // double x = 2;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 3;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 4;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Quat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vio_output_proto.Quat)
  GOOGLE_DCHECK_NE(&from, this);
  const Quat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vio_output_proto.Quat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vio_output_proto.Quat)
    MergeFrom(*source);
  }
}

void Quat::MergeFrom(const Quat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vio_output_proto.Quat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.w() != 0) {
    set_w(from.w());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Quat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vio_output_proto.Quat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quat::CopyFrom(const Quat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vio_output_proto.Quat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quat::IsInitialized() const {
  return true;
}

void Quat::Swap(Quat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quat::InternalSwap(Quat* other) {
  using std::swap;
  swap(w_, other->w_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Quat::GetMetadata() const {
  protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMUParams::InitAsDefaultInstance() {
  ::vio_output_proto::_IMUParams_default_instance_._instance.get_mutable()->n_gravity_ = const_cast< ::vio_output_proto::Vec3*>(
      ::vio_output_proto::Vec3::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMUParams::kGyroNoiseFieldNumber;
const int IMUParams::kAccNoiseFieldNumber;
const int IMUParams::kGyroWalkFieldNumber;
const int IMUParams::kAccWalkFieldNumber;
const int IMUParams::kNGravityFieldNumber;
const int IMUParams::kImuIntegrationSigmaFieldNumber;
const int IMUParams::kNominalRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMUParams::IMUParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vio_5foutput_2eproto::scc_info_IMUParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vio_output_proto.IMUParams)
}
IMUParams::IMUParams(const IMUParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_n_gravity()) {
    n_gravity_ = new ::vio_output_proto::Vec3(*from.n_gravity_);
  } else {
    n_gravity_ = NULL;
  }
  ::memcpy(&gyro_noise_, &from.gyro_noise_,
    static_cast<size_t>(reinterpret_cast<char*>(&nominal_rate_) -
    reinterpret_cast<char*>(&gyro_noise_)) + sizeof(nominal_rate_));
  // @@protoc_insertion_point(copy_constructor:vio_output_proto.IMUParams)
}

void IMUParams::SharedCtor() {
  ::memset(&n_gravity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nominal_rate_) -
      reinterpret_cast<char*>(&n_gravity_)) + sizeof(nominal_rate_));
}

IMUParams::~IMUParams() {
  // @@protoc_insertion_point(destructor:vio_output_proto.IMUParams)
  SharedDtor();
}

void IMUParams::SharedDtor() {
  if (this != internal_default_instance()) delete n_gravity_;
}

void IMUParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IMUParams::descriptor() {
  ::protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMUParams& IMUParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vio_5foutput_2eproto::scc_info_IMUParams.base);
  return *internal_default_instance();
}


void IMUParams::Clear() {
// @@protoc_insertion_point(message_clear_start:vio_output_proto.IMUParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && n_gravity_ != NULL) {
    delete n_gravity_;
  }
  n_gravity_ = NULL;
  ::memset(&gyro_noise_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nominal_rate_) -
      reinterpret_cast<char*>(&gyro_noise_)) + sizeof(nominal_rate_));
  _internal_metadata_.Clear();
}

bool IMUParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vio_output_proto.IMUParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double gyro_noise = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gyro_noise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double acc_noise = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_noise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gyro_walk = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gyro_walk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double acc_walk = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_walk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vio_output_proto.Vec3 n_gravity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_n_gravity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double imu_integration_sigma = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &imu_integration_sigma_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double nominal_rate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nominal_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vio_output_proto.IMUParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vio_output_proto.IMUParams)
  return false;
#undef DO_
}

void IMUParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vio_output_proto.IMUParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double gyro_noise = 1;
  if (this->gyro_noise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->gyro_noise(), output);
  }

  // double acc_noise = 2;
  if (this->acc_noise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->acc_noise(), output);
  }

  // double gyro_walk = 3;
  if (this->gyro_walk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->gyro_walk(), output);
  }

  // double acc_walk = 4;
  if (this->acc_walk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->acc_walk(), output);
  }

  // .vio_output_proto.Vec3 n_gravity = 5;
  if (this->has_n_gravity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_n_gravity(), output);
  }

  // double imu_integration_sigma = 6;
  if (this->imu_integration_sigma() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->imu_integration_sigma(), output);
  }

  // double nominal_rate = 7;
  if (this->nominal_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->nominal_rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vio_output_proto.IMUParams)
}

::google::protobuf::uint8* IMUParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vio_output_proto.IMUParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double gyro_noise = 1;
  if (this->gyro_noise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->gyro_noise(), target);
  }

  // double acc_noise = 2;
  if (this->acc_noise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->acc_noise(), target);
  }

  // double gyro_walk = 3;
  if (this->gyro_walk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->gyro_walk(), target);
  }

  // double acc_walk = 4;
  if (this->acc_walk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->acc_walk(), target);
  }

  // .vio_output_proto.Vec3 n_gravity = 5;
  if (this->has_n_gravity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_n_gravity(), deterministic, target);
  }

  // double imu_integration_sigma = 6;
  if (this->imu_integration_sigma() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->imu_integration_sigma(), target);
  }

  // double nominal_rate = 7;
  if (this->nominal_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->nominal_rate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vio_output_proto.IMUParams)
  return target;
}

size_t IMUParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vio_output_proto.IMUParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .vio_output_proto.Vec3 n_gravity = 5;
  if (this->has_n_gravity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *n_gravity_);
  }

  // double gyro_noise = 1;
  if (this->gyro_noise() != 0) {
    total_size += 1 + 8;
  }

  // double acc_noise = 2;
  if (this->acc_noise() != 0) {
    total_size += 1 + 8;
  }

  // double gyro_walk = 3;
  if (this->gyro_walk() != 0) {
    total_size += 1 + 8;
  }

  // double acc_walk = 4;
  if (this->acc_walk() != 0) {
    total_size += 1 + 8;
  }

  // double imu_integration_sigma = 6;
  if (this->imu_integration_sigma() != 0) {
    total_size += 1 + 8;
  }

  // double nominal_rate = 7;
  if (this->nominal_rate() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMUParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vio_output_proto.IMUParams)
  GOOGLE_DCHECK_NE(&from, this);
  const IMUParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMUParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vio_output_proto.IMUParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vio_output_proto.IMUParams)
    MergeFrom(*source);
  }
}

void IMUParams::MergeFrom(const IMUParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vio_output_proto.IMUParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_n_gravity()) {
    mutable_n_gravity()->::vio_output_proto::Vec3::MergeFrom(from.n_gravity());
  }
  if (from.gyro_noise() != 0) {
    set_gyro_noise(from.gyro_noise());
  }
  if (from.acc_noise() != 0) {
    set_acc_noise(from.acc_noise());
  }
  if (from.gyro_walk() != 0) {
    set_gyro_walk(from.gyro_walk());
  }
  if (from.acc_walk() != 0) {
    set_acc_walk(from.acc_walk());
  }
  if (from.imu_integration_sigma() != 0) {
    set_imu_integration_sigma(from.imu_integration_sigma());
  }
  if (from.nominal_rate() != 0) {
    set_nominal_rate(from.nominal_rate());
  }
}

void IMUParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vio_output_proto.IMUParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMUParams::CopyFrom(const IMUParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vio_output_proto.IMUParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMUParams::IsInitialized() const {
  return true;
}

void IMUParams::Swap(IMUParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMUParams::InternalSwap(IMUParams* other) {
  using std::swap;
  swap(n_gravity_, other->n_gravity_);
  swap(gyro_noise_, other->gyro_noise_);
  swap(acc_noise_, other->acc_noise_);
  swap(gyro_walk_, other->gyro_walk_);
  swap(acc_walk_, other->acc_walk_);
  swap(imu_integration_sigma_, other->imu_integration_sigma_);
  swap(nominal_rate_, other->nominal_rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IMUParams::GetMetadata() const {
  protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SlowPose::InitAsDefaultInstance() {
  ::vio_output_proto::_SlowPose_default_instance_._instance.get_mutable()->position_ = const_cast< ::vio_output_proto::Vec3*>(
      ::vio_output_proto::Vec3::internal_default_instance());
  ::vio_output_proto::_SlowPose_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::vio_output_proto::Quat*>(
      ::vio_output_proto::Quat::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SlowPose::kTimestampFieldNumber;
const int SlowPose::kPositionFieldNumber;
const int SlowPose::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SlowPose::SlowPose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vio_5foutput_2eproto::scc_info_SlowPose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vio_output_proto.SlowPose)
}
SlowPose::SlowPose(const SlowPose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::vio_output_proto::Vec3(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::vio_output_proto::Quat(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:vio_output_proto.SlowPose)
}

void SlowPose::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&position_)) + sizeof(timestamp_));
}

SlowPose::~SlowPose() {
  // @@protoc_insertion_point(destructor:vio_output_proto.SlowPose)
  SharedDtor();
}

void SlowPose::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void SlowPose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SlowPose::descriptor() {
  ::protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SlowPose& SlowPose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vio_5foutput_2eproto::scc_info_SlowPose.base);
  return *internal_default_instance();
}


void SlowPose::Clear() {
// @@protoc_insertion_point(message_clear_start:vio_output_proto.SlowPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SlowPose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vio_output_proto.SlowPose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vio_output_proto.Vec3 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vio_output_proto.Quat rotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vio_output_proto.SlowPose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vio_output_proto.SlowPose)
  return false;
#undef DO_
}

void SlowPose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vio_output_proto.SlowPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->timestamp(), output);
  }

  // .vio_output_proto.Vec3 position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  // .vio_output_proto.Quat rotation = 3;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vio_output_proto.SlowPose)
}

::google::protobuf::uint8* SlowPose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vio_output_proto.SlowPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->timestamp(), target);
  }

  // .vio_output_proto.Vec3 position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  // .vio_output_proto.Quat rotation = 3;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_rotation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vio_output_proto.SlowPose)
  return target;
}

size_t SlowPose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vio_output_proto.SlowPose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .vio_output_proto.Vec3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .vio_output_proto.Quat rotation = 3;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // fixed64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SlowPose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vio_output_proto.SlowPose)
  GOOGLE_DCHECK_NE(&from, this);
  const SlowPose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SlowPose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vio_output_proto.SlowPose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vio_output_proto.SlowPose)
    MergeFrom(*source);
  }
}

void SlowPose::MergeFrom(const SlowPose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vio_output_proto.SlowPose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::vio_output_proto::Vec3::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::vio_output_proto::Quat::MergeFrom(from.rotation());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void SlowPose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vio_output_proto.SlowPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlowPose::CopyFrom(const SlowPose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vio_output_proto.SlowPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlowPose::IsInitialized() const {
  return true;
}

void SlowPose::Swap(SlowPose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SlowPose::InternalSwap(SlowPose* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SlowPose::GetMetadata() const {
  protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMUIntInput::InitAsDefaultInstance() {
  ::vio_output_proto::_IMUIntInput_default_instance_._instance.get_mutable()->imu_params_ = const_cast< ::vio_output_proto::IMUParams*>(
      ::vio_output_proto::IMUParams::internal_default_instance());
  ::vio_output_proto::_IMUIntInput_default_instance_._instance.get_mutable()->biasacc_ = const_cast< ::vio_output_proto::Vec3*>(
      ::vio_output_proto::Vec3::internal_default_instance());
  ::vio_output_proto::_IMUIntInput_default_instance_._instance.get_mutable()->biasgyro_ = const_cast< ::vio_output_proto::Vec3*>(
      ::vio_output_proto::Vec3::internal_default_instance());
  ::vio_output_proto::_IMUIntInput_default_instance_._instance.get_mutable()->position_ = const_cast< ::vio_output_proto::Vec3*>(
      ::vio_output_proto::Vec3::internal_default_instance());
  ::vio_output_proto::_IMUIntInput_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::vio_output_proto::Quat*>(
      ::vio_output_proto::Quat::internal_default_instance());
  ::vio_output_proto::_IMUIntInput_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::vio_output_proto::Vec3*>(
      ::vio_output_proto::Vec3::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMUIntInput::kLastCamIntegrationTimeFieldNumber;
const int IMUIntInput::kTOffsetFieldNumber;
const int IMUIntInput::kImuParamsFieldNumber;
const int IMUIntInput::kBiasAccFieldNumber;
const int IMUIntInput::kBiasGyroFieldNumber;
const int IMUIntInput::kPositionFieldNumber;
const int IMUIntInput::kRotationFieldNumber;
const int IMUIntInput::kVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMUIntInput::IMUIntInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vio_5foutput_2eproto::scc_info_IMUIntInput.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vio_output_proto.IMUIntInput)
}
IMUIntInput::IMUIntInput(const IMUIntInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_imu_params()) {
    imu_params_ = new ::vio_output_proto::IMUParams(*from.imu_params_);
  } else {
    imu_params_ = NULL;
  }
  if (from.has_biasacc()) {
    biasacc_ = new ::vio_output_proto::Vec3(*from.biasacc_);
  } else {
    biasacc_ = NULL;
  }
  if (from.has_biasgyro()) {
    biasgyro_ = new ::vio_output_proto::Vec3(*from.biasgyro_);
  } else {
    biasgyro_ = NULL;
  }
  if (from.has_position()) {
    position_ = new ::vio_output_proto::Vec3(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::vio_output_proto::Quat(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::vio_output_proto::Vec3(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  ::memcpy(&last_cam_integration_time_, &from.last_cam_integration_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&t_offset_) -
    reinterpret_cast<char*>(&last_cam_integration_time_)) + sizeof(t_offset_));
  // @@protoc_insertion_point(copy_constructor:vio_output_proto.IMUIntInput)
}

void IMUIntInput::SharedCtor() {
  ::memset(&imu_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_offset_) -
      reinterpret_cast<char*>(&imu_params_)) + sizeof(t_offset_));
}

IMUIntInput::~IMUIntInput() {
  // @@protoc_insertion_point(destructor:vio_output_proto.IMUIntInput)
  SharedDtor();
}

void IMUIntInput::SharedDtor() {
  if (this != internal_default_instance()) delete imu_params_;
  if (this != internal_default_instance()) delete biasacc_;
  if (this != internal_default_instance()) delete biasgyro_;
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
  if (this != internal_default_instance()) delete velocity_;
}

void IMUIntInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IMUIntInput::descriptor() {
  ::protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMUIntInput& IMUIntInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vio_5foutput_2eproto::scc_info_IMUIntInput.base);
  return *internal_default_instance();
}


void IMUIntInput::Clear() {
// @@protoc_insertion_point(message_clear_start:vio_output_proto.IMUIntInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && imu_params_ != NULL) {
    delete imu_params_;
  }
  imu_params_ = NULL;
  if (GetArenaNoVirtual() == NULL && biasacc_ != NULL) {
    delete biasacc_;
  }
  biasacc_ = NULL;
  if (GetArenaNoVirtual() == NULL && biasgyro_ != NULL) {
    delete biasgyro_;
  }
  biasgyro_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
  ::memset(&last_cam_integration_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_offset_) -
      reinterpret_cast<char*>(&last_cam_integration_time_)) + sizeof(t_offset_));
  _internal_metadata_.Clear();
}

bool IMUIntInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vio_output_proto.IMUIntInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 last_cam_integration_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &last_cam_integration_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 t_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &t_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vio_output_proto.IMUParams imu_params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_imu_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vio_output_proto.Vec3 biasAcc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_biasacc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vio_output_proto.Vec3 biasGyro = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_biasgyro()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vio_output_proto.Vec3 position = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vio_output_proto.Quat rotation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vio_output_proto.Vec3 velocity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vio_output_proto.IMUIntInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vio_output_proto.IMUIntInput)
  return false;
#undef DO_
}

void IMUIntInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vio_output_proto.IMUIntInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 last_cam_integration_time = 1;
  if (this->last_cam_integration_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->last_cam_integration_time(), output);
  }

  // fixed64 t_offset = 2;
  if (this->t_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->t_offset(), output);
  }

  // .vio_output_proto.IMUParams imu_params = 3;
  if (this->has_imu_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_imu_params(), output);
  }

  // .vio_output_proto.Vec3 biasAcc = 4;
  if (this->has_biasacc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_biasacc(), output);
  }

  // .vio_output_proto.Vec3 biasGyro = 5;
  if (this->has_biasgyro()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_biasgyro(), output);
  }

  // .vio_output_proto.Vec3 position = 6;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_position(), output);
  }

  // .vio_output_proto.Quat rotation = 7;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_rotation(), output);
  }

  // .vio_output_proto.Vec3 velocity = 8;
  if (this->has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_velocity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vio_output_proto.IMUIntInput)
}

::google::protobuf::uint8* IMUIntInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vio_output_proto.IMUIntInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 last_cam_integration_time = 1;
  if (this->last_cam_integration_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->last_cam_integration_time(), target);
  }

  // fixed64 t_offset = 2;
  if (this->t_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->t_offset(), target);
  }

  // .vio_output_proto.IMUParams imu_params = 3;
  if (this->has_imu_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_imu_params(), deterministic, target);
  }

  // .vio_output_proto.Vec3 biasAcc = 4;
  if (this->has_biasacc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_biasacc(), deterministic, target);
  }

  // .vio_output_proto.Vec3 biasGyro = 5;
  if (this->has_biasgyro()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_biasgyro(), deterministic, target);
  }

  // .vio_output_proto.Vec3 position = 6;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_position(), deterministic, target);
  }

  // .vio_output_proto.Quat rotation = 7;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_rotation(), deterministic, target);
  }

  // .vio_output_proto.Vec3 velocity = 8;
  if (this->has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_velocity(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vio_output_proto.IMUIntInput)
  return target;
}

size_t IMUIntInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vio_output_proto.IMUIntInput)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .vio_output_proto.IMUParams imu_params = 3;
  if (this->has_imu_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *imu_params_);
  }

  // .vio_output_proto.Vec3 biasAcc = 4;
  if (this->has_biasacc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *biasacc_);
  }

  // .vio_output_proto.Vec3 biasGyro = 5;
  if (this->has_biasgyro()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *biasgyro_);
  }

  // .vio_output_proto.Vec3 position = 6;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .vio_output_proto.Quat rotation = 7;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // .vio_output_proto.Vec3 velocity = 8;
  if (this->has_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocity_);
  }

  // fixed64 last_cam_integration_time = 1;
  if (this->last_cam_integration_time() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 t_offset = 2;
  if (this->t_offset() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMUIntInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vio_output_proto.IMUIntInput)
  GOOGLE_DCHECK_NE(&from, this);
  const IMUIntInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMUIntInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vio_output_proto.IMUIntInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vio_output_proto.IMUIntInput)
    MergeFrom(*source);
  }
}

void IMUIntInput::MergeFrom(const IMUIntInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vio_output_proto.IMUIntInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_imu_params()) {
    mutable_imu_params()->::vio_output_proto::IMUParams::MergeFrom(from.imu_params());
  }
  if (from.has_biasacc()) {
    mutable_biasacc()->::vio_output_proto::Vec3::MergeFrom(from.biasacc());
  }
  if (from.has_biasgyro()) {
    mutable_biasgyro()->::vio_output_proto::Vec3::MergeFrom(from.biasgyro());
  }
  if (from.has_position()) {
    mutable_position()->::vio_output_proto::Vec3::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::vio_output_proto::Quat::MergeFrom(from.rotation());
  }
  if (from.has_velocity()) {
    mutable_velocity()->::vio_output_proto::Vec3::MergeFrom(from.velocity());
  }
  if (from.last_cam_integration_time() != 0) {
    set_last_cam_integration_time(from.last_cam_integration_time());
  }
  if (from.t_offset() != 0) {
    set_t_offset(from.t_offset());
  }
}

void IMUIntInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vio_output_proto.IMUIntInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMUIntInput::CopyFrom(const IMUIntInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vio_output_proto.IMUIntInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMUIntInput::IsInitialized() const {
  return true;
}

void IMUIntInput::Swap(IMUIntInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMUIntInput::InternalSwap(IMUIntInput* other) {
  using std::swap;
  swap(imu_params_, other->imu_params_);
  swap(biasacc_, other->biasacc_);
  swap(biasgyro_, other->biasgyro_);
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(velocity_, other->velocity_);
  swap(last_cam_integration_time_, other->last_cam_integration_time_);
  swap(t_offset_, other->t_offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IMUIntInput::GetMetadata() const {
  protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VIOOutput::InitAsDefaultInstance() {
  ::vio_output_proto::_VIOOutput_default_instance_._instance.get_mutable()->slow_pose_ = const_cast< ::vio_output_proto::SlowPose*>(
      ::vio_output_proto::SlowPose::internal_default_instance());
  ::vio_output_proto::_VIOOutput_default_instance_._instance.get_mutable()->imu_int_input_ = const_cast< ::vio_output_proto::IMUIntInput*>(
      ::vio_output_proto::IMUIntInput::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VIOOutput::kSlowPoseFieldNumber;
const int VIOOutput::kImuIntInputFieldNumber;
const int VIOOutput::kStartTimestampFieldNumber;
const int VIOOutput::kEndServerTimestampFieldNumber;
const int VIOOutput::kDatasetTimestampFieldNumber;
const int VIOOutput::kFrameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VIOOutput::VIOOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vio_5foutput_2eproto::scc_info_VIOOutput.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vio_output_proto.VIOOutput)
}
VIOOutput::VIOOutput(const VIOOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_slow_pose()) {
    slow_pose_ = new ::vio_output_proto::SlowPose(*from.slow_pose_);
  } else {
    slow_pose_ = NULL;
  }
  if (from.has_imu_int_input()) {
    imu_int_input_ = new ::vio_output_proto::IMUIntInput(*from.imu_int_input_);
  } else {
    imu_int_input_ = NULL;
  }
  ::memcpy(&start_timestamp_, &from.start_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&frame_id_) -
    reinterpret_cast<char*>(&start_timestamp_)) + sizeof(frame_id_));
  // @@protoc_insertion_point(copy_constructor:vio_output_proto.VIOOutput)
}

void VIOOutput::SharedCtor() {
  ::memset(&slow_pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_id_) -
      reinterpret_cast<char*>(&slow_pose_)) + sizeof(frame_id_));
}

VIOOutput::~VIOOutput() {
  // @@protoc_insertion_point(destructor:vio_output_proto.VIOOutput)
  SharedDtor();
}

void VIOOutput::SharedDtor() {
  if (this != internal_default_instance()) delete slow_pose_;
  if (this != internal_default_instance()) delete imu_int_input_;
}

void VIOOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VIOOutput::descriptor() {
  ::protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VIOOutput& VIOOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vio_5foutput_2eproto::scc_info_VIOOutput.base);
  return *internal_default_instance();
}


void VIOOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:vio_output_proto.VIOOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && slow_pose_ != NULL) {
    delete slow_pose_;
  }
  slow_pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && imu_int_input_ != NULL) {
    delete imu_int_input_;
  }
  imu_int_input_ = NULL;
  ::memset(&start_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_id_) -
      reinterpret_cast<char*>(&start_timestamp_)) + sizeof(frame_id_));
  _internal_metadata_.Clear();
}

bool VIOOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vio_output_proto.VIOOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .vio_output_proto.SlowPose slow_pose = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_slow_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vio_output_proto.IMUIntInput imu_int_input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_imu_int_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 start_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &start_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 end_server_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &end_server_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 dataset_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &dataset_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 frame_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vio_output_proto.VIOOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vio_output_proto.VIOOutput)
  return false;
#undef DO_
}

void VIOOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vio_output_proto.VIOOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vio_output_proto.SlowPose slow_pose = 1;
  if (this->has_slow_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_slow_pose(), output);
  }

  // .vio_output_proto.IMUIntInput imu_int_input = 2;
  if (this->has_imu_int_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_imu_int_input(), output);
  }

  // fixed64 start_timestamp = 3;
  if (this->start_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->start_timestamp(), output);
  }

  // fixed64 end_server_timestamp = 4;
  if (this->end_server_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->end_server_timestamp(), output);
  }

  // fixed64 dataset_timestamp = 5;
  if (this->dataset_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->dataset_timestamp(), output);
  }

  // int32 frame_id = 6;
  if (this->frame_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->frame_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vio_output_proto.VIOOutput)
}

::google::protobuf::uint8* VIOOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vio_output_proto.VIOOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vio_output_proto.SlowPose slow_pose = 1;
  if (this->has_slow_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_slow_pose(), deterministic, target);
  }

  // .vio_output_proto.IMUIntInput imu_int_input = 2;
  if (this->has_imu_int_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_imu_int_input(), deterministic, target);
  }

  // fixed64 start_timestamp = 3;
  if (this->start_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->start_timestamp(), target);
  }

  // fixed64 end_server_timestamp = 4;
  if (this->end_server_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->end_server_timestamp(), target);
  }

  // fixed64 dataset_timestamp = 5;
  if (this->dataset_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->dataset_timestamp(), target);
  }

  // int32 frame_id = 6;
  if (this->frame_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->frame_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vio_output_proto.VIOOutput)
  return target;
}

size_t VIOOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vio_output_proto.VIOOutput)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .vio_output_proto.SlowPose slow_pose = 1;
  if (this->has_slow_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *slow_pose_);
  }

  // .vio_output_proto.IMUIntInput imu_int_input = 2;
  if (this->has_imu_int_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *imu_int_input_);
  }

  // fixed64 start_timestamp = 3;
  if (this->start_timestamp() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 end_server_timestamp = 4;
  if (this->end_server_timestamp() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 dataset_timestamp = 5;
  if (this->dataset_timestamp() != 0) {
    total_size += 1 + 8;
  }

  // int32 frame_id = 6;
  if (this->frame_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VIOOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vio_output_proto.VIOOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const VIOOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VIOOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vio_output_proto.VIOOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vio_output_proto.VIOOutput)
    MergeFrom(*source);
  }
}

void VIOOutput::MergeFrom(const VIOOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vio_output_proto.VIOOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slow_pose()) {
    mutable_slow_pose()->::vio_output_proto::SlowPose::MergeFrom(from.slow_pose());
  }
  if (from.has_imu_int_input()) {
    mutable_imu_int_input()->::vio_output_proto::IMUIntInput::MergeFrom(from.imu_int_input());
  }
  if (from.start_timestamp() != 0) {
    set_start_timestamp(from.start_timestamp());
  }
  if (from.end_server_timestamp() != 0) {
    set_end_server_timestamp(from.end_server_timestamp());
  }
  if (from.dataset_timestamp() != 0) {
    set_dataset_timestamp(from.dataset_timestamp());
  }
  if (from.frame_id() != 0) {
    set_frame_id(from.frame_id());
  }
}

void VIOOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vio_output_proto.VIOOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VIOOutput::CopyFrom(const VIOOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vio_output_proto.VIOOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VIOOutput::IsInitialized() const {
  return true;
}

void VIOOutput::Swap(VIOOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VIOOutput::InternalSwap(VIOOutput* other) {
  using std::swap;
  swap(slow_pose_, other->slow_pose_);
  swap(imu_int_input_, other->imu_int_input_);
  swap(start_timestamp_, other->start_timestamp_);
  swap(end_server_timestamp_, other->end_server_timestamp_);
  swap(dataset_timestamp_, other->dataset_timestamp_);
  swap(frame_id_, other->frame_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VIOOutput::GetMetadata() const {
  protobuf_vio_5foutput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vio_5foutput_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace vio_output_proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vio_output_proto::Vec3* Arena::CreateMaybeMessage< ::vio_output_proto::Vec3 >(Arena* arena) {
  return Arena::CreateInternal< ::vio_output_proto::Vec3 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vio_output_proto::Quat* Arena::CreateMaybeMessage< ::vio_output_proto::Quat >(Arena* arena) {
  return Arena::CreateInternal< ::vio_output_proto::Quat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vio_output_proto::IMUParams* Arena::CreateMaybeMessage< ::vio_output_proto::IMUParams >(Arena* arena) {
  return Arena::CreateInternal< ::vio_output_proto::IMUParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vio_output_proto::SlowPose* Arena::CreateMaybeMessage< ::vio_output_proto::SlowPose >(Arena* arena) {
  return Arena::CreateInternal< ::vio_output_proto::SlowPose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vio_output_proto::IMUIntInput* Arena::CreateMaybeMessage< ::vio_output_proto::IMUIntInput >(Arena* arena) {
  return Arena::CreateInternal< ::vio_output_proto::IMUIntInput >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vio_output_proto::VIOOutput* Arena::CreateMaybeMessage< ::vio_output_proto::VIOOutput >(Arena* arena) {
  return Arena::CreateInternal< ::vio_output_proto::VIOOutput >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
