// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vio_output.proto

#ifndef PROTOBUF_INCLUDED_vio_5foutput_2eproto
#define PROTOBUF_INCLUDED_vio_5foutput_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_vio_5foutput_2eproto 

namespace protobuf_vio_5foutput_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_vio_5foutput_2eproto
namespace vio_output_proto {
class IMUIntInput;
class IMUIntInputDefaultTypeInternal;
extern IMUIntInputDefaultTypeInternal _IMUIntInput_default_instance_;
class IMUParams;
class IMUParamsDefaultTypeInternal;
extern IMUParamsDefaultTypeInternal _IMUParams_default_instance_;
class Quat;
class QuatDefaultTypeInternal;
extern QuatDefaultTypeInternal _Quat_default_instance_;
class SlowPose;
class SlowPoseDefaultTypeInternal;
extern SlowPoseDefaultTypeInternal _SlowPose_default_instance_;
class VIOOutput;
class VIOOutputDefaultTypeInternal;
extern VIOOutputDefaultTypeInternal _VIOOutput_default_instance_;
class Vec3;
class Vec3DefaultTypeInternal;
extern Vec3DefaultTypeInternal _Vec3_default_instance_;
}  // namespace vio_output_proto
namespace google {
namespace protobuf {
template<> ::vio_output_proto::IMUIntInput* Arena::CreateMaybeMessage<::vio_output_proto::IMUIntInput>(Arena*);
template<> ::vio_output_proto::IMUParams* Arena::CreateMaybeMessage<::vio_output_proto::IMUParams>(Arena*);
template<> ::vio_output_proto::Quat* Arena::CreateMaybeMessage<::vio_output_proto::Quat>(Arena*);
template<> ::vio_output_proto::SlowPose* Arena::CreateMaybeMessage<::vio_output_proto::SlowPose>(Arena*);
template<> ::vio_output_proto::VIOOutput* Arena::CreateMaybeMessage<::vio_output_proto::VIOOutput>(Arena*);
template<> ::vio_output_proto::Vec3* Arena::CreateMaybeMessage<::vio_output_proto::Vec3>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace vio_output_proto {

// ===================================================================

class Vec3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vio_output_proto.Vec3) */ {
 public:
  Vec3();
  virtual ~Vec3();

  Vec3(const Vec3& from);

  inline Vec3& operator=(const Vec3& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vec3(Vec3&& from) noexcept
    : Vec3() {
    *this = ::std::move(from);
  }

  inline Vec3& operator=(Vec3&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vec3& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vec3* internal_default_instance() {
    return reinterpret_cast<const Vec3*>(
               &_Vec3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Vec3* other);
  friend void swap(Vec3& a, Vec3& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vec3* New() const final {
    return CreateMaybeMessage<Vec3>(NULL);
  }

  Vec3* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Vec3>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Vec3& from);
  void MergeFrom(const Vec3& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vec3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:vio_output_proto.Vec3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vio_5foutput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Quat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vio_output_proto.Quat) */ {
 public:
  Quat();
  virtual ~Quat();

  Quat(const Quat& from);

  inline Quat& operator=(const Quat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quat(Quat&& from) noexcept
    : Quat() {
    *this = ::std::move(from);
  }

  inline Quat& operator=(Quat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Quat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Quat* internal_default_instance() {
    return reinterpret_cast<const Quat*>(
               &_Quat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Quat* other);
  friend void swap(Quat& a, Quat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quat* New() const final {
    return CreateMaybeMessage<Quat>(NULL);
  }

  Quat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Quat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Quat& from);
  void MergeFrom(const Quat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Quat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double w = 1;
  void clear_w();
  static const int kWFieldNumber = 1;
  double w() const;
  void set_w(double value);

  // double x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  double x() const;
  void set_x(double value);

  // double y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  double y() const;
  void set_y(double value);

  // double z = 4;
  void clear_z();
  static const int kZFieldNumber = 4;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:vio_output_proto.Quat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double w_;
  double x_;
  double y_;
  double z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vio_5foutput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMUParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vio_output_proto.IMUParams) */ {
 public:
  IMUParams();
  virtual ~IMUParams();

  IMUParams(const IMUParams& from);

  inline IMUParams& operator=(const IMUParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMUParams(IMUParams&& from) noexcept
    : IMUParams() {
    *this = ::std::move(from);
  }

  inline IMUParams& operator=(IMUParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IMUParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMUParams* internal_default_instance() {
    return reinterpret_cast<const IMUParams*>(
               &_IMUParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(IMUParams* other);
  friend void swap(IMUParams& a, IMUParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMUParams* New() const final {
    return CreateMaybeMessage<IMUParams>(NULL);
  }

  IMUParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IMUParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IMUParams& from);
  void MergeFrom(const IMUParams& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IMUParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .vio_output_proto.Vec3 n_gravity = 5;
  bool has_n_gravity() const;
  void clear_n_gravity();
  static const int kNGravityFieldNumber = 5;
  private:
  const ::vio_output_proto::Vec3& _internal_n_gravity() const;
  public:
  const ::vio_output_proto::Vec3& n_gravity() const;
  ::vio_output_proto::Vec3* release_n_gravity();
  ::vio_output_proto::Vec3* mutable_n_gravity();
  void set_allocated_n_gravity(::vio_output_proto::Vec3* n_gravity);

  // double gyro_noise = 1;
  void clear_gyro_noise();
  static const int kGyroNoiseFieldNumber = 1;
  double gyro_noise() const;
  void set_gyro_noise(double value);

  // double acc_noise = 2;
  void clear_acc_noise();
  static const int kAccNoiseFieldNumber = 2;
  double acc_noise() const;
  void set_acc_noise(double value);

  // double gyro_walk = 3;
  void clear_gyro_walk();
  static const int kGyroWalkFieldNumber = 3;
  double gyro_walk() const;
  void set_gyro_walk(double value);

  // double acc_walk = 4;
  void clear_acc_walk();
  static const int kAccWalkFieldNumber = 4;
  double acc_walk() const;
  void set_acc_walk(double value);

  // double imu_integration_sigma = 6;
  void clear_imu_integration_sigma();
  static const int kImuIntegrationSigmaFieldNumber = 6;
  double imu_integration_sigma() const;
  void set_imu_integration_sigma(double value);

  // double nominal_rate = 7;
  void clear_nominal_rate();
  static const int kNominalRateFieldNumber = 7;
  double nominal_rate() const;
  void set_nominal_rate(double value);

  // @@protoc_insertion_point(class_scope:vio_output_proto.IMUParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::vio_output_proto::Vec3* n_gravity_;
  double gyro_noise_;
  double acc_noise_;
  double gyro_walk_;
  double acc_walk_;
  double imu_integration_sigma_;
  double nominal_rate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vio_5foutput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SlowPose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vio_output_proto.SlowPose) */ {
 public:
  SlowPose();
  virtual ~SlowPose();

  SlowPose(const SlowPose& from);

  inline SlowPose& operator=(const SlowPose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SlowPose(SlowPose&& from) noexcept
    : SlowPose() {
    *this = ::std::move(from);
  }

  inline SlowPose& operator=(SlowPose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlowPose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlowPose* internal_default_instance() {
    return reinterpret_cast<const SlowPose*>(
               &_SlowPose_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SlowPose* other);
  friend void swap(SlowPose& a, SlowPose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SlowPose* New() const final {
    return CreateMaybeMessage<SlowPose>(NULL);
  }

  SlowPose* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SlowPose>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SlowPose& from);
  void MergeFrom(const SlowPose& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlowPose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .vio_output_proto.Vec3 position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  private:
  const ::vio_output_proto::Vec3& _internal_position() const;
  public:
  const ::vio_output_proto::Vec3& position() const;
  ::vio_output_proto::Vec3* release_position();
  ::vio_output_proto::Vec3* mutable_position();
  void set_allocated_position(::vio_output_proto::Vec3* position);

  // .vio_output_proto.Quat rotation = 3;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 3;
  private:
  const ::vio_output_proto::Quat& _internal_rotation() const;
  public:
  const ::vio_output_proto::Quat& rotation() const;
  ::vio_output_proto::Quat* release_rotation();
  ::vio_output_proto::Quat* mutable_rotation();
  void set_allocated_rotation(::vio_output_proto::Quat* rotation);

  // fixed64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:vio_output_proto.SlowPose)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::vio_output_proto::Vec3* position_;
  ::vio_output_proto::Quat* rotation_;
  ::google::protobuf::uint64 timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vio_5foutput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMUIntInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vio_output_proto.IMUIntInput) */ {
 public:
  IMUIntInput();
  virtual ~IMUIntInput();

  IMUIntInput(const IMUIntInput& from);

  inline IMUIntInput& operator=(const IMUIntInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMUIntInput(IMUIntInput&& from) noexcept
    : IMUIntInput() {
    *this = ::std::move(from);
  }

  inline IMUIntInput& operator=(IMUIntInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IMUIntInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMUIntInput* internal_default_instance() {
    return reinterpret_cast<const IMUIntInput*>(
               &_IMUIntInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(IMUIntInput* other);
  friend void swap(IMUIntInput& a, IMUIntInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMUIntInput* New() const final {
    return CreateMaybeMessage<IMUIntInput>(NULL);
  }

  IMUIntInput* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IMUIntInput>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IMUIntInput& from);
  void MergeFrom(const IMUIntInput& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IMUIntInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .vio_output_proto.IMUParams imu_params = 3;
  bool has_imu_params() const;
  void clear_imu_params();
  static const int kImuParamsFieldNumber = 3;
  private:
  const ::vio_output_proto::IMUParams& _internal_imu_params() const;
  public:
  const ::vio_output_proto::IMUParams& imu_params() const;
  ::vio_output_proto::IMUParams* release_imu_params();
  ::vio_output_proto::IMUParams* mutable_imu_params();
  void set_allocated_imu_params(::vio_output_proto::IMUParams* imu_params);

  // .vio_output_proto.Vec3 biasAcc = 4;
  bool has_biasacc() const;
  void clear_biasacc();
  static const int kBiasAccFieldNumber = 4;
  private:
  const ::vio_output_proto::Vec3& _internal_biasacc() const;
  public:
  const ::vio_output_proto::Vec3& biasacc() const;
  ::vio_output_proto::Vec3* release_biasacc();
  ::vio_output_proto::Vec3* mutable_biasacc();
  void set_allocated_biasacc(::vio_output_proto::Vec3* biasacc);

  // .vio_output_proto.Vec3 biasGyro = 5;
  bool has_biasgyro() const;
  void clear_biasgyro();
  static const int kBiasGyroFieldNumber = 5;
  private:
  const ::vio_output_proto::Vec3& _internal_biasgyro() const;
  public:
  const ::vio_output_proto::Vec3& biasgyro() const;
  ::vio_output_proto::Vec3* release_biasgyro();
  ::vio_output_proto::Vec3* mutable_biasgyro();
  void set_allocated_biasgyro(::vio_output_proto::Vec3* biasgyro);

  // .vio_output_proto.Vec3 position = 6;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 6;
  private:
  const ::vio_output_proto::Vec3& _internal_position() const;
  public:
  const ::vio_output_proto::Vec3& position() const;
  ::vio_output_proto::Vec3* release_position();
  ::vio_output_proto::Vec3* mutable_position();
  void set_allocated_position(::vio_output_proto::Vec3* position);

  // .vio_output_proto.Quat rotation = 7;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 7;
  private:
  const ::vio_output_proto::Quat& _internal_rotation() const;
  public:
  const ::vio_output_proto::Quat& rotation() const;
  ::vio_output_proto::Quat* release_rotation();
  ::vio_output_proto::Quat* mutable_rotation();
  void set_allocated_rotation(::vio_output_proto::Quat* rotation);

  // .vio_output_proto.Vec3 velocity = 8;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 8;
  private:
  const ::vio_output_proto::Vec3& _internal_velocity() const;
  public:
  const ::vio_output_proto::Vec3& velocity() const;
  ::vio_output_proto::Vec3* release_velocity();
  ::vio_output_proto::Vec3* mutable_velocity();
  void set_allocated_velocity(::vio_output_proto::Vec3* velocity);

  // fixed64 last_cam_integration_time = 1;
  void clear_last_cam_integration_time();
  static const int kLastCamIntegrationTimeFieldNumber = 1;
  ::google::protobuf::uint64 last_cam_integration_time() const;
  void set_last_cam_integration_time(::google::protobuf::uint64 value);

  // fixed64 t_offset = 2;
  void clear_t_offset();
  static const int kTOffsetFieldNumber = 2;
  ::google::protobuf::uint64 t_offset() const;
  void set_t_offset(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:vio_output_proto.IMUIntInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::vio_output_proto::IMUParams* imu_params_;
  ::vio_output_proto::Vec3* biasacc_;
  ::vio_output_proto::Vec3* biasgyro_;
  ::vio_output_proto::Vec3* position_;
  ::vio_output_proto::Quat* rotation_;
  ::vio_output_proto::Vec3* velocity_;
  ::google::protobuf::uint64 last_cam_integration_time_;
  ::google::protobuf::uint64 t_offset_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vio_5foutput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VIOOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vio_output_proto.VIOOutput) */ {
 public:
  VIOOutput();
  virtual ~VIOOutput();

  VIOOutput(const VIOOutput& from);

  inline VIOOutput& operator=(const VIOOutput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VIOOutput(VIOOutput&& from) noexcept
    : VIOOutput() {
    *this = ::std::move(from);
  }

  inline VIOOutput& operator=(VIOOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VIOOutput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VIOOutput* internal_default_instance() {
    return reinterpret_cast<const VIOOutput*>(
               &_VIOOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(VIOOutput* other);
  friend void swap(VIOOutput& a, VIOOutput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VIOOutput* New() const final {
    return CreateMaybeMessage<VIOOutput>(NULL);
  }

  VIOOutput* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VIOOutput>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VIOOutput& from);
  void MergeFrom(const VIOOutput& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VIOOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .vio_output_proto.SlowPose slow_pose = 1;
  bool has_slow_pose() const;
  void clear_slow_pose();
  static const int kSlowPoseFieldNumber = 1;
  private:
  const ::vio_output_proto::SlowPose& _internal_slow_pose() const;
  public:
  const ::vio_output_proto::SlowPose& slow_pose() const;
  ::vio_output_proto::SlowPose* release_slow_pose();
  ::vio_output_proto::SlowPose* mutable_slow_pose();
  void set_allocated_slow_pose(::vio_output_proto::SlowPose* slow_pose);

  // .vio_output_proto.IMUIntInput imu_int_input = 2;
  bool has_imu_int_input() const;
  void clear_imu_int_input();
  static const int kImuIntInputFieldNumber = 2;
  private:
  const ::vio_output_proto::IMUIntInput& _internal_imu_int_input() const;
  public:
  const ::vio_output_proto::IMUIntInput& imu_int_input() const;
  ::vio_output_proto::IMUIntInput* release_imu_int_input();
  ::vio_output_proto::IMUIntInput* mutable_imu_int_input();
  void set_allocated_imu_int_input(::vio_output_proto::IMUIntInput* imu_int_input);

  // fixed64 start_timestamp = 3;
  void clear_start_timestamp();
  static const int kStartTimestampFieldNumber = 3;
  ::google::protobuf::uint64 start_timestamp() const;
  void set_start_timestamp(::google::protobuf::uint64 value);

  // fixed64 end_server_timestamp = 4;
  void clear_end_server_timestamp();
  static const int kEndServerTimestampFieldNumber = 4;
  ::google::protobuf::uint64 end_server_timestamp() const;
  void set_end_server_timestamp(::google::protobuf::uint64 value);

  // fixed64 dataset_timestamp = 5;
  void clear_dataset_timestamp();
  static const int kDatasetTimestampFieldNumber = 5;
  ::google::protobuf::uint64 dataset_timestamp() const;
  void set_dataset_timestamp(::google::protobuf::uint64 value);

  // int32 frame_id = 6;
  void clear_frame_id();
  static const int kFrameIdFieldNumber = 6;
  ::google::protobuf::int32 frame_id() const;
  void set_frame_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vio_output_proto.VIOOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::vio_output_proto::SlowPose* slow_pose_;
  ::vio_output_proto::IMUIntInput* imu_int_input_;
  ::google::protobuf::uint64 start_timestamp_;
  ::google::protobuf::uint64 end_server_timestamp_;
  ::google::protobuf::uint64 dataset_timestamp_;
  ::google::protobuf::int32 frame_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vio_5foutput_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Vec3

// double x = 1;
inline void Vec3::clear_x() {
  x_ = 0;
}
inline double Vec3::x() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.Vec3.x)
  return x_;
}
inline void Vec3::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.Vec3.x)
}

// double y = 2;
inline void Vec3::clear_y() {
  y_ = 0;
}
inline double Vec3::y() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.Vec3.y)
  return y_;
}
inline void Vec3::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.Vec3.y)
}

// double z = 3;
inline void Vec3::clear_z() {
  z_ = 0;
}
inline double Vec3::z() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.Vec3.z)
  return z_;
}
inline void Vec3::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.Vec3.z)
}

// -------------------------------------------------------------------

// Quat

// double w = 1;
inline void Quat::clear_w() {
  w_ = 0;
}
inline double Quat::w() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.Quat.w)
  return w_;
}
inline void Quat::set_w(double value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.Quat.w)
}

// double x = 2;
inline void Quat::clear_x() {
  x_ = 0;
}
inline double Quat::x() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.Quat.x)
  return x_;
}
inline void Quat::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.Quat.x)
}

// double y = 3;
inline void Quat::clear_y() {
  y_ = 0;
}
inline double Quat::y() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.Quat.y)
  return y_;
}
inline void Quat::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.Quat.y)
}

// double z = 4;
inline void Quat::clear_z() {
  z_ = 0;
}
inline double Quat::z() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.Quat.z)
  return z_;
}
inline void Quat::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.Quat.z)
}

// -------------------------------------------------------------------

// IMUParams

// double gyro_noise = 1;
inline void IMUParams::clear_gyro_noise() {
  gyro_noise_ = 0;
}
inline double IMUParams::gyro_noise() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUParams.gyro_noise)
  return gyro_noise_;
}
inline void IMUParams::set_gyro_noise(double value) {
  
  gyro_noise_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.IMUParams.gyro_noise)
}

// double acc_noise = 2;
inline void IMUParams::clear_acc_noise() {
  acc_noise_ = 0;
}
inline double IMUParams::acc_noise() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUParams.acc_noise)
  return acc_noise_;
}
inline void IMUParams::set_acc_noise(double value) {
  
  acc_noise_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.IMUParams.acc_noise)
}

// double gyro_walk = 3;
inline void IMUParams::clear_gyro_walk() {
  gyro_walk_ = 0;
}
inline double IMUParams::gyro_walk() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUParams.gyro_walk)
  return gyro_walk_;
}
inline void IMUParams::set_gyro_walk(double value) {
  
  gyro_walk_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.IMUParams.gyro_walk)
}

// double acc_walk = 4;
inline void IMUParams::clear_acc_walk() {
  acc_walk_ = 0;
}
inline double IMUParams::acc_walk() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUParams.acc_walk)
  return acc_walk_;
}
inline void IMUParams::set_acc_walk(double value) {
  
  acc_walk_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.IMUParams.acc_walk)
}

// .vio_output_proto.Vec3 n_gravity = 5;
inline bool IMUParams::has_n_gravity() const {
  return this != internal_default_instance() && n_gravity_ != NULL;
}
inline void IMUParams::clear_n_gravity() {
  if (GetArenaNoVirtual() == NULL && n_gravity_ != NULL) {
    delete n_gravity_;
  }
  n_gravity_ = NULL;
}
inline const ::vio_output_proto::Vec3& IMUParams::_internal_n_gravity() const {
  return *n_gravity_;
}
inline const ::vio_output_proto::Vec3& IMUParams::n_gravity() const {
  const ::vio_output_proto::Vec3* p = n_gravity_;
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUParams.n_gravity)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::Vec3*>(
      &::vio_output_proto::_Vec3_default_instance_);
}
inline ::vio_output_proto::Vec3* IMUParams::release_n_gravity() {
  // @@protoc_insertion_point(field_release:vio_output_proto.IMUParams.n_gravity)
  
  ::vio_output_proto::Vec3* temp = n_gravity_;
  n_gravity_ = NULL;
  return temp;
}
inline ::vio_output_proto::Vec3* IMUParams::mutable_n_gravity() {
  
  if (n_gravity_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::Vec3>(GetArenaNoVirtual());
    n_gravity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.IMUParams.n_gravity)
  return n_gravity_;
}
inline void IMUParams::set_allocated_n_gravity(::vio_output_proto::Vec3* n_gravity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete n_gravity_;
  }
  if (n_gravity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      n_gravity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, n_gravity, submessage_arena);
    }
    
  } else {
    
  }
  n_gravity_ = n_gravity;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.IMUParams.n_gravity)
}

// double imu_integration_sigma = 6;
inline void IMUParams::clear_imu_integration_sigma() {
  imu_integration_sigma_ = 0;
}
inline double IMUParams::imu_integration_sigma() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUParams.imu_integration_sigma)
  return imu_integration_sigma_;
}
inline void IMUParams::set_imu_integration_sigma(double value) {
  
  imu_integration_sigma_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.IMUParams.imu_integration_sigma)
}

// double nominal_rate = 7;
inline void IMUParams::clear_nominal_rate() {
  nominal_rate_ = 0;
}
inline double IMUParams::nominal_rate() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUParams.nominal_rate)
  return nominal_rate_;
}
inline void IMUParams::set_nominal_rate(double value) {
  
  nominal_rate_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.IMUParams.nominal_rate)
}

// -------------------------------------------------------------------

// SlowPose

// fixed64 timestamp = 1;
inline void SlowPose::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SlowPose::timestamp() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.SlowPose.timestamp)
  return timestamp_;
}
inline void SlowPose::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.SlowPose.timestamp)
}

// .vio_output_proto.Vec3 position = 2;
inline bool SlowPose::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void SlowPose::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::vio_output_proto::Vec3& SlowPose::_internal_position() const {
  return *position_;
}
inline const ::vio_output_proto::Vec3& SlowPose::position() const {
  const ::vio_output_proto::Vec3* p = position_;
  // @@protoc_insertion_point(field_get:vio_output_proto.SlowPose.position)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::Vec3*>(
      &::vio_output_proto::_Vec3_default_instance_);
}
inline ::vio_output_proto::Vec3* SlowPose::release_position() {
  // @@protoc_insertion_point(field_release:vio_output_proto.SlowPose.position)
  
  ::vio_output_proto::Vec3* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::vio_output_proto::Vec3* SlowPose::mutable_position() {
  
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::Vec3>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.SlowPose.position)
  return position_;
}
inline void SlowPose::set_allocated_position(::vio_output_proto::Vec3* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.SlowPose.position)
}

// .vio_output_proto.Quat rotation = 3;
inline bool SlowPose::has_rotation() const {
  return this != internal_default_instance() && rotation_ != NULL;
}
inline void SlowPose::clear_rotation() {
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
}
inline const ::vio_output_proto::Quat& SlowPose::_internal_rotation() const {
  return *rotation_;
}
inline const ::vio_output_proto::Quat& SlowPose::rotation() const {
  const ::vio_output_proto::Quat* p = rotation_;
  // @@protoc_insertion_point(field_get:vio_output_proto.SlowPose.rotation)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::Quat*>(
      &::vio_output_proto::_Quat_default_instance_);
}
inline ::vio_output_proto::Quat* SlowPose::release_rotation() {
  // @@protoc_insertion_point(field_release:vio_output_proto.SlowPose.rotation)
  
  ::vio_output_proto::Quat* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
inline ::vio_output_proto::Quat* SlowPose::mutable_rotation() {
  
  if (rotation_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::Quat>(GetArenaNoVirtual());
    rotation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.SlowPose.rotation)
  return rotation_;
}
inline void SlowPose::set_allocated_rotation(::vio_output_proto::Quat* rotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rotation_;
  }
  if (rotation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rotation, submessage_arena);
    }
    
  } else {
    
  }
  rotation_ = rotation;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.SlowPose.rotation)
}

// -------------------------------------------------------------------

// IMUIntInput

// fixed64 last_cam_integration_time = 1;
inline void IMUIntInput::clear_last_cam_integration_time() {
  last_cam_integration_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IMUIntInput::last_cam_integration_time() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUIntInput.last_cam_integration_time)
  return last_cam_integration_time_;
}
inline void IMUIntInput::set_last_cam_integration_time(::google::protobuf::uint64 value) {
  
  last_cam_integration_time_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.IMUIntInput.last_cam_integration_time)
}

// fixed64 t_offset = 2;
inline void IMUIntInput::clear_t_offset() {
  t_offset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IMUIntInput::t_offset() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUIntInput.t_offset)
  return t_offset_;
}
inline void IMUIntInput::set_t_offset(::google::protobuf::uint64 value) {
  
  t_offset_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.IMUIntInput.t_offset)
}

// .vio_output_proto.IMUParams imu_params = 3;
inline bool IMUIntInput::has_imu_params() const {
  return this != internal_default_instance() && imu_params_ != NULL;
}
inline void IMUIntInput::clear_imu_params() {
  if (GetArenaNoVirtual() == NULL && imu_params_ != NULL) {
    delete imu_params_;
  }
  imu_params_ = NULL;
}
inline const ::vio_output_proto::IMUParams& IMUIntInput::_internal_imu_params() const {
  return *imu_params_;
}
inline const ::vio_output_proto::IMUParams& IMUIntInput::imu_params() const {
  const ::vio_output_proto::IMUParams* p = imu_params_;
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUIntInput.imu_params)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::IMUParams*>(
      &::vio_output_proto::_IMUParams_default_instance_);
}
inline ::vio_output_proto::IMUParams* IMUIntInput::release_imu_params() {
  // @@protoc_insertion_point(field_release:vio_output_proto.IMUIntInput.imu_params)
  
  ::vio_output_proto::IMUParams* temp = imu_params_;
  imu_params_ = NULL;
  return temp;
}
inline ::vio_output_proto::IMUParams* IMUIntInput::mutable_imu_params() {
  
  if (imu_params_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::IMUParams>(GetArenaNoVirtual());
    imu_params_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.IMUIntInput.imu_params)
  return imu_params_;
}
inline void IMUIntInput::set_allocated_imu_params(::vio_output_proto::IMUParams* imu_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete imu_params_;
  }
  if (imu_params) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      imu_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, imu_params, submessage_arena);
    }
    
  } else {
    
  }
  imu_params_ = imu_params;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.IMUIntInput.imu_params)
}

// .vio_output_proto.Vec3 biasAcc = 4;
inline bool IMUIntInput::has_biasacc() const {
  return this != internal_default_instance() && biasacc_ != NULL;
}
inline void IMUIntInput::clear_biasacc() {
  if (GetArenaNoVirtual() == NULL && biasacc_ != NULL) {
    delete biasacc_;
  }
  biasacc_ = NULL;
}
inline const ::vio_output_proto::Vec3& IMUIntInput::_internal_biasacc() const {
  return *biasacc_;
}
inline const ::vio_output_proto::Vec3& IMUIntInput::biasacc() const {
  const ::vio_output_proto::Vec3* p = biasacc_;
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUIntInput.biasAcc)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::Vec3*>(
      &::vio_output_proto::_Vec3_default_instance_);
}
inline ::vio_output_proto::Vec3* IMUIntInput::release_biasacc() {
  // @@protoc_insertion_point(field_release:vio_output_proto.IMUIntInput.biasAcc)
  
  ::vio_output_proto::Vec3* temp = biasacc_;
  biasacc_ = NULL;
  return temp;
}
inline ::vio_output_proto::Vec3* IMUIntInput::mutable_biasacc() {
  
  if (biasacc_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::Vec3>(GetArenaNoVirtual());
    biasacc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.IMUIntInput.biasAcc)
  return biasacc_;
}
inline void IMUIntInput::set_allocated_biasacc(::vio_output_proto::Vec3* biasacc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete biasacc_;
  }
  if (biasacc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      biasacc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, biasacc, submessage_arena);
    }
    
  } else {
    
  }
  biasacc_ = biasacc;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.IMUIntInput.biasAcc)
}

// .vio_output_proto.Vec3 biasGyro = 5;
inline bool IMUIntInput::has_biasgyro() const {
  return this != internal_default_instance() && biasgyro_ != NULL;
}
inline void IMUIntInput::clear_biasgyro() {
  if (GetArenaNoVirtual() == NULL && biasgyro_ != NULL) {
    delete biasgyro_;
  }
  biasgyro_ = NULL;
}
inline const ::vio_output_proto::Vec3& IMUIntInput::_internal_biasgyro() const {
  return *biasgyro_;
}
inline const ::vio_output_proto::Vec3& IMUIntInput::biasgyro() const {
  const ::vio_output_proto::Vec3* p = biasgyro_;
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUIntInput.biasGyro)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::Vec3*>(
      &::vio_output_proto::_Vec3_default_instance_);
}
inline ::vio_output_proto::Vec3* IMUIntInput::release_biasgyro() {
  // @@protoc_insertion_point(field_release:vio_output_proto.IMUIntInput.biasGyro)
  
  ::vio_output_proto::Vec3* temp = biasgyro_;
  biasgyro_ = NULL;
  return temp;
}
inline ::vio_output_proto::Vec3* IMUIntInput::mutable_biasgyro() {
  
  if (biasgyro_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::Vec3>(GetArenaNoVirtual());
    biasgyro_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.IMUIntInput.biasGyro)
  return biasgyro_;
}
inline void IMUIntInput::set_allocated_biasgyro(::vio_output_proto::Vec3* biasgyro) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete biasgyro_;
  }
  if (biasgyro) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      biasgyro = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, biasgyro, submessage_arena);
    }
    
  } else {
    
  }
  biasgyro_ = biasgyro;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.IMUIntInput.biasGyro)
}

// .vio_output_proto.Vec3 position = 6;
inline bool IMUIntInput::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void IMUIntInput::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::vio_output_proto::Vec3& IMUIntInput::_internal_position() const {
  return *position_;
}
inline const ::vio_output_proto::Vec3& IMUIntInput::position() const {
  const ::vio_output_proto::Vec3* p = position_;
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUIntInput.position)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::Vec3*>(
      &::vio_output_proto::_Vec3_default_instance_);
}
inline ::vio_output_proto::Vec3* IMUIntInput::release_position() {
  // @@protoc_insertion_point(field_release:vio_output_proto.IMUIntInput.position)
  
  ::vio_output_proto::Vec3* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::vio_output_proto::Vec3* IMUIntInput::mutable_position() {
  
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::Vec3>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.IMUIntInput.position)
  return position_;
}
inline void IMUIntInput::set_allocated_position(::vio_output_proto::Vec3* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.IMUIntInput.position)
}

// .vio_output_proto.Quat rotation = 7;
inline bool IMUIntInput::has_rotation() const {
  return this != internal_default_instance() && rotation_ != NULL;
}
inline void IMUIntInput::clear_rotation() {
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
}
inline const ::vio_output_proto::Quat& IMUIntInput::_internal_rotation() const {
  return *rotation_;
}
inline const ::vio_output_proto::Quat& IMUIntInput::rotation() const {
  const ::vio_output_proto::Quat* p = rotation_;
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUIntInput.rotation)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::Quat*>(
      &::vio_output_proto::_Quat_default_instance_);
}
inline ::vio_output_proto::Quat* IMUIntInput::release_rotation() {
  // @@protoc_insertion_point(field_release:vio_output_proto.IMUIntInput.rotation)
  
  ::vio_output_proto::Quat* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
inline ::vio_output_proto::Quat* IMUIntInput::mutable_rotation() {
  
  if (rotation_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::Quat>(GetArenaNoVirtual());
    rotation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.IMUIntInput.rotation)
  return rotation_;
}
inline void IMUIntInput::set_allocated_rotation(::vio_output_proto::Quat* rotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rotation_;
  }
  if (rotation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rotation, submessage_arena);
    }
    
  } else {
    
  }
  rotation_ = rotation;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.IMUIntInput.rotation)
}

// .vio_output_proto.Vec3 velocity = 8;
inline bool IMUIntInput::has_velocity() const {
  return this != internal_default_instance() && velocity_ != NULL;
}
inline void IMUIntInput::clear_velocity() {
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
}
inline const ::vio_output_proto::Vec3& IMUIntInput::_internal_velocity() const {
  return *velocity_;
}
inline const ::vio_output_proto::Vec3& IMUIntInput::velocity() const {
  const ::vio_output_proto::Vec3* p = velocity_;
  // @@protoc_insertion_point(field_get:vio_output_proto.IMUIntInput.velocity)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::Vec3*>(
      &::vio_output_proto::_Vec3_default_instance_);
}
inline ::vio_output_proto::Vec3* IMUIntInput::release_velocity() {
  // @@protoc_insertion_point(field_release:vio_output_proto.IMUIntInput.velocity)
  
  ::vio_output_proto::Vec3* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
inline ::vio_output_proto::Vec3* IMUIntInput::mutable_velocity() {
  
  if (velocity_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::Vec3>(GetArenaNoVirtual());
    velocity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.IMUIntInput.velocity)
  return velocity_;
}
inline void IMUIntInput::set_allocated_velocity(::vio_output_proto::Vec3* velocity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete velocity_;
  }
  if (velocity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      velocity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, velocity, submessage_arena);
    }
    
  } else {
    
  }
  velocity_ = velocity;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.IMUIntInput.velocity)
}

// -------------------------------------------------------------------

// VIOOutput

// .vio_output_proto.SlowPose slow_pose = 1;
inline bool VIOOutput::has_slow_pose() const {
  return this != internal_default_instance() && slow_pose_ != NULL;
}
inline void VIOOutput::clear_slow_pose() {
  if (GetArenaNoVirtual() == NULL && slow_pose_ != NULL) {
    delete slow_pose_;
  }
  slow_pose_ = NULL;
}
inline const ::vio_output_proto::SlowPose& VIOOutput::_internal_slow_pose() const {
  return *slow_pose_;
}
inline const ::vio_output_proto::SlowPose& VIOOutput::slow_pose() const {
  const ::vio_output_proto::SlowPose* p = slow_pose_;
  // @@protoc_insertion_point(field_get:vio_output_proto.VIOOutput.slow_pose)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::SlowPose*>(
      &::vio_output_proto::_SlowPose_default_instance_);
}
inline ::vio_output_proto::SlowPose* VIOOutput::release_slow_pose() {
  // @@protoc_insertion_point(field_release:vio_output_proto.VIOOutput.slow_pose)
  
  ::vio_output_proto::SlowPose* temp = slow_pose_;
  slow_pose_ = NULL;
  return temp;
}
inline ::vio_output_proto::SlowPose* VIOOutput::mutable_slow_pose() {
  
  if (slow_pose_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::SlowPose>(GetArenaNoVirtual());
    slow_pose_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.VIOOutput.slow_pose)
  return slow_pose_;
}
inline void VIOOutput::set_allocated_slow_pose(::vio_output_proto::SlowPose* slow_pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete slow_pose_;
  }
  if (slow_pose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      slow_pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, slow_pose, submessage_arena);
    }
    
  } else {
    
  }
  slow_pose_ = slow_pose;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.VIOOutput.slow_pose)
}

// .vio_output_proto.IMUIntInput imu_int_input = 2;
inline bool VIOOutput::has_imu_int_input() const {
  return this != internal_default_instance() && imu_int_input_ != NULL;
}
inline void VIOOutput::clear_imu_int_input() {
  if (GetArenaNoVirtual() == NULL && imu_int_input_ != NULL) {
    delete imu_int_input_;
  }
  imu_int_input_ = NULL;
}
inline const ::vio_output_proto::IMUIntInput& VIOOutput::_internal_imu_int_input() const {
  return *imu_int_input_;
}
inline const ::vio_output_proto::IMUIntInput& VIOOutput::imu_int_input() const {
  const ::vio_output_proto::IMUIntInput* p = imu_int_input_;
  // @@protoc_insertion_point(field_get:vio_output_proto.VIOOutput.imu_int_input)
  return p != NULL ? *p : *reinterpret_cast<const ::vio_output_proto::IMUIntInput*>(
      &::vio_output_proto::_IMUIntInput_default_instance_);
}
inline ::vio_output_proto::IMUIntInput* VIOOutput::release_imu_int_input() {
  // @@protoc_insertion_point(field_release:vio_output_proto.VIOOutput.imu_int_input)
  
  ::vio_output_proto::IMUIntInput* temp = imu_int_input_;
  imu_int_input_ = NULL;
  return temp;
}
inline ::vio_output_proto::IMUIntInput* VIOOutput::mutable_imu_int_input() {
  
  if (imu_int_input_ == NULL) {
    auto* p = CreateMaybeMessage<::vio_output_proto::IMUIntInput>(GetArenaNoVirtual());
    imu_int_input_ = p;
  }
  // @@protoc_insertion_point(field_mutable:vio_output_proto.VIOOutput.imu_int_input)
  return imu_int_input_;
}
inline void VIOOutput::set_allocated_imu_int_input(::vio_output_proto::IMUIntInput* imu_int_input) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete imu_int_input_;
  }
  if (imu_int_input) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      imu_int_input = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, imu_int_input, submessage_arena);
    }
    
  } else {
    
  }
  imu_int_input_ = imu_int_input;
  // @@protoc_insertion_point(field_set_allocated:vio_output_proto.VIOOutput.imu_int_input)
}

// fixed64 start_timestamp = 3;
inline void VIOOutput::clear_start_timestamp() {
  start_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VIOOutput::start_timestamp() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.VIOOutput.start_timestamp)
  return start_timestamp_;
}
inline void VIOOutput::set_start_timestamp(::google::protobuf::uint64 value) {
  
  start_timestamp_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.VIOOutput.start_timestamp)
}

// fixed64 end_server_timestamp = 4;
inline void VIOOutput::clear_end_server_timestamp() {
  end_server_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VIOOutput::end_server_timestamp() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.VIOOutput.end_server_timestamp)
  return end_server_timestamp_;
}
inline void VIOOutput::set_end_server_timestamp(::google::protobuf::uint64 value) {
  
  end_server_timestamp_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.VIOOutput.end_server_timestamp)
}

// fixed64 dataset_timestamp = 5;
inline void VIOOutput::clear_dataset_timestamp() {
  dataset_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VIOOutput::dataset_timestamp() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.VIOOutput.dataset_timestamp)
  return dataset_timestamp_;
}
inline void VIOOutput::set_dataset_timestamp(::google::protobuf::uint64 value) {
  
  dataset_timestamp_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.VIOOutput.dataset_timestamp)
}

// int32 frame_id = 6;
inline void VIOOutput::clear_frame_id() {
  frame_id_ = 0;
}
inline ::google::protobuf::int32 VIOOutput::frame_id() const {
  // @@protoc_insertion_point(field_get:vio_output_proto.VIOOutput.frame_id)
  return frame_id_;
}
inline void VIOOutput::set_frame_id(::google::protobuf::int32 value) {
  
  frame_id_ = value;
  // @@protoc_insertion_point(field_set:vio_output_proto.VIOOutput.frame_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace vio_output_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_vio_5foutput_2eproto
