function(generate_yaml)
    if(NOT EXISTS "${PROJECT_SOURCE_DIR}/profiles/plugins.yaml")
        message(ERROR "profiles/plugins.yaml file is missing")
    endif()
    file(TIMESTAMP "${PROJECT_SOURCE_DIR}/profiles/plugins.yaml" PROFILE_FILE_TIMESTAMP "%s" UTC)

    if(DEFINED CACHE{LAST_YAML_BUILD} AND DEFINED CACHE{PLUGIN_LIST} AND DEFINED CACHE{EXT_PLUGIN_LIST})
        #message("Profile files are up to date")
    else()
        set(LAST_YAML_BUILD "0" CACHE INTERNAL "")
    endif()
    if($CACHE{LAST_YAML_BUILD} LESS ${PROFILE_FILE_TIMESTAMP})
        message("Rebuilding profile yaml files")

        file(STRINGS "${PROJECT_SOURCE_DIR}/profiles/plugins.yaml" PYAML_LINES)
        foreach(LINE_ITEM IN LISTS PYAML_LINES)
            if(LINE_ITEM STREQUAL "")
                continue()
            endif()
            string(REPLACE " " "" ITEM ${LINE_ITEM})
            string(REPLACE ":" ";" ITEM_LIST ${ITEM})
            list(GET ITEM_LIST 0 ENTRY)
            set(ALL_FILE "${PROJECT_SOURCE_DIR}/profiles/all.yaml")
            if(ENTRY STREQUAL "internal_plugins")
                list(GET ITEM_LIST 1 PLUGIN_NAMES)
                string(REPLACE "," ";" TEMP_PLUGIN_LIST ${PLUGIN_NAMES})
                set(PLUGIN_LIST ${TEMP_PLUGIN_LIST} CACHE INTERNAL "" FORCE)
            elseif(ENTRY STREQUAL "external_plugins")
                list(GET ITEM_LIST 1 PLUGIN_NAMES)
                string(REPLACE "," ";" TEMP_PLUGIN_LIST ${PLUGIN_NAMES})
                set(EXT_PLUGIN_LIST ${TEMP_PLUGIN_LIST} CACHE INTERNAL "" FORCE)
                file(WRITE ${ALL_FILE} "group: all\nplugins: ${PLUGIN_LIST},${EXT_PLUGIN_LIST}\n")
                file(APPEND ${ALL_FILE} "enable_offload: true\n")
                file(APPEND ${ALL_FILE} "enable_alignment: true\n")
                file(APPEND ${ALL_FILE} "enable_verbose_errors: true\n")
                file(APPEND ${ALL_FILE} "enable_pre_sleep: true\n")
            elseif(ENTRY STREQUAL "group")
                if(GROUP_WRITING)
                    file(APPEND ${OUTFILE} "enable_offload: ${ENABLE_OFFLOAD}\n")
                    file(APPEND ${OUTFILE} "enable_alignment: ${ENABLE_ALIGNMENT}\n")
                    file(APPEND ${OUTFILE} "enable_verbose_errors: ${ENABLE_VERBOSE_ERRORS}\n")
                    file(APPEND ${OUTFILE} "enable_pre_sleep: ${ENABLE_PRE_SLEEP}\n")
                endif()
                set(ENABLE_OFFLOAD "false")
                set(ENABLE_ALIGNMENT "false")
                set(ENABLE_VERBOSE_ERRORS "false")
                set(ENABLE_PRE_SLEEP "false")
                set(GROUP_WRITING TRUE)
            elseif(ENTRY STREQUAL "name")
                if(NOT GROUP_WRITING)
                    message(ERROR "profiles/plugins.yaml has incorrect format")
                endif()
                list(GET ITEM_LIST 1 GROUP_NAME)
                set(OUTFILE "${PROJECT_SOURCE_DIR}/profiles/${GROUP_NAME}.yaml")
                file(WRITE ${OUTFILE} "group: ${GROUP_NAME}\n")
            elseif(ENTRY STREQUAL "plugins")
                list(GET ITEM_LIST 1 PLUGIN_NAMES)
                file(APPEND ${OUTFILE} "plugins: ${PLUGIN_NAMES}\n")
            elseif(ENTRY STREQUAL "run")
                list(GET ITEM_LIST 1 PLUGIN_NAMES)
                file(APPEND ${OUTFILE} "run: ${PLUGIN_NAMES}\n")
            elseif(ENTRY STREQUAL "data")
                list(GET ITEM_LIST 1 DATA_FILE)
                file(APPEND ${OUTFILE} "data: ${DATA_FILE}\n")
            elseif (ENTRY STREQUAL "build_type")
                list(GET ITEM_LIST 1 BTYPE)
                file(APPEND ${OUTFILE} "build_type: ${BTYPE}\n")
            elseif(ENTRY STREQUAL "enable_offload")
                list(GET ITEM_LIST 1 IPREFIX)
                set(ENABLE_OFFLOAD ${IPREFIX})
            elseif(ENTRY STREQUAL "enable_alignment")
                list(GET ITEM_LIST 1 EALI)
                set(ENABLE_ALIGNMENT ${EALI})
            elseif(ENTRY STREQUAL "enable_verbose_errors")
                list(GET ITEM_LIST 1 EVERBE)
                set(ENABLE_VERBOSE_ERRORS ${EVERBE})
            elseif(ENTRY STREQUAL "enable_pre_sleep")
                list(GET ITEM_LIST 1 EPRES)
                set(ENABLE_PRE_SLEEP ${EPRES})
            elseif(ENTRY STREQUAL "duration")
                list(GET ITEM_LIST 1 DURATION)
                file(APPEND ${OUTFILE} "duration: ${DURATION}\n")
            endif()
        endforeach ()

        string(TIMESTAMP CURRENT_TIME "%s" UTC)
        set(LAST_YAML_BUILD ${CURRENT_TIME} CACHE INTERNAL "")
    endif()
endfunction()
