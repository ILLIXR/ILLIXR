<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="plugins_2ada_2server__tx_2CMakeLists_8txt" kind="file" language="C++">
    <compoundname>CMakeLists.txt</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="plugins_2ada_2server__tx_2CMakeLists_8txt_1a00afd07c94fdc24730bc2a4051e8e314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cmake_minimum_required</definition>
        <argsstring>(VERSION 3.17) set(PLUGIN_NAME plugin.ada.server_tx$</argsstring>
        <name>cmake_minimum_required</name>
        <param>
          <type>VERSION 3.</type>
          <declname>17</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/server_tx/CMakeLists.txt" line="1" column="1" bodyfile="/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/server_tx/CMakeLists.txt" bodystart="1" bodyend="3"/>
      </memberdef>
      <memberdef kind="function" id="plugins_2ada_2server__tx_2CMakeLists_8txt_1a55aaad966a9b1d95b6b1bb250c9b2857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>set</definition>
        <argsstring>(CMAKE_CXX_STANDARD 17) set(CMAKE_CXX_STANDARD_REQUIRED ON) get_external(Draco) find_package(Protobuf REQUIRED) include_directories($</argsstring>
        <name>set</name>
        <param>
          <type>CMAKE_CXX_STANDARD</type>
          <declname>17</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/server_tx/CMakeLists.txt" line="5" column="1" bodyfile="/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/server_tx/CMakeLists.txt" bodystart="5" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="plugins_2ada_2server__tx_2CMakeLists_8txt_1a96c8113daf2c6ac0e0cba9f6941a2ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>add_library</definition>
        <argsstring>(${PLUGIN_NAME} SHARED plugin.hpp plugin.cpp ${PROTO_SRCS} ${PROTO_HDRS} ${ILLIXR_SOURCE_DIR}/include/illixr/data_format/mesh.hpp ${ILLIXR_SOURCE_DIR}/include/illixr/data_format/scene_reconstruction.hpp ${ILLIXR_SOURCE_DIR}/include/illixr/phonebook.hpp ${ILLIXR_SOURCE_DIR}/include/illixr/plugin.hpp ${ILLIXR_SOURCE_DIR}/include/illixr/switchboard.hpp) target_include_directories($</argsstring>
        <name>add_library</name>
        <param>
          <declname>${PLUGIN_NAME} SHARED plugin.hpp plugin.cpp ${PROTO_SRCS} ${PROTO_HDRS} ${ILLIXR_SOURCE_DIR}/include/illixr/data_format/mesh.hpp ${ILLIXR_SOURCE_DIR}/include/illixr/data_format/scene_reconstruction.hpp ${ILLIXR_SOURCE_DIR}/include/illixr/phonebook.hpp ${ILLIXR_SOURCE_DIR}/include/illixr/plugin.hpp ${ILLIXR_SOURCE_DIR}/include/illixr/switchboard.</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/server_tx/CMakeLists.txt" line="13" column="1" bodyfile="/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/server_tx/CMakeLists.txt" bodystart="13" bodyend="25"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">cmake_minimum_required(VERSION<sp/>3.17)</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">set(PLUGIN_NAME<sp/>plugin.ada.server_tx${ILLIXR_BUILD_SUFFIX})</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">set(CMAKE_CXX_STANDARD<sp/>17)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">set(CMAKE_CXX_STANDARD_REQUIRED<sp/>ON)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">get_external(Draco)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">find_package(Protobuf<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">include_directories(${CMAKE_CURRENT_BINARY_DIR})</highlight></codeline>
<codeline lineno="11"><highlight class="normal">PROTOBUF_GENERATE_CPP(PROTO_SRCS<sp/>PROTO_HDRS<sp/>${CMAKE_CURRENT_SOURCE_DIR}/../proto/sr_output.proto)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">add_library(${PLUGIN_NAME}<sp/>SHARED</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin.hpp</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin.cpp</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${PROTO_SRCS}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${PROTO_HDRS}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${ILLIXR_SOURCE_DIR}/include/illixr/data_format/mesh.hpp</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${ILLIXR_SOURCE_DIR}/include/illixr/data_format/scene_reconstruction.hpp</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${ILLIXR_SOURCE_DIR}/include/illixr/phonebook.hpp</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${ILLIXR_SOURCE_DIR}/include/illixr/plugin.hpp</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${ILLIXR_SOURCE_DIR}/include/illixr/switchboard.hpp</highlight></codeline>
<codeline lineno="23"><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">target_include_directories(${PLUGIN_NAME}<sp/>PUBLIC</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${OpenCV_INCLUDE_DIRS}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${ILLIXR_SOURCE_DIR}/include</highlight></codeline>
<codeline lineno="28"><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">target_link_libraries(${PLUGIN_NAME}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${OpenCV_LIBS}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protobuf::libprotobuf</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draco_illixr::draco</highlight></codeline>
<codeline lineno="34"><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(TARGET<sp/>draco_static)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>add_dependencies(${PLUGIN_NAME}<sp/>draco_static)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>target_include_directories(${PLUGIN_NAME}<sp/>PUBLIC<sp/>${draco_illixr_SOURCE_DIR}/src<sp/>${CMAKE_BINARY_DIR})</highlight></codeline>
<codeline lineno="39"><highlight class="normal">endif()</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">install(TARGETS<sp/>${PLUGIN_NAME}<sp/>DESTINATION<sp/>lib)</highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/server_tx/CMakeLists.txt"/>
  </compounddef>
</doxygen>
