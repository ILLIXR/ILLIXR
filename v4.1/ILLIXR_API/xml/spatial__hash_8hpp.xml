<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="spatial__hash_8hpp" kind="file" language="C++">
    <compoundname>spatial_hash.hpp</compoundname>
    <includes local="no">eigen3/Eigen/Dense</includes>
    <includes local="no">set</includes>
    <includes local="no">tuple</includes>
    <includes local="no">vector</includes>
    <includedby refid="plugins_2ada_2scene__management_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/scene_management/plugin.hpp</includedby>
    <includedby refid="spatial__hash_8cpp" local="yes">/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/scene_management/spatial_hash.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/scene_management/spatial_hash.hpp</label>
        <link refid="spatial__hash_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="3">
        <label>set</label>
      </node>
      <node id="4">
        <label>tuple</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/scene_management/plugin.hpp</label>
        <link refid="plugins_2ada_2scene__management_2plugin_8hpp_source"/>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/scene_management/spatial_hash.hpp</label>
        <link refid="spatial__hash_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classILLIXR_1_1spatial__hash" prot="public">ILLIXR::spatial_hash</innerclass>
    <innernamespace refid="namespaceILLIXR">ILLIXR</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eigen3/Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceILLIXR" kindref="compound">ILLIXR</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">VoxelBlockIndex<sp/>=<sp/>std::tuple&lt;int,<sp/>int,<sp/>int&gt;;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>index<sp/>of<sp/>-1<sp/>mean<sp/>it<sp/>is<sp/>cleaned,<sp/>this<sp/>should<sp/>be<sp/>the<sp/>range<sp/>of<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Vector_range<sp/>=<sp/>std::tuple&lt;VoxelBlockIndex,<sp/>int,<sp/>int&gt;;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vertices<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">NewVB<sp/>=<sp/>std::tuple&lt;VoxelBlockIndex,<sp/>std::vector&lt;Eigen::Vector3d&gt;,<sp/>std::vector&lt;Eigen::Vector3d&gt;&gt;;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>9/2<sp/>used<sp/>to<sp/>store<sp/>nullified<sp/>ranges,<sp/>first<sp/>two<sp/>are<sp/>start<sp/>and<sp/>end<sp/>indices<sp/>of<sp/>the<sp/>nullified<sp/>range,<sp/>followed<sp/>by<sp/>the<sp/>face<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>content<sp/>using<sp/>Nullified_Ranges<sp/>=<sp/>std::tuple&lt;int,<sp/>int,<sp/>std::vector&lt;Eigen::Vector3i&gt;&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Nullified_Ranges<sp/>=<sp/>std::tuple&lt;int,<sp/>int,<sp/>std::vector&lt;int&gt;&gt;;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">spatial_hash<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>spatial_hash();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clean_mesh_vb_redesign_with_list(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::tuple&lt;int,<sp/>int,<sp/>int&gt;&gt;&amp;<sp/>vb_lists);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deleted_ranges_processing();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>91<sp/>changed<sp/>to<sp/>accept<sp/>scene<sp/>update<sp/>mappings<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>append_mesh_allocate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/>std::vector&lt;NewVB&gt;&gt;&amp;<sp/>inputSceneUpdateMap);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append_mesh_match_and_insert(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>merge);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash_vb(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VoxelBlockIndex&amp;<sp/>Index);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restore_deleted_faces();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utility<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_mesh_as_obj(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>frame_id,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tr);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7/22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;unsigned,<sp/>std::vector&lt;Vector_range&gt;&gt;<sp/>map_VB_to_range_;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>tracking<sp/>locally<sp/>created<sp/>vB<sp/>sub-vectors?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;unsigned,<sp/>std::vector&lt;NewVB&gt;&gt;<sp/>allocate_new_VB_;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>changed<sp/>to<sp/>int<sp/>since<sp/>map_VB_to_range_<sp/>is<sp/>int,<sp/>int<sp/>(needs<sp/>to<sp/>deal<sp/>with<sp/>deleted<sp/>range)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>however<sp/>deleted<sp/>range<sp/>should<sp/>not<sp/>be<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;int,<sp/>int&gt;&gt;<sp/>deleted_ranges_;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>internal<sp/>data<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Eigen::Vector3d&gt;<sp/>vertices_;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;Eigen::Vector3d&gt;<sp/>colors;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;Eigen::Vector3i&gt;<sp/>faces;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>faces_;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>92<sp/>fix<sp/>mesh<sp/>nullification<sp/>by<sp/>storing<sp/>the<sp/>face<sp/>sub-vectors<sp/>of<sp/>deleted_faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Nullified_Ranges&gt;<sp/>nullified_ranges;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>multi<sp/>scene<sp/>merging<sp/>only<sp/>should<sp/>be<sp/>cleared<sp/>during<sp/>normal<sp/>scenario</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;std::tuple&lt;int,<sp/>int,<sp/>int,<sp/>int&gt;&gt;<sp/>older_scene_vb_list;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>delete_counter_;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>VB_skipped_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>528<sp/>this<sp/>is<sp/>essentially<sp/>creating<sp/>a<sp/>really<sp/>large<sp/>face<sp/>so<sp/>we<sp/>can<sp/>quickly<sp/>generate<sp/>the<sp/>face<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>faces_base_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>track_time(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;&amp;<sp/>func);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ILLIXR</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/ILLIXR/plugins/ada/scene_management/spatial_hash.hpp"/>
  </compounddef>
</doxygen>
