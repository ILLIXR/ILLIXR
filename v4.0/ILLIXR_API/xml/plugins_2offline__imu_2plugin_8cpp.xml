<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="plugins_2offline__imu_2plugin_8cpp" kind="file" language="C++">
    <compoundname>plugin.cpp</compoundname>
    <includes refid="plugins_2offline__imu_2plugin_8hpp" local="yes">plugin.hpp</includes>
    <includes refid="data__loading_8hpp" local="yes">illixr/data_loading.hpp</includes>
    <includes local="no">chrono</includes>
    <incdepgraph>
      <node id="44">
        <label>cpu_timer.hpp</label>
        <link refid="cpu__timer_8hpp_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>illixr/csv_iterator.hpp</label>
        <link refid="csv__iterator_8hpp_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>illixr/data_format/imu.hpp</label>
        <link refid="imu_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>illixr/data_format/misc.hpp</label>
        <link refid="misc_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>illixr/data_loading.hpp</label>
        <link refid="data__loading_8hpp_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>error_util.hpp</label>
        <link refid="error__util_8hpp_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>global_module_defs.hpp</label>
        <link refid="global__module__defs_8hpp_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>managed_thread.hpp</label>
        <link refid="managed__thread_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>network/network_backend.hpp</label>
        <link refid="network__backend_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>topic_config.hpp</label>
        <link refid="topic__config_8hpp_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>illixr/phonebook.hpp</label>
        <link refid="phonebook_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>plugin.hpp</label>
        <link refid="include_2illixr_2plugin_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>record_logger.hpp</label>
        <link refid="record__logger_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>illixr/relative_clock.hpp</label>
        <link refid="relative__clock_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>stoplight.hpp</label>
        <link refid="stoplight_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>illixr/switchboard.hpp</label>
        <link refid="switchboard_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>illixr/threadloop.hpp</label>
        <link refid="threadloop_8hpp_source"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/plugins/offline_imu/plugin.cpp</label>
        <link refid="plugins_2offline__imu_2plugin_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>plugin.hpp</label>
        <link refid="plugins_2offline__imu_2plugin_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>GL/glu.h</label>
      </node>
      <node id="47">
        <label>algorithm</label>
      </node>
      <node id="27">
        <label>any</label>
      </node>
      <node id="7">
        <label>atomic</label>
      </node>
      <node id="33">
        <label>boost/archive/binary_iarchive.hpp</label>
      </node>
      <node id="34">
        <label>boost/archive/binary_oarchive.hpp</label>
      </node>
      <node id="35">
        <label>boost/iostreams/device/back_inserter.hpp</label>
      </node>
      <node id="36">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="37">
        <label>boost/serialization/shared_ptr.hpp</label>
      </node>
      <node id="8">
        <label>cassert</label>
      </node>
      <node id="23">
        <label>chrono</label>
      </node>
      <node id="48">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>concurrentqueue/blockingconcurrentqueue.hpp</label>
      </node>
      <node id="56">
        <label>condition_variable</label>
      </node>
      <node id="49">
        <label>cstring</label>
      </node>
      <node id="30">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="38">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="31">
        <label>eigen3/Eigen/Geometry</label>
      </node>
      <node id="61">
        <label>fstream</label>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="20">
        <label>iostream</label>
      </node>
      <node id="60">
        <label>iterator</label>
      </node>
      <node id="32">
        <label>list</label>
      </node>
      <node id="57">
        <label>map</label>
      </node>
      <node id="15">
        <label>memory</label>
      </node>
      <node id="16">
        <label>mutex</label>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="42">
        <label>ratio</label>
      </node>
      <node id="17">
        <label>shared_mutex</label>
      </node>
      <node id="51">
        <label>spdlog/common.h</label>
      </node>
      <node id="52">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="53">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="21">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="29">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>stdexcept</label>
      </node>
      <node id="28">
        <label>string</label>
      </node>
      <node id="11">
        <label>thread</label>
      </node>
      <node id="18">
        <label>typeindex</label>
      </node>
      <node id="54">
        <label>typeinfo</label>
      </node>
      <node id="19">
        <label>unordered_map</label>
      </node>
      <node id="12">
        <label>utility</label>
      </node>
      <node id="25">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="plugins_2offline__imu_2plugin_8cpp_1aa5203ff0829961f25f31dda68854303a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::map&lt; ullong, sensor_types &gt;</type>
        <definition>std::map&lt; ullong, sensor_types &gt; read_data</definition>
        <argsstring>(std::ifstream &amp;gt_file, const std::string &amp;file_name)</argsstring>
        <name>read_data</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>gt_file</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/offline_imu/plugin.cpp" line="10" column="17" bodyfile="/home/friedel/devel/ILLIXR/plugins/offline_imu/plugin.cpp" bodystart="10" bodyend="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;plugin.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;illixr/data_loading.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceILLIXR" kindref="compound">ILLIXR</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">ILLIXR::data_format;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::map&lt;ullong,<sp/>sensor_types&gt;<sp/>read_data(std::ifstream&amp;<sp/>gt_file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file_name)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>file_name;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;ullong,<sp/>sensor_types&gt;<sp/>data;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(csv_iterator<sp/>row{gt_file,<sp/>1};<sp/>row<sp/>!=<sp/>csv_iterator{};<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullong<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>std::stoull(row[0]);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>av{std::stod(row[1]),<sp/>std::stod(row[2]),<sp/>std::stod(row[3])};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>la{std::stod(row[4]),<sp/>std::stod(row[5]),<sp/>std::stod(row[6])};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[t].imu0<sp/>=<sp/>{av,<sp/>la};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">[[maybe_unused]]<sp/>offline_imu::offline_imu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/><ref refid="classILLIXR_1_1phonebook" kindref="compound">phonebook</ref>*<sp/>pb)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classILLIXR_1_1threadloop" kindref="compound">threadloop</ref>{name,<sp/>pb}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>switchboard_{phonebook_-&gt;lookup_impl&lt;<ref refid="classILLIXR_1_1switchboard" kindref="compound">switchboard</ref>&gt;()}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sensor_data_{load_data&lt;sensor_types&gt;(</highlight><highlight class="stringliteral">&quot;imu0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;offline_imu&quot;</highlight><highlight class="normal">,<sp/>&amp;read_data,<sp/>switchboard_)}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sensor_data_it_{sensor_data_.cbegin()}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>imu_{switchboard_-&gt;get_writer&lt;<ref refid="structILLIXR_1_1data__format_1_1imu__type" kindref="compound">imu_type</ref>&gt;(</highlight><highlight class="stringliteral">&quot;imu&quot;</highlight><highlight class="normal">)}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>dataset_first_time_{sensor_data_it_-&gt;first}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>dataset_now_{0}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>imu_cam_log_{record_logger_}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>clock_{phonebook_-&gt;lookup_impl&lt;<ref refid="classILLIXR_1_1relative__clock" kindref="compound">relative_clock</ref>&gt;()}<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652" kindref="member">ILLIXR::threadloop::skip_option</ref><sp/>offline_imu::_p_should_skip()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensor_data_it_<sp/>!=<sp/>sensor_data_.end())<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(dataset_now_<sp/>&lt;<sp/>sensor_data_it_-&gt;first);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataset_now_<sp/>=<sp/>sensor_data_it_-&gt;first;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sleep<sp/>for<sp/>the<sp/>difference<sp/>between<sp/>the<sp/>current<sp/>IMU<sp/>vs<sp/>1st<sp/>IMU<sp/>and<sp/>current<sp/>UNIX<sp/>time<sp/>vs<sp/>UNIX<sp/>time<sp/>the<sp/>component<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::nanoseconds{dataset_now_<sp/>-<sp/>dataset_first_time_}<sp/>-</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_-&gt;now().time_since_epoch());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>skip_option::run;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>skip_option::stop;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>offline_imu::_p_one_iteration()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(sensor_data_it_<sp/>!=<sp/>sensor_data_.end());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>time_point<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real_now(std::chrono::duration&lt;long,<sp/>std::nano&gt;{dataset_now_<sp/>-<sp/>dataset_first_time_});</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_types&amp;<sp/>sensor_datum<sp/>=<sp/>sensor_data_it_-&gt;second;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>imu_.put(imu_.allocate&lt;<ref refid="structILLIXR_1_1data__format_1_1imu__type" kindref="compound">imu_type</ref>&gt;(<ref refid="structILLIXR_1_1data__format_1_1imu__type" kindref="compound">imu_type</ref>{real_now,<sp/>(sensor_datum.imu0.angular_v),<sp/>(sensor_datum.imu0.linear_a)}));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>++sensor_data_it_;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">PLUGIN_MAIN(offline_imu)</highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/plugins/offline_imu/plugin.cpp"/>
  </compounddef>
</doxygen>
