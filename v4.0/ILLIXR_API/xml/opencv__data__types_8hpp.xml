<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="opencv__data__types_8hpp" kind="file" language="C++">
    <compoundname>opencv_data_types.hpp</compoundname>
    <includes refid="unit_8hpp" local="yes">illixr/data_format/unit.hpp</includes>
    <includes refid="switchboard_8hpp" local="yes">illixr/switchboard.hpp</includes>
    <includes local="no">fstream</includes>
    <includes local="no">map</includes>
    <includes local="no">opencv4/opencv2/core/mat.hpp</includes>
    <includes local="no">utility</includes>
    <includedby refid="hand__tracking__data_8hpp" local="yes">/home/friedel/devel/ILLIXR/include/illixr/data_format/hand_tracking_data.hpp</includedby>
    <includedby refid="zed__cam_8hpp" local="yes">/home/friedel/devel/ILLIXR/include/illixr/data_format/zed_cam.hpp</includedby>
    <includedby refid="plugins_2debugview_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/debugview/plugin.cpp</includedby>
    <includedby refid="plugins_2debugview_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/debugview/plugin.hpp</includedby>
    <includedby refid="plugins_2depthai_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/depthai/plugin.hpp</includedby>
    <includedby refid="plugins_2hand__tracking_2viewer_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/hand_tracking/viewer/plugin.cpp</includedby>
    <includedby refid="plugins_2offline__cam_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offline_cam/plugin.hpp</includedby>
    <includedby refid="plugins_2offload__vio_2device__tx_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_vio/device_tx/plugin.hpp</includedby>
    <includedby refid="plugins_2offload__vio_2server__rx_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/plugin.hpp</includedby>
    <includedby refid="plugins_2openni_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/openni/plugin.hpp</includedby>
    <includedby refid="plugins_2realsense_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/realsense/plugin.hpp</includedby>
    <includedby refid="plugins_2record__imu__cam_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/record_imu_cam/plugin.hpp</includedby>
    <includedby refid="plugins_2record__rgb__depth_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/record_rgb_depth/plugin.hpp</includedby>
    <includedby refid="plugins_2webcam_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/webcam/plugin.hpp</includedby>
    <includedby refid="plugins_2zed_2data__injection_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/zed/data_injection/plugin.hpp</includedby>
    <includedby refid="plugins_2zed_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/zed/plugin.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/include/illixr/data_format/opencv_data_types.hpp</label>
        <link refid="opencv__data__types_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>illixr/data_format/unit.hpp</label>
        <link refid="unit_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>managed_thread.hpp</label>
        <link refid="managed__thread_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>network/network_backend.hpp</label>
        <link refid="network__backend_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>topic_config.hpp</label>
        <link refid="topic__config_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>illixr/phonebook.hpp</label>
        <link refid="phonebook_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>record_logger.hpp</label>
        <link refid="record__logger_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>illixr/switchboard.hpp</label>
        <link refid="switchboard_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>any</label>
      </node>
      <node id="8">
        <label>atomic</label>
      </node>
      <node id="33">
        <label>boost/archive/binary_iarchive.hpp</label>
      </node>
      <node id="34">
        <label>boost/archive/binary_oarchive.hpp</label>
      </node>
      <node id="35">
        <label>boost/iostreams/device/back_inserter.hpp</label>
      </node>
      <node id="36">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="37">
        <label>boost/serialization/shared_ptr.hpp</label>
      </node>
      <node id="9">
        <label>cassert</label>
      </node>
      <node id="24">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>concurrentqueue/blockingconcurrentqueue.hpp</label>
      </node>
      <node id="30">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="31">
        <label>eigen3/Eigen/Geometry</label>
      </node>
      <node id="38">
        <label>fstream</label>
      </node>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="21">
        <label>iostream</label>
      </node>
      <node id="32">
        <label>list</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
      <node id="17">
        <label>mutex</label>
      </node>
      <node id="39">
        <label>opencv4/opencv2/core/mat.hpp</label>
      </node>
      <node id="25">
        <label>optional</label>
      </node>
      <node id="18">
        <label>shared_mutex</label>
      </node>
      <node id="22">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="29">
        <label>sstream</label>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="12">
        <label>thread</label>
      </node>
      <node id="19">
        <label>typeindex</label>
      </node>
      <node id="20">
        <label>unordered_map</label>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="26">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/friedel/devel/ILLIXR/include/illixr/data_format/hand_tracking_data.hpp</label>
        <link refid="hand__tracking__data_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/include/illixr/data_format/opencv_data_types.hpp</label>
        <link refid="opencv__data__types_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/friedel/devel/ILLIXR/include/illixr/data_format/zed_cam.hpp</label>
        <link refid="zed__cam_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/friedel/devel/ILLIXR/plugins/debugview/plugin.hpp</label>
        <link refid="plugins_2debugview_2plugin_8hpp_source"/>
      </node>
      <node id="10">
        <label>/home/friedel/devel/ILLIXR/plugins/depthai/plugin.hpp</label>
        <link refid="plugins_2depthai_2plugin_8hpp_source"/>
      </node>
      <node id="3">
        <label>/home/friedel/devel/ILLIXR/plugins/hand_tracking/viewer/plugin.hpp</label>
        <link refid="plugins_2hand__tracking_2viewer_2plugin_8hpp_source"/>
      </node>
      <node id="11">
        <label>/home/friedel/devel/ILLIXR/plugins/offline_cam/plugin.hpp</label>
        <link refid="plugins_2offline__cam_2plugin_8hpp_source"/>
      </node>
      <node id="12">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/device_tx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2device__tx_2plugin_8hpp_source"/>
      </node>
      <node id="13">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2server__rx_2plugin_8hpp_source"/>
      </node>
      <node id="14">
        <label>/home/friedel/devel/ILLIXR/plugins/openni/plugin.hpp</label>
        <link refid="plugins_2openni_2plugin_8hpp_source"/>
      </node>
      <node id="15">
        <label>/home/friedel/devel/ILLIXR/plugins/realsense/plugin.hpp</label>
        <link refid="plugins_2realsense_2plugin_8hpp_source"/>
      </node>
      <node id="16">
        <label>/home/friedel/devel/ILLIXR/plugins/record_imu_cam/plugin.hpp</label>
        <link refid="plugins_2record__imu__cam_2plugin_8hpp_source"/>
      </node>
      <node id="17">
        <label>/home/friedel/devel/ILLIXR/plugins/record_rgb_depth/plugin.hpp</label>
        <link refid="plugins_2record__rgb__depth_2plugin_8hpp_source"/>
      </node>
      <node id="18">
        <label>/home/friedel/devel/ILLIXR/plugins/webcam/plugin.hpp</label>
        <link refid="plugins_2webcam_2plugin_8hpp_source"/>
      </node>
      <node id="6">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/capture/files.hpp</label>
        <link refid="files_8hpp_source"/>
      </node>
      <node id="4">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/data_injection/plugin.hpp</label>
        <link refid="plugins_2zed_2data__injection_2plugin_8hpp_source"/>
      </node>
      <node id="8">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/plugin.hpp</label>
        <link refid="plugins_2zed_2plugin_8hpp_source"/>
      </node>
      <node id="7">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/zed_camera_thread.hpp</label>
        <link refid="zed__camera__thread_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structILLIXR_1_1data__format_1_1cam__base__type" prot="public">ILLIXR::data_format::cam_base_type</innerclass>
    <innerclass refid="structILLIXR_1_1data__format_1_1binocular__cam__type" prot="public">ILLIXR::data_format::binocular_cam_type</innerclass>
    <innerclass refid="structILLIXR_1_1data__format_1_1monocular__cam__type" prot="public">ILLIXR::data_format::monocular_cam_type</innerclass>
    <innerclass refid="structILLIXR_1_1data__format_1_1rgb__depth__type" prot="public">ILLIXR::data_format::rgb_depth_type</innerclass>
    <innerclass refid="structILLIXR_1_1data__format_1_1depth__type" prot="public">ILLIXR::data_format::depth_type</innerclass>
    <innernamespace refid="namespaceILLIXR">ILLIXR</innernamespace>
    <innernamespace refid="namespaceILLIXR_1_1data__format">ILLIXR::data_format</innernamespace>
    <innernamespace refid="namespaceILLIXR_1_1data__format_1_1image">ILLIXR::data_format::image</innernamespace>
    <innernamespace refid="namespaceILLIXR_1_1data__format_1_1camera">ILLIXR::data_format::camera</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;illixr/data_format/unit.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;illixr/switchboard.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv4/opencv2/core/mat.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ILLIXR::data_format<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">image<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>image_type<sp/>{<sp/>LEFT_EYE,<sp/>RIGHT_EYE,<sp/>RGB,<sp/>DEPTH,<sp/>LEFT_EYE_PROCESSED,<sp/>RIGHT_EYE_PROCESSED,<sp/>RGB_PROCESSED,<sp/>CONFIDENCE<sp/>};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;image_type,<sp/>const<sp/>std::string&gt;<sp/>image_type_map<sp/>=<sp/>{{LEFT_EYE,<sp/></highlight><highlight class="stringliteral">&quot;LEFT_EYE&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{RIGHT_EYE,<sp/></highlight><highlight class="stringliteral">&quot;RIGHT_EYE&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{RGB,<sp/></highlight><highlight class="stringliteral">&quot;RGB&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{DEPTH,<sp/></highlight><highlight class="stringliteral">&quot;DEPTH&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{LEFT_EYE_PROCESSED,<sp/></highlight><highlight class="stringliteral">&quot;LEFT_EYE_PROCESSED&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{RIGHT_EYE_PROCESSED,<sp/></highlight><highlight class="stringliteral">&quot;RIGHT_EYE_PROCESSED&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{RGB_PROCESSED,<sp/></highlight><highlight class="stringliteral">&quot;RGB_PROCESSED&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{CONFIDENCE,<sp/></highlight><highlight class="stringliteral">&quot;CONFIDENCE&quot;</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespaceILLIXR_1_1data__format_1_1camera" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">camera<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>cam_type<sp/>{<sp/>BINOCULAR,<sp/>MONOCULAR,<sp/>RGB_DEPTH,<sp/>DEPTH,<sp/>ZED<sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structILLIXR_1_1data__format_1_1cam__base__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structILLIXR_1_1data__format_1_1cam__base__type" kindref="compound">cam_base_type</ref><sp/>:<sp/><ref refid="classILLIXR_1_1switchboard_1_1event" kindref="compound">switchboard::event</ref><sp/>{</highlight></codeline>
<codeline lineno="42" refid="structILLIXR_1_1data__format_1_1cam__base__type_1a38c6d85c01e35357fd04f9f7d1c5e9eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>time_point<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1a38c6d85c01e35357fd04f9f7d1c5e9eb" kindref="member">time</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="structILLIXR_1_1data__format_1_1cam__base__type_1a9a4e8ef77b7c12c3c595f7afd1ba5d1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>camera::cam_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1a9a4e8ef77b7c12c3c595f7afd1ba5d1f" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="structILLIXR_1_1data__format_1_1cam__base__type_1acf202ca766b851725335b1bf5cdc156b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;image::image_type,<sp/>cv::Mat&gt;<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1acf202ca766b851725335b1bf5cdc156b" kindref="member">images</ref>{};<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type" kindref="compound">cam_base_type</ref>(time_point<sp/>_time,<sp/>std::map&lt;image::image_type,<sp/>cv::Mat&gt;<sp/>imgs,<sp/>camera::cam_type<sp/>_type)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1a38c6d85c01e35357fd04f9f7d1c5e9eb" kindref="member">time</ref>(_time)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1a9a4e8ef77b7c12c3c595f7afd1ba5d1f" kindref="member">type</ref>(_type)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1acf202ca766b851725335b1bf5cdc156b" kindref="member">images</ref>{std::move(imgs)}<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat&amp;<sp/>operator[](image::image_type<sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1acf202ca766b851725335b1bf5cdc156b" kindref="member">images</ref>.at(idx);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format(image::image_type<sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1acf202ca766b851725335b1bf5cdc156b" kindref="member">images</ref>.at(idx).type();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1acf202ca766b851725335b1bf5cdc156b" kindref="member">images</ref>.size();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>cv::Mat<sp/>at(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>image::image_type<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1acf202ca766b851725335b1bf5cdc156b" kindref="member">images</ref>.at(idx);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>std::map&lt;image::image_type,<sp/>cv::Mat&gt;::const_iterator<sp/>find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>image::image_type<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1acf202ca766b851725335b1bf5cdc156b" kindref="member">images</ref>.find(idx);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>std::map&lt;image::image_type,<sp/>cv::Mat&gt;::const_iterator<sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1acf202ca766b851725335b1bf5cdc156b" kindref="member">images</ref>.begin();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>std::map&lt;image::image_type,<sp/>cv::Mat&gt;::const_iterator<sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type_1acf202ca766b851725335b1bf5cdc156b" kindref="member">images</ref>.end();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structILLIXR_1_1data__format_1_1binocular__cam__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[maybe_unused]]<sp/><ref refid="structILLIXR_1_1data__format_1_1binocular__cam__type" kindref="compound">binocular_cam_type</ref><sp/>:<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type" kindref="compound">cam_base_type</ref><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1data__format_1_1binocular__cam__type" kindref="compound">binocular_cam_type</ref>(time_point<sp/>_time,<sp/>cv::Mat<sp/>_img0,<sp/>cv::Mat<sp/>_img1)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type" kindref="compound">cam_base_type</ref>(_time,<sp/>{{image::LEFT_EYE,<sp/>_img0},<sp/>{image::RIGHT_EYE,<sp/>_img1}},<sp/>camera::BINOCULAR)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structILLIXR_1_1data__format_1_1monocular__cam__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[maybe_unused]]<sp/><ref refid="structILLIXR_1_1data__format_1_1monocular__cam__type" kindref="compound">monocular_cam_type</ref><sp/>:<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type" kindref="compound">cam_base_type</ref><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1data__format_1_1monocular__cam__type" kindref="compound">monocular_cam_type</ref>(time_point<sp/>_time,<sp/>cv::Mat<sp/>_img)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type" kindref="compound">cam_base_type</ref>(_time,<sp/>{{image::RGB,<sp/>_img}},<sp/>camera::MONOCULAR)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>cv::Mat<sp/>img()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>images.at(image::RGB);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structILLIXR_1_1data__format_1_1rgb__depth__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[maybe_unused]]<sp/><ref refid="structILLIXR_1_1data__format_1_1rgb__depth__type" kindref="compound">rgb_depth_type</ref><sp/>:<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type" kindref="compound">cam_base_type</ref><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>units::measurement_unit<sp/>units;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1data__format_1_1rgb__depth__type" kindref="compound">rgb_depth_type</ref>(time_point<sp/>_time,<sp/>cv::Mat<sp/>_rgb,<sp/>cv::Mat<sp/>_depth,<sp/>units::measurement_unit<sp/>units_<sp/>=<sp/>units::UNSET)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type" kindref="compound">cam_base_type</ref>(_time,<sp/>{{image::RGB,<sp/>_rgb},<sp/>{image::DEPTH,<sp/>_depth}},<sp/>camera::RGB_DEPTH)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>units{units_}<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="structILLIXR_1_1data__format_1_1depth__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[maybe_unused]]<sp/><ref refid="structILLIXR_1_1data__format_1_1depth__type" kindref="compound">depth_type</ref><sp/>:<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type" kindref="compound">cam_base_type</ref><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>units::measurement_unit<sp/>units;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structILLIXR_1_1data__format_1_1depth__type" kindref="compound">depth_type</ref>(time_point<sp/>_time,<sp/>cv::Mat<sp/>_depth,<sp/>units::measurement_unit<sp/>units_)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structILLIXR_1_1data__format_1_1cam__base__type" kindref="compound">cam_base_type</ref>(_time,<sp/>{{image::DEPTH,<sp/>_depth}},<sp/>camera::DEPTH)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>units{units_}<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ILLIXR::data_format</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/include/illixr/data_format/opencv_data_types.hpp"/>
  </compounddef>
</doxygen>
