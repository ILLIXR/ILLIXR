<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classILLIXR_1_1plugin" kind="class" language="C++" prot="public">
    <compoundname>ILLIXR::plugin</compoundname>
    <derivedcompoundref refid="classILLIXR_1_1depthai" prot="public" virt="non-virtual">ILLIXR::depthai</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1fauxpose" prot="public" virt="non-virtual">ILLIXR::fauxpose</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1ground__truth__slam" prot="public" virt="non-virtual">ILLIXR::ground_truth_slam</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1gtsam__integrator" prot="public" virt="non-virtual">ILLIXR::gtsam_integrator</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1offload__data" prot="public" virt="non-virtual">ILLIXR::offload_data</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1offload__rendering__server__loader" prot="public" virt="non-virtual">ILLIXR::offload_rendering_server_loader</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1passthrough__integrator" prot="public" virt="non-virtual">ILLIXR::passthrough_integrator</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1realsense" prot="public" virt="non-virtual">ILLIXR::realsense</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1record__imu__cam" prot="public" virt="non-virtual">ILLIXR::record_imu_cam</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1record__rgb__depth" prot="public" virt="non-virtual">ILLIXR::record_rgb_depth</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1rk4__integrator" prot="public" virt="non-virtual">ILLIXR::rk4_integrator</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1server__writer" prot="public" virt="non-virtual">ILLIXR::server_writer</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1tcp__network__backend" prot="public" virt="non-virtual">ILLIXR::tcp_network_backend</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1threadloop" prot="public" virt="non-virtual">ILLIXR::threadloop</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1viewer" prot="public" virt="non-virtual">ILLIXR::viewer</derivedcompoundref>
    <derivedcompoundref refid="classILLIXR_1_1vkdemo__plugin" prot="public" virt="non-virtual">ILLIXR::vkdemo_plugin</derivedcompoundref>
    <derivedcompoundref refid="classoffload__rendering__client__loader" prot="public" virt="non-virtual">offload_rendering_client_loader</derivedcompoundref>
    <derivedcompoundref refid="classpose__lookup__plugin" prot="public" virt="non-virtual">pose_lookup_plugin</derivedcompoundref>
    <derivedcompoundref refid="classpose__prediction__plugin" prot="public" virt="non-virtual">pose_prediction_plugin</derivedcompoundref>
    <includes refid="include_2illixr_2plugin_8hpp" local="no">plugin.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classILLIXR_1_1plugin_1aa963c518af83966173840a8558490888" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ILLIXR::plugin::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <qualifiedname>ILLIXR::plugin::name_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="129" column="42" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classILLIXR_1_1plugin_1a6f7a2a9012350591c00d67a5bc0fd5a6" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classILLIXR_1_1phonebook" kindref="compound">phonebook</ref> *</type>
        <definition>const phonebook* ILLIXR::plugin::phonebook_</definition>
        <argsstring></argsstring>
        <name>phonebook_</name>
        <qualifiedname>ILLIXR::plugin::phonebook_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="130" column="41" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classILLIXR_1_1plugin_1aef671d0cd9b6de45d3ade16dedbf4974" prot="protected" static="no" mutable="no">
        <type>const std::shared_ptr&lt; <ref refid="classILLIXR_1_1record__logger" kindref="compound">record_logger</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;record_logger&gt; ILLIXR::plugin::record_logger_</definition>
        <argsstring></argsstring>
        <name>record_logger_</name>
        <qualifiedname>ILLIXR::plugin::record_logger_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="131" column="27" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classILLIXR_1_1plugin_1afe52734e7edc87bd0bf974caf112961b" prot="protected" static="no" mutable="no">
        <type>const std::shared_ptr&lt; <ref refid="classILLIXR_1_1gen__guid" kindref="compound">gen_guid</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;gen_guid&gt; ILLIXR::plugin::gen_guid_</definition>
        <argsstring></argsstring>
        <name>gen_guid_</name>
        <qualifiedname>ILLIXR::plugin::gen_guid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="132" column="32" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classILLIXR_1_1plugin_1aaedb3f9178bdd11e53815e158454aaf3" prot="protected" static="no" mutable="no">
        <type>const std::size_t</type>
        <definition>const std::size_t ILLIXR::plugin::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <qualifiedname>ILLIXR::plugin::id_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="133" column="42" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classILLIXR_1_1plugin_1a8d40c2421cde09079372d12bfe7d45fe" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; spdlog::logger &gt;</type>
        <definition>std::shared_ptr&lt;spdlog::logger&gt; ILLIXR::plugin::plugin_logger_</definition>
        <argsstring></argsstring>
        <name>plugin_logger_</name>
        <qualifiedname>ILLIXR::plugin::plugin_logger_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="134" column="26" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classILLIXR_1_1plugin_1abc91c0e5be180a8e0bbeaf114a127f17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ILLIXR::plugin::plugin</definition>
        <argsstring>(std::string name, phonebook *pb)</argsstring>
        <name>plugin</name>
        <qualifiedname>ILLIXR::plugin::plugin</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classILLIXR_1_1phonebook" kindref="compound">phonebook</ref> *</type>
          <declname>pb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="47" column="5" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1plugin_1a44d7b00c86e227bbc1a0b221da43d454" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ILLIXR::plugin::~plugin</definition>
        <argsstring>()=default</argsstring>
        <name>~plugin</name>
        <qualifiedname>ILLIXR::plugin::~plugin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="54" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1plugin_1a30d7294817fc5e8a8216fbfbca233cdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ILLIXR::plugin::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <qualifiedname>ILLIXR::plugin::start</qualifiedname>
        <reimplementedby refid="classILLIXR_1_1threadloop_1af001e97f74595e18f589f66ac0595bfb">start</reimplementedby>
        <reimplementedby refid="classILLIXR_1_1offload__rendering__server_1a0208c1b9dab065a5fce89b46d9a363c6">start</reimplementedby>
        <reimplementedby refid="classILLIXR_1_1offload__rendering__server__loader_1a3b5d052cda43dde1f63e9cb33fcdb76d">start</reimplementedby>
        <briefdescription>
<para>A method which Spindle calls when it starts the component. </para>
        </briefdescription>
        <detaileddescription>
<para>This is necessary because a constructor can&apos;t call derived virtual methods (due to structure of C++). See <computeroutput>threadloop</computeroutput> for an example of this use-case. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="63" column="18" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="63" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1plugin_1a2cefabfb6dd9800b1ebc8b07031661c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ILLIXR::plugin::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>ILLIXR::plugin::stop</qualifiedname>
        <reimplementedby refid="classILLIXR_1_1threadloop_1a7a968606c7ddfbd1ac6b0fb067ecc5a5">stop</reimplementedby>
        <reimplementedby refid="classILLIXR_1_1offload__rendering__server__loader_1a8495b481afc10a2e134bf180cb3d9796">stop</reimplementedby>
        <briefdescription>
<para>A method which Spindle calls when it stops the component. </para>
        </briefdescription>
        <detaileddescription>
<para>This is necessary because the parent class might define some actions that need to be taken prior to destructing the derived class. For example, threadloop must halt and join the thread before the derived class can be safely destructed. However, the derived class&apos;s destructor is called before its parent (threadloop), so threadloop doesn&apos;t get a chance to join the thread before the derived class is destroyed, and the thread accesses freed memory. Instead, we call plugin-&gt;stop manually before destroying anything.</para>
<para>Concrete plugins are responsible for initializing their specific logger and sinks. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="83" column="18" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1plugin_1aebda022998bd35983e83f391dc0e5193" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ILLIXR::plugin::get_name</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_name</name>
        <qualifiedname>ILLIXR::plugin::get_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="88" column="19" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1plugin_1a569297189ef365cf93f6a95202c76d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto ILLIXR::plugin::spdlogger</definition>
        <argsstring>(const char *log_level)</argsstring>
        <name>spdlogger</name>
        <qualifiedname>ILLIXR::plugin::spdlogger</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>log_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="92" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="92" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1plugin_1a7c1c7c1a0ec2e43bfa1118586a28932f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ILLIXR::plugin::spd_add_file_sink</definition>
        <argsstring>(const std::string &amp;file_name, const std::string &amp;extension, const std::string &amp;log_level)</argsstring>
        <name>spd_add_file_sink</name>
        <qualifiedname>ILLIXR::plugin::spd_add_file_sink</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>extension</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>log_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="115" column="11" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="115" bodyend="126"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A dynamically-loadable plugin for Spindle. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>ILLIXR::offload_rendering_server</label>
        <link refid="classILLIXR_1_1offload__rendering__server"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ILLIXR::offload_rendering_server_loader</label>
        <link refid="classILLIXR_1_1offload__rendering__server__loader"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ILLIXR::plugin</label>
        <link refid="classILLIXR_1_1plugin"/>
      </node>
      <node id="3">
        <label>ILLIXR::threadloop</label>
        <link refid="classILLIXR_1_1threadloop"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ILLIXR::phonebook</label>
        <link refid="classILLIXR_1_1phonebook"/>
      </node>
      <node id="1">
        <label>ILLIXR::plugin</label>
        <link refid="classILLIXR_1_1plugin"/>
        <childnode refid="2" relation="usage">
          <edgelabel>phonebook_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" line="45" column="1" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/plugin.hpp" bodystart="45" bodyend="135"/>
    <listofallmembers>
      <member refid="classILLIXR_1_1plugin_1afe52734e7edc87bd0bf974caf112961b" prot="protected" virt="non-virtual"><scope>ILLIXR::plugin</scope><name>gen_guid_</name></member>
      <member refid="classILLIXR_1_1plugin_1aebda022998bd35983e83f391dc0e5193" prot="public" virt="non-virtual"><scope>ILLIXR::plugin</scope><name>get_name</name></member>
      <member refid="classILLIXR_1_1plugin_1aaedb3f9178bdd11e53815e158454aaf3" prot="protected" virt="non-virtual"><scope>ILLIXR::plugin</scope><name>id_</name></member>
      <member refid="classILLIXR_1_1plugin_1aa963c518af83966173840a8558490888" prot="protected" virt="non-virtual"><scope>ILLIXR::plugin</scope><name>name_</name></member>
      <member refid="classILLIXR_1_1plugin_1a6f7a2a9012350591c00d67a5bc0fd5a6" prot="protected" virt="non-virtual"><scope>ILLIXR::plugin</scope><name>phonebook_</name></member>
      <member refid="classILLIXR_1_1plugin_1abc91c0e5be180a8e0bbeaf114a127f17" prot="public" virt="non-virtual"><scope>ILLIXR::plugin</scope><name>plugin</name></member>
      <member refid="classILLIXR_1_1plugin_1a8d40c2421cde09079372d12bfe7d45fe" prot="protected" virt="non-virtual"><scope>ILLIXR::plugin</scope><name>plugin_logger_</name></member>
      <member refid="classILLIXR_1_1plugin_1aef671d0cd9b6de45d3ade16dedbf4974" prot="protected" virt="non-virtual"><scope>ILLIXR::plugin</scope><name>record_logger_</name></member>
      <member refid="classILLIXR_1_1plugin_1a7c1c7c1a0ec2e43bfa1118586a28932f" prot="public" virt="non-virtual"><scope>ILLIXR::plugin</scope><name>spd_add_file_sink</name></member>
      <member refid="classILLIXR_1_1plugin_1a569297189ef365cf93f6a95202c76d76" prot="public" virt="non-virtual"><scope>ILLIXR::plugin</scope><name>spdlogger</name></member>
      <member refid="classILLIXR_1_1plugin_1a30d7294817fc5e8a8216fbfbca233cdc" prot="public" virt="virtual"><scope>ILLIXR::plugin</scope><name>start</name></member>
      <member refid="classILLIXR_1_1plugin_1a2cefabfb6dd9800b1ebc8b07031661c4" prot="public" virt="virtual"><scope>ILLIXR::plugin</scope><name>stop</name></member>
      <member refid="classILLIXR_1_1plugin_1a44d7b00c86e227bbc1a0b221da43d454" prot="public" virt="virtual"><scope>ILLIXR::plugin</scope><name>~plugin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
