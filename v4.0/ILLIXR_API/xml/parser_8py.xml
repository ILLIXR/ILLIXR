<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="parser_8py" kind="file" language="Python">
    <compoundname>parser.py</compoundname>
    <innernamespace refid="namespaceparser">parser</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>Hacked<sp/>together<sp/>obj<sp/>parser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">triangles<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="7"><highlight class="normal">mats<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="8"><highlight class="normal">result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">triangles.append([(0,0,0),(0,0,0),(0,0,0),(0,0,0)])</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#triangles.append([(100,100,800),(80,150,200),(200,200,1),(255,255,255)]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">global_verts<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="13"><highlight class="normal">global_normals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">objects<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">num_normals<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(sys.argv[1],<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;//<sp/>Parsing<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>sys.argv[1]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>obj<sp/>data&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitLine<sp/>=<sp/>line.rstrip().replace(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>splitLine[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;o&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects.append({</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">:splitLine[1],<sp/></highlight><highlight class="stringliteral">&quot;vert_indices&quot;</highlight><highlight class="normal">:[],<sp/></highlight><highlight class="stringliteral">&quot;normal_indices&quot;</highlight><highlight class="normal">:[]})</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;New<sp/>object<sp/>being<sp/>parsed:<sp/>name<sp/>=<sp/>&quot;<sp/>+<sp/>splitLine[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>splitLine[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;v&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>member<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>splitLine:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>member.isspace():</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitLine.remove(member)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_verts.append((float(splitLine[1]),float(splitLine[2]),<sp/>float(splitLine[3])))</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>splitLine[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;vn&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_normals.append((float(splitLine[1]),float(splitLine[2]),<sp/>float(splitLine[3])))</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_normals<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>splitLine[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;f&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v0_idx<sp/>=<sp/>int(splitLine[1].split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)[0])-1</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1_idx<sp/>=<sp/>int(splitLine[2].split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)[0])-1</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2_idx<sp/>=<sp/>int(splitLine[3].split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)[0])-1</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects[-1][</highlight><highlight class="stringliteral">&quot;vert_indices&quot;</highlight><highlight class="normal">].append((v0_idx,<sp/>v1_idx,<sp/>v2_idx))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>indices<sp/>of<sp/>vertex<sp/>normals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0_idx<sp/>=<sp/>int(splitLine[1].split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)[2])-1</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1_idx<sp/>=<sp/>int(splitLine[2].split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)[2])-1</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2_idx<sp/>=<sp/>int(splitLine[3].split(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)[2])-1</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects[-1][</highlight><highlight class="stringliteral">&quot;normal_indices&quot;</highlight><highlight class="normal">].append((n0_idx,<sp/>n1_idx,<sp/>n2_idx))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;//<sp/>Autogenerated<sp/>by<sp/>parser.py&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;//<sp/>Total<sp/>objects:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(objects))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;#ifndef<sp/>MODEL_HH&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;#define<sp/>MODEL_HH&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;#include<sp/>&lt;GL/gl.h&gt;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>obj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>objects:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;static<sp/>constexpr<sp/>int<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(obj[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].replace(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).capitalize())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_NUM_TRIANGLES<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(obj[</highlight><highlight class="stringliteral">&quot;vert_indices&quot;</highlight><highlight class="normal">]))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;static<sp/>constexpr<sp/>int<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(obj[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].replace(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).capitalize())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_NUM_NORMALS<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(obj[</highlight><highlight class="stringliteral">&quot;normal_indices&quot;</highlight><highlight class="normal">]))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;static<sp/>GLfloat<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>obj[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].replace(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_vertex_data[]<sp/>=<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tri<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obj[</highlight><highlight class="stringliteral">&quot;vert_indices&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vert_idx<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tri:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex<sp/>=<sp/>global_verts[vert_idx]</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(vertex).strip(</highlight><highlight class="stringliteral">&quot;()&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;};&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;static<sp/>GLfloat<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>obj[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].replace(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_normal_data[]<sp/>=<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tri<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obj[</highlight><highlight class="stringliteral">&quot;normal_indices&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>norm_idx<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tri:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal<sp/>=<sp/>global_normals[norm_idx]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(normal).strip(</highlight><highlight class="stringliteral">&quot;()&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;};&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;#endif&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral">index<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral">for<sp/>facegroup<sp/>in<sp/>faces:</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>print(&quot;//<sp/>Material<sp/>group<sp/>&quot;<sp/>+<sp/>str(index)<sp/>+<sp/>&quot;,<sp/>&quot;<sp/>+<sp/>str(len(facegroup))<sp/>+<sp/>&quot;<sp/>faces<sp/>in<sp/>group&quot;);</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>print(&quot;var<sp/>&quot;<sp/>+<sp/>sys.argv[2]<sp/>+<sp/>&quot;_group&quot;<sp/>+<sp/>str(index)<sp/>+<sp/>&quot;_poly_data<sp/>=<sp/>[&quot;)</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>face<sp/>in<sp/>facegroup[:-1]:</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;\t&quot;<sp/>+<sp/>str(face).strip(&quot;()&quot;)<sp/>+<sp/>&quot;,&quot;)</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>print(&quot;\t&quot;<sp/>+<sp/>str(facegroup[-1]).strip(&quot;()&quot;))</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>print(&quot;];\n&quot;)</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral">print(&quot;//<sp/>Parsed<sp/>&quot;<sp/>+<sp/>str(len(faces))<sp/>+<sp/>&quot;<sp/>material<sp/>groups<sp/>end<sp/>autogenerated<sp/>section&quot;)</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/plugins/gldemo/parser.py"/>
  </compounddef>
</doxygen>
