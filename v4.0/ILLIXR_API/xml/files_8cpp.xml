<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="files_8cpp" kind="file" language="C++">
    <compoundname>files.cpp</compoundname>
    <includes refid="files_8hpp" local="yes">files.hpp</includes>
    <includes refid="pose_8hpp" local="yes">illixr/data_format/pose.hpp</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="4">
        <label>illixr/data_format/camera_data.hpp</label>
        <link refid="camera__data_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>illixr/data_format/coordinate.hpp</label>
        <link refid="coordinate_8hpp_source"/>
      </node>
      <node id="42">
        <label>illixr/data_format/opencv_data_types.hpp</label>
        <link refid="opencv__data__types_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>illixr/data_format/pose.hpp</label>
        <link refid="pose_8hpp_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>illixr/data_format/unit.hpp</label>
        <link refid="unit_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>illixr/data_format/zed_cam.hpp</label>
        <link refid="zed__cam_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>managed_thread.hpp</label>
        <link refid="managed__thread_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>network/network_backend.hpp</label>
        <link refid="network__backend_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>topic_config.hpp</label>
        <link refid="topic__config_8hpp_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>illixr/phonebook.hpp</label>
        <link refid="phonebook_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>record_logger.hpp</label>
        <link refid="record__logger_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>illixr/switchboard.hpp</label>
        <link refid="switchboard_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp</label>
        <link refid="files_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>files.hpp</label>
        <link refid="files_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>any</label>
      </node>
      <node id="11">
        <label>atomic</label>
      </node>
      <node id="36">
        <label>boost/archive/binary_iarchive.hpp</label>
      </node>
      <node id="37">
        <label>boost/archive/binary_oarchive.hpp</label>
      </node>
      <node id="48">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="38">
        <label>boost/iostreams/device/back_inserter.hpp</label>
      </node>
      <node id="39">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="40">
        <label>boost/serialization/shared_ptr.hpp</label>
      </node>
      <node id="12">
        <label>cassert</label>
      </node>
      <node id="27">
        <label>chrono</label>
      </node>
      <node id="9">
        <label>concurrentqueue/blockingconcurrentqueue.hpp</label>
      </node>
      <node id="41">
        <label>cstddef</label>
      </node>
      <node id="49">
        <label>cstdint</label>
      </node>
      <node id="33">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="47">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="34">
        <label>eigen3/Eigen/Geometry</label>
      </node>
      <node id="43">
        <label>fstream</label>
      </node>
      <node id="13">
        <label>functional</label>
      </node>
      <node id="24">
        <label>iostream</label>
      </node>
      <node id="35">
        <label>list</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="19">
        <label>memory</label>
      </node>
      <node id="20">
        <label>mutex</label>
      </node>
      <node id="44">
        <label>opencv4/opencv2/core/mat.hpp</label>
      </node>
      <node id="28">
        <label>optional</label>
      </node>
      <node id="21">
        <label>shared_mutex</label>
      </node>
      <node id="25">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="32">
        <label>sstream</label>
      </node>
      <node id="14">
        <label>stdexcept</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="15">
        <label>thread</label>
      </node>
      <node id="22">
        <label>typeindex</label>
      </node>
      <node id="23">
        <label>unordered_map</label>
      </node>
      <node id="16">
        <label>utility</label>
      </node>
      <node id="29">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="files_8cpp_1aa2f49001be13949a16a57e6c99ab00ad" prot="public" static="no">
        <name>COMMA</name>
        <initializer>&quot;,&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp" line="9" column="9" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="files_8cpp_1a4fc5b06d4ff6d361f0f95feaf947b87d" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string d_file</definition>
        <argsstring></argsstring>
        <name>d_file</name>
        <initializer>= &quot;/data.csv&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp" line="12" column="19" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="files_8cpp_1a72db487af451e4fd926a2aab00657560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ILLIXR::data_format::pose_type &amp;dt)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structILLIXR_1_1data__format_1_1pose__type" kindref="compound">ILLIXR::data_format::pose_type</ref> &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp" line="69" column="1" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="files_8cpp_1a85ebb1a13efe7c81115f856776918e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, ILLIXR::data_format::ccd_data const &amp;cd)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structILLIXR_1_1data__format_1_1ccd__data" kindref="compound">ILLIXR::data_format::ccd_data</ref> const &amp;</type>
          <declname>cd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp" line="76" column="1" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="files_8cpp_1a6081fa2766e578760c00884749eefbf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, ILLIXR::data_format::camera_data const &amp;cc)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structILLIXR_1_1data__format_1_1camera__data" kindref="compound">ILLIXR::data_format::camera_data</ref> const &amp;</type>
          <declname>cc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp" line="81" column="1" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp" bodystart="81" bodyend="86"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;files.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;illixr/data_format/pose.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMMA<sp/>&quot;,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">ILLIXR::zed_capture;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>d_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/data.csv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">boost::filesystem::path<sp/>files::data_path_;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">boost::filesystem::path<sp/>files::img_path_;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">boost::filesystem::path<sp/>files::camL_path_;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">boost::filesystem::path<sp/>files::camR_path_;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>boost::filesystem::path<sp/>files::depth_path;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>boost::filesystem::path<sp/>files::conf_path;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">std::string<sp/>files::data_file_;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">std::string<sp/>files::camL_file_;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">std::string<sp/>files::camR_file_;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>std::string<sp/>files::depth_file;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>std::string<sp/>files::conf_file;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">std::string<sp/>files::cam_file_;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">files*<sp/>files::instance_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">files*<sp/>files::getInstance()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Must<sp/>be<sp/>given<sp/>a<sp/>path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance_;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">files*<sp/>files::getInstance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>rt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>files(rt,<sp/>path);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance_;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">files::files(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>rt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sub_path)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>root_<sp/>=<sp/>rt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>root_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sub_path<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>data_path_<sp/>=<sp/>root_<sp/>+<sp/>sub_path<sp/>+<sp/>data_sub_path_;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>img_path_<sp/><sp/>=<sp/>root_<sp/>+<sp/>sub_path<sp/>+<sp/>img_sub_path_;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>camL_path_<sp/>=<sp/>img_path_.string()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/camL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>camR_path_<sp/>=<sp/>img_path_.string()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/camR&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depth_path<sp/>=<sp/>img_path_.string()<sp/>+<sp/>&quot;/depth&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conf_path<sp/>=<sp/>img_path_.string()<sp/>+<sp/>&quot;/conf&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>data_file_<sp/>=<sp/>data_path_.string()<sp/>+<sp/>d_file;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>camL_file_<sp/>=<sp/>camL_path_.string()<sp/>+<sp/>d_file;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>camR_file_<sp/>=<sp/>camR_path_.string()<sp/>+<sp/>d_file;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depth_file<sp/>=<sp/>depth_path.string()<sp/>+<sp/>d_file;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conf_file<sp/>=<sp/>conf_path.string()<sp/>+<sp/>d_file;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_file_<sp/>=<sp/>data_path_.string()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/cam.csv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::filesystem::create_directories(data_path_);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::filesystem::create_directories(camL_path_);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::filesystem::create_directories(camR_path_);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boost::filesystem::create_directories(depth_path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boost::filesystem::create_directories(conf_path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structILLIXR_1_1data__format_1_1pose__type" kindref="compound">ILLIXR::data_format::pose_type</ref>&amp;<sp/>dt)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>dt.<ref refid="structILLIXR_1_1data__format_1_1pose__type_1a3a745d766ea31cf99f03c5b96c6080c2" kindref="member">sensor_time</ref>.time_since_epoch().count()<sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>dt.<ref refid="structILLIXR_1_1data__format_1_1pose__data_1a349cfa289fa6b51c4090c7d3b171332d" kindref="member">position</ref>.x()<sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>dt.<ref refid="structILLIXR_1_1data__format_1_1pose__data_1a349cfa289fa6b51c4090c7d3b171332d" kindref="member">position</ref>.y()<sp/>&lt;&lt;<sp/>COMMA</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>dt.<ref refid="structILLIXR_1_1data__format_1_1pose__data_1a349cfa289fa6b51c4090c7d3b171332d" kindref="member">position</ref>.z()<sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>dt.<ref refid="structILLIXR_1_1data__format_1_1pose__data_1a7371675dd0f9b6c1c3734c47e9680bb8" kindref="member">orientation</ref>.w()<sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>dt.<ref refid="structILLIXR_1_1data__format_1_1pose__data_1a7371675dd0f9b6c1c3734c47e9680bb8" kindref="member">orientation</ref>.x()<sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>dt.<ref refid="structILLIXR_1_1data__format_1_1pose__data_1a7371675dd0f9b6c1c3734c47e9680bb8" kindref="member">orientation</ref>.y()<sp/>&lt;&lt;<sp/>COMMA</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>dt.<ref refid="structILLIXR_1_1data__format_1_1pose__data_1a7371675dd0f9b6c1c3734c47e9680bb8" kindref="member">orientation</ref>.z();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/><ref refid="structILLIXR_1_1data__format_1_1ccd__data" kindref="compound">ILLIXR::data_format::ccd_data</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>cd)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>cd.<ref refid="structILLIXR_1_1data__format_1_1ccd__data_1aa3b99b3c6c18d7ac9234323e1138dbee" kindref="member">center_x</ref><sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>cd.<ref refid="structILLIXR_1_1data__format_1_1ccd__data_1a17a1826206b9891d8971fd59dbb127e8" kindref="member">center_y</ref><sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>cd.<ref refid="structILLIXR_1_1data__format_1_1ccd__data_1a825af13bf1c9324220334869923a42e4" kindref="member">vertical_fov</ref><sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>cd.<ref refid="structILLIXR_1_1data__format_1_1ccd__data_1ac33b160145dbdd9486aa94cc47035372" kindref="member">horizontal_fov</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/><ref refid="structILLIXR_1_1data__format_1_1camera__data" kindref="compound">ILLIXR::data_format::camera_data</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>cc)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>cc.<ref refid="structILLIXR_1_1data__format_1_1camera__data_1a0738671abf3da030b7ab85ca65672fb9" kindref="member">width</ref><sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>cc.<ref refid="structILLIXR_1_1data__format_1_1camera__data_1aa71fb1042285cbe8504e2de884ff06d4" kindref="member">height</ref><sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>cc.<ref refid="structILLIXR_1_1data__format_1_1camera__data_1a16aaa71772045a48a001e35c5e736361" kindref="member">fps</ref><sp/>&lt;&lt;<sp/>COMMA<sp/>&lt;&lt;<sp/>cc.<ref refid="structILLIXR_1_1data__format_1_1camera__data_1aa92b59d8fd2403d5427201aae182088c" kindref="member">baseline</ref><sp/>&lt;&lt;<sp/>COMMA</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>cc.<ref refid="structILLIXR_1_1data__format_1_1camera__data_1a347c477cb280b08e1048720acb33c05d" kindref="member">ccds</ref>.at(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">ILLIXR::data_format::units::eyes</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(LEFT_EYE))<sp/>&lt;&lt;<sp/>COMMA</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>cc.<ref refid="structILLIXR_1_1data__format_1_1camera__data_1a347c477cb280b08e1048720acb33c05d" kindref="member">ccds</ref>.at(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">ILLIXR::data_format::units::eyes</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(RIGHT_EYE));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/files.cpp"/>
  </compounddef>
</doxygen>
