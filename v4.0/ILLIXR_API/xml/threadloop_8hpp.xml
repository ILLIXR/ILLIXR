<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="threadloop_8hpp" kind="file" language="C++">
    <compoundname>threadloop.hpp</compoundname>
    <includes refid="cpu__timer_8hpp" local="yes">cpu_timer.hpp</includes>
    <includes refid="error__util_8hpp" local="yes">error_util.hpp</includes>
    <includes refid="phonebook_8hpp" local="yes">phonebook.hpp</includes>
    <includes refid="include_2illixr_2plugin_8hpp" local="yes">plugin.hpp</includes>
    <includes refid="record__logger_8hpp" local="yes">record_logger.hpp</includes>
    <includes refid="stoplight_8hpp" local="yes">stoplight.hpp</includes>
    <includes local="no">atomic</includes>
    <includes local="no">cassert</includes>
    <includes local="no">chrono</includes>
    <includes local="no">functional</includes>
    <includes local="no">iostream</includes>
    <includes local="no">memory</includes>
    <includes local="no">thread</includes>
    <includedby refid="plugins_2debugview_2plugin_8cpp" local="yes">/home/friedel/devel/ILLIXR/plugins/debugview/plugin.cpp</includedby>
    <includedby refid="plugins_2debugview_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/debugview/plugin.hpp</includedby>
    <includedby refid="plugins_2depthai_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/depthai/plugin.hpp</includedby>
    <includedby refid="plugins_2gldemo_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/gldemo/plugin.hpp</includedby>
    <includedby refid="plugins_2lighthouse_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/lighthouse/plugin.hpp</includedby>
    <includedby refid="plugins_2native__renderer_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/native_renderer/plugin.hpp</includedby>
    <includedby refid="plugins_2offline__cam_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offline_cam/plugin.hpp</includedby>
    <includedby refid="plugins_2offline__imu_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offline_imu/plugin.hpp</includedby>
    <includedby refid="offload__rendering__client_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_rendering_client/offload_rendering_client.hpp</includedby>
    <includedby refid="offload__rendering__server_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/offload_rendering_server.hpp</includedby>
    <includedby refid="plugins_2offload__vio_2device__rx_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_vio/device_rx/plugin.hpp</includedby>
    <includedby refid="plugins_2offload__vio_2device__tx_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_vio/device_tx/plugin.hpp</includedby>
    <includedby refid="plugins_2offload__vio_2server__rx_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/plugin.hpp</includedby>
    <includedby refid="plugins_2openni_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/openni/plugin.hpp</includedby>
    <includedby refid="plugins_2openwarp__vk_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/openwarp_vk/plugin.hpp</includedby>
    <includedby refid="plugins_2realsense_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/realsense/plugin.hpp</includedby>
    <includedby refid="plugins_2timewarp__gl_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/timewarp_gl/plugin.hpp</includedby>
    <includedby refid="plugins_2timewarp__vk_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/timewarp_vk/plugin.hpp</includedby>
    <includedby refid="plugins_2webcam_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/webcam/plugin.hpp</includedby>
    <includedby refid="plugins_2zed_2data__injection_2plugin_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/zed/data_injection/plugin.hpp</includedby>
    <includedby refid="zed__camera__thread_8hpp" local="yes">/home/friedel/devel/ILLIXR/plugins/zed/zed_camera_thread.hpp</includedby>
    <includedby refid="vkdemo_2service_8hpp" local="yes">/home/friedel/devel/ILLIXR/services/vkdemo/service.hpp</includedby>
    <includedby refid="vulkan__display_8hpp" local="yes">/home/friedel/devel/ILLIXR/src/vulkan_display.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>cpu_timer.hpp</label>
        <link refid="cpu__timer_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>error_util.hpp</label>
        <link refid="error__util_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>global_module_defs.hpp</label>
        <link refid="global__module__defs_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>phonebook.hpp</label>
        <link refid="phonebook_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>plugin.hpp</label>
        <link refid="include_2illixr_2plugin_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>record_logger.hpp</label>
        <link refid="record__logger_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>relative_clock.hpp</label>
        <link refid="relative__clock_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>stoplight.hpp</label>
        <link refid="stoplight_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/include/illixr/threadloop.hpp</label>
        <link refid="threadloop_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>algorithm</label>
      </node>
      <node id="27">
        <label>any</label>
      </node>
      <node id="28">
        <label>atomic</label>
      </node>
      <node id="7">
        <label>cassert</label>
      </node>
      <node id="16">
        <label>chrono</label>
      </node>
      <node id="19">
        <label>cmath</label>
      </node>
      <node id="37">
        <label>condition_variable</label>
      </node>
      <node id="21">
        <label>cstring</label>
      </node>
      <node id="22">
        <label>functional</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
      <node id="9">
        <label>mutex</label>
      </node>
      <node id="29">
        <label>optional</label>
      </node>
      <node id="17">
        <label>ratio</label>
      </node>
      <node id="10">
        <label>shared_mutex</label>
      </node>
      <node id="32">
        <label>spdlog/common.h</label>
      </node>
      <node id="33">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="34">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="15">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="31">
        <label>sstream</label>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="20">
        <label>string</label>
      </node>
      <node id="23">
        <label>thread</label>
      </node>
      <node id="12">
        <label>typeindex</label>
      </node>
      <node id="35">
        <label>typeinfo</label>
      </node>
      <node id="13">
        <label>unordered_map</label>
      </node>
      <node id="24">
        <label>utility</label>
      </node>
      <node id="30">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR/include/illixr/threadloop.hpp</label>
        <link refid="threadloop_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/friedel/devel/ILLIXR/plugins/debugview/plugin.hpp</label>
        <link refid="plugins_2debugview_2plugin_8hpp_source"/>
      </node>
      <node id="3">
        <label>/home/friedel/devel/ILLIXR/plugins/depthai/plugin.hpp</label>
        <link refid="plugins_2depthai_2plugin_8hpp_source"/>
      </node>
      <node id="4">
        <label>/home/friedel/devel/ILLIXR/plugins/gldemo/plugin.hpp</label>
        <link refid="plugins_2gldemo_2plugin_8hpp_source"/>
      </node>
      <node id="5">
        <label>/home/friedel/devel/ILLIXR/plugins/lighthouse/plugin.hpp</label>
        <link refid="plugins_2lighthouse_2plugin_8hpp_source"/>
      </node>
      <node id="6">
        <label>/home/friedel/devel/ILLIXR/plugins/native_renderer/plugin.hpp</label>
        <link refid="plugins_2native__renderer_2plugin_8hpp_source"/>
      </node>
      <node id="7">
        <label>/home/friedel/devel/ILLIXR/plugins/offline_cam/plugin.hpp</label>
        <link refid="plugins_2offline__cam_2plugin_8hpp_source"/>
      </node>
      <node id="8">
        <label>/home/friedel/devel/ILLIXR/plugins/offline_imu/plugin.hpp</label>
        <link refid="plugins_2offline__imu_2plugin_8hpp_source"/>
      </node>
      <node id="9">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_client/offload_rendering_client.hpp</label>
        <link refid="offload__rendering__client_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_client/plugin.cpp</label>
        <link refid="plugins_2offload__rendering__client_2plugin_8cpp"/>
      </node>
      <node id="11">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/offload_rendering_server.hpp</label>
        <link refid="offload__rendering__server_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/plugin.cpp</label>
        <link refid="plugins_2offload__rendering__server_2plugin_8cpp"/>
      </node>
      <node id="12">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_rendering_server/plugin.hpp</label>
        <link refid="plugins_2offload__rendering__server_2plugin_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/device_rx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2device__rx_2plugin_8hpp_source"/>
      </node>
      <node id="15">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/device_tx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2device__tx_2plugin_8hpp_source"/>
      </node>
      <node id="16">
        <label>/home/friedel/devel/ILLIXR/plugins/offload_vio/server_rx/plugin.hpp</label>
        <link refid="plugins_2offload__vio_2server__rx_2plugin_8hpp_source"/>
      </node>
      <node id="17">
        <label>/home/friedel/devel/ILLIXR/plugins/openni/plugin.hpp</label>
        <link refid="plugins_2openni_2plugin_8hpp_source"/>
      </node>
      <node id="18">
        <label>/home/friedel/devel/ILLIXR/plugins/openwarp_vk/plugin.hpp</label>
        <link refid="plugins_2openwarp__vk_2plugin_8hpp_source"/>
      </node>
      <node id="19">
        <label>/home/friedel/devel/ILLIXR/plugins/realsense/plugin.hpp</label>
        <link refid="plugins_2realsense_2plugin_8hpp_source"/>
      </node>
      <node id="20">
        <label>/home/friedel/devel/ILLIXR/plugins/timewarp_gl/plugin.hpp</label>
        <link refid="plugins_2timewarp__gl_2plugin_8hpp_source"/>
      </node>
      <node id="21">
        <label>/home/friedel/devel/ILLIXR/plugins/timewarp_vk/plugin.hpp</label>
        <link refid="plugins_2timewarp__vk_2plugin_8hpp_source"/>
      </node>
      <node id="22">
        <label>/home/friedel/devel/ILLIXR/plugins/webcam/plugin.hpp</label>
        <link refid="plugins_2webcam_2plugin_8hpp_source"/>
      </node>
      <node id="23">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/data_injection/plugin.hpp</label>
        <link refid="plugins_2zed_2data__injection_2plugin_8hpp_source"/>
      </node>
      <node id="25">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/plugin.hpp</label>
        <link refid="plugins_2zed_2plugin_8hpp_source"/>
      </node>
      <node id="24">
        <label>/home/friedel/devel/ILLIXR/plugins/zed/zed_camera_thread.hpp</label>
        <link refid="zed__camera__thread_8hpp_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/friedel/devel/ILLIXR/services/vkdemo/service.hpp</label>
        <link refid="vkdemo_2service_8hpp_source"/>
      </node>
      <node id="27">
        <label>/home/friedel/devel/ILLIXR/src/vulkan_display.hpp</label>
        <link refid="vulkan__display_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classILLIXR_1_1threadloop" prot="public">ILLIXR::threadloop</innerclass>
    <innernamespace refid="namespaceILLIXR">ILLIXR</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cpu_timer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;error_util.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;phonebook.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;plugin.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;record_logger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stoplight.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceILLIXR" kindref="compound">ILLIXR</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>record_header<sp/>_threadloop_iteration_header{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;threadloop_iteration&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;plugin_id&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(std::size_t)},</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;iteration_no&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(std::size_t)},</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;skips&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(std::size_t)},</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;cpu_time_start&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(std::chrono::nanoseconds)},</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;cpu_time_stop&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(std::chrono::nanoseconds)},</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;wall_time_start&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(std::chrono::high_resolution_clock::time_point)},</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;wall_time_stop&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(std::chrono::high_resolution_clock::time_point)},</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classILLIXR_1_1threadloop" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classILLIXR_1_1threadloop" kindref="compound">threadloop</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1plugin" kindref="compound">plugin</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1threadloop" kindref="compound">threadloop</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/><ref refid="classILLIXR_1_1phonebook" kindref="compound">phonebook</ref>*<sp/>pb)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classILLIXR_1_1plugin" kindref="compound">plugin</ref>{name,<sp/>pb}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>stoplight_{pb-&gt;<ref refid="classILLIXR_1_1phonebook_1a3d292059ea83e59808695622fec36fe2" kindref="member">lookup_impl</ref>&lt;<ref refid="classILLIXR_1_1stoplight" kindref="compound">stoplight</ref>&gt;()}<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classILLIXR_1_1threadloop_1af001e97f74595e18f589f66ac0595bfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1af001e97f74595e18f589f66ac0595bfb" kindref="member">start</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1plugin_1a30d7294817fc5e8a8216fbfbca233cdc" kindref="member">plugin::start</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_<sp/>=<sp/>std::thread([</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_main();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!stoplight_-&gt;check_should_stop());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(thread_.joinable());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classILLIXR_1_1threadloop_1a7a968606c7ddfbd1ac6b0fb067ecc5a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a7a968606c7ddfbd1ac6b0fb067ecc5a5" kindref="member">stop</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stoplight_-&gt;check_should_stop());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>join<sp/>if<sp/>it<sp/>has<sp/>been<sp/>started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thread_.joinable())</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_.join();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1plugin_1a2cefabfb6dd9800b1ebc8b07031661c4" kindref="member">plugin::stop</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classILLIXR_1_1threadloop_1a3e12891e504c782da98e21328dbcf0af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a3e12891e504c782da98e21328dbcf0af" kindref="member">internal_stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_stop_.store(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1threadloop" kindref="compound">~threadloop</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stoplight_-&gt;check_should_stop());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!thread_.joinable());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95" refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652" kindref="member">skip_option</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652aa53108f7543b75adbb34afc035d4cdf6" kindref="member">run</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652abe7430356a528e49af40fab3259b72b3" kindref="member">skip_and_spin</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652a9e4878510e4ed1c00058d61753440dcf" kindref="member">skip_and_yield</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1threadloop_1a7a968606c7ddfbd1ac6b0fb067ecc5a5" kindref="member">stop</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classILLIXR_1_1threadloop_1a9ff83bb9e47beff3efccbd26bc3e874a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652" kindref="member">skip_option</ref><sp/><ref refid="classILLIXR_1_1threadloop_1a9ff83bb9e47beff3efccbd26bc3e874a" kindref="member">_p_should_skip</ref>()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652aa53108f7543b75adbb34afc035d4cdf6" kindref="member">skip_option::run</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classILLIXR_1_1threadloop_1a00a89b3f3e9caa870f4c70bbc2f8fe97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a00a89b3f3e9caa870f4c70bbc2f8fe97" kindref="member">_p_thread_setup</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classILLIXR_1_1threadloop_1a609dc44adc6c56cf304408c7ac5f15be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a609dc44adc6c56cf304408c7ac5f15be" kindref="member">_p_one_iteration</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classILLIXR_1_1threadloop_1a75009fa785455bdb4b285424f0494bf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a75009fa785455bdb4b285424f0494bf7" kindref="member">should_terminate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal_stop_.load();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>iteration_no<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>skip_no<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>thread_main()<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1record__coalescer" kindref="compound">record_coalescer</ref><sp/>it_log{record_logger_};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>In<sp/>the<sp/>future,<sp/>synchronize<sp/>the<sp/>main<sp/>loop<sp/>instead<sp/>of<sp/>the<sp/>setup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>currently<sp/>not<sp/>possible<sp/>because<sp/>relative_clock<sp/>is<sp/>required<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>setup<sp/>functions,<sp/>and<sp/>relative_clock<sp/>is<sp/>only<sp/>guaranteed<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>available<sp/>once<sp/>`wait_for_ready()`<sp/>unblocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stoplight_-&gt;wait_for_ready();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1threadloop_1a00a89b3f3e9caa870f4c70bbc2f8fe97" kindref="member">_p_thread_setup</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stoplight_-&gt;check_should_stop()<sp/>&amp;&amp;<sp/>!<ref refid="classILLIXR_1_1threadloop_1a75009fa785455bdb4b285424f0494bf7" kindref="member">should_terminate</ref>())<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652" kindref="member">skip_option</ref><sp/>s<sp/>=<sp/><ref refid="classILLIXR_1_1threadloop_1a9ff83bb9e47beff3efccbd26bc3e874a" kindref="member">_p_should_skip</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(s)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652a9e4878510e4ed1c00058d61753440dcf" kindref="member">skip_option::skip_and_yield</ref>:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::yield();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++skip_no;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652abe7430356a528e49af40fab3259b72b3" kindref="member">skip_option::skip_and_spin</ref>:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++skip_no;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652aa53108f7543b75adbb34afc035d4cdf6" kindref="member">skip_option::run</ref>:<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iteration_start_cpu_time<sp/><sp/>=<sp/>thread_cpu_time();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iteration_start_wall_time<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAC_ERRNO();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILLIXR_1_1threadloop_1a609dc44adc6c56cf304408c7ac5f15be" kindref="member">_p_one_iteration</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAC_ERRNO();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_log.log(record{_threadloop_iteration_header,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{id_},</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{iteration_no},</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{skip_no},</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{iteration_start_cpu_time},</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{thread_cpu_time()},</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{iteration_start_wall_time},</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{std::chrono::high_resolution_clock::now()},</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}});</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iteration_no;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_no<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classILLIXR_1_1threadloop_1a26c08942158dc019cbc78c9880417652aef399b2d446bb37b7c32ad2cc1b6045b" kindref="member">skip_option::stop</ref>:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Break<sp/>out<sp/>of<sp/>the<sp/>switch<sp/>AND<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://stackoverflow.com/questions/27788326/breaking-out-of-nested-loop-c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>break_loop;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>break_loop:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cpp_requires_a_statement_after_a_label_plz_optimize_me_away;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;bool&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_stop_{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>stoplight&gt;<sp/>stoplight_;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ILLIXR</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR/include/illixr/threadloop.hpp"/>
  </compounddef>
</doxygen>
