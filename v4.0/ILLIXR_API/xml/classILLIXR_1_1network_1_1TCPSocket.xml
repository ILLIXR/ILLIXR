<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classILLIXR_1_1network_1_1TCPSocket" kind="class" language="C++" prot="public">
    <compoundname>ILLIXR::network::TCPSocket</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classILLIXR_1_1network_1_1TCPSocket_1a6e0e0e8987894992b92afac4bdcc9870" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ILLIXR::network::TCPSocket::fd_</definition>
        <argsstring></argsstring>
        <name>fd_</name>
        <qualifiedname>ILLIXR::network::TCPSocket::fd_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="112" column="9" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classILLIXR_1_1network_1_1TCPSocket_1a70585037847ddf5457b3dc4043901cbc" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t ILLIXR::network::TCPSocket::BUFFER_SIZE</definition>
        <argsstring></argsstring>
        <name>BUFFER_SIZE</name>
        <qualifiedname>ILLIXR::network::TCPSocket::BUFFER_SIZE</qualifiedname>
        <initializer>= 1024 * 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="114" column="29" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1ac9a7cf04cb1729b6ab2b1dbfd6f9a43b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ILLIXR::network::TCPSocket::TCPSocket</definition>
        <argsstring>()</argsstring>
        <name>TCPSocket</name>
        <qualifiedname>ILLIXR::network::TCPSocket::TCPSocket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="16" column="5" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1adc1f9187814c66a122caa14758a4c4a9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ILLIXR::network::TCPSocket::TCPSocket</definition>
        <argsstring>(int fd)</argsstring>
        <name>TCPSocket</name>
        <qualifiedname>ILLIXR::network::TCPSocket::TCPSocket</qualifiedname>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="20" column="15" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1af0338be39d1d07e94833ce499487710a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ILLIXR::network::TCPSocket::~TCPSocket</definition>
        <argsstring>()</argsstring>
        <name>~TCPSocket</name>
        <qualifiedname>ILLIXR::network::TCPSocket::~TCPSocket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="26" column="5" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1a18afd03f272dbc7483e01a46698ff2e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ILLIXR::network::TCPSocket::socket_bind</definition>
        <argsstring>(const string &amp;ip, int port) const</argsstring>
        <name>socket_bind</name>
        <qualifiedname>ILLIXR::network::TCPSocket::socket_bind</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="31" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1abd2c36fe68b3d40772e3d8a06cb29eec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ILLIXR::network::TCPSocket::socket_listen</definition>
        <argsstring>(const int backlog=16) const</argsstring>
        <name>socket_listen</name>
        <qualifiedname>ILLIXR::network::TCPSocket::socket_listen</qualifiedname>
        <param>
          <type>const int</type>
          <declname>backlog</declname>
          <defval>16</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="40" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1ad7972466f2c59f356a23ca9c86f70015" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ILLIXR::network::TCPSocket::socket_connect</definition>
        <argsstring>(const string &amp;ip, int port) const</argsstring>
        <name>socket_connect</name>
        <qualifiedname>ILLIXR::network::TCPSocket::socket_connect</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="45" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="45" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1a776f5af885ff45ff32e7d5b82b716337" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ILLIXR::network::TCPSocket::socket_accept</definition>
        <argsstring>() const</argsstring>
        <name>socket_accept</name>
        <qualifiedname>ILLIXR::network::TCPSocket::socket_accept</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="54" column="9" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1a15ae6b3c8bb5b0fe020c11910b75b99b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ILLIXR::network::TCPSocket::socket_set_reuseaddr</definition>
        <argsstring>() const</argsstring>
        <name>socket_set_reuseaddr</name>
        <qualifiedname>ILLIXR::network::TCPSocket::socket_set_reuseaddr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="60" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1a5f69d21328170f028d68a8390ec0e346" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string ILLIXR::network::TCPSocket::read_data</definition>
        <argsstring>(const size_t limit=BUFFER_SIZE) const</argsstring>
        <name>read_data</name>
        <qualifiedname>ILLIXR::network::TCPSocket::read_data</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>limit</declname>
          <defval>BUFFER_SIZE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="66" column="13" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1a484a7c41729e8fcb0824e16741b3fc23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ILLIXR::network::TCPSocket::write_data</definition>
        <argsstring>(const string &amp;buffer)</argsstring>
        <name>write_data</name>
        <qualifiedname>ILLIXR::network::TCPSocket::write_data</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="73" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1a4f8d02bb99bcd24b9fdf1a679659c04e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ILLIXR::network::TCPSocket::enable_no_delay</definition>
        <argsstring>() const</argsstring>
        <name>enable_no_delay</name>
        <qualifiedname>ILLIXR::network::TCPSocket::enable_no_delay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="81" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1a9027cda8452c1c936147f569e410fe7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string ILLIXR::network::TCPSocket::local_address</definition>
        <argsstring>() const</argsstring>
        <name>local_address</name>
        <qualifiedname>ILLIXR::network::TCPSocket::local_address</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="87" column="14" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="87" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1a6a557e56472759d97693114034d17dde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string ILLIXR::network::TCPSocket::peer_address</definition>
        <argsstring>() const</argsstring>
        <name>peer_address</name>
        <qualifiedname>ILLIXR::network::TCPSocket::peer_address</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="96" column="13" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="96" bodyend="103"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classILLIXR_1_1network_1_1TCPSocket_1a82632f2b276e5d340f889749c00c480a" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string::const_iterator</type>
        <definition>string::const_iterator ILLIXR::network::TCPSocket::write_helper</definition>
        <argsstring>(const string::const_iterator &amp;begin, const string::const_iterator &amp;end) const</argsstring>
        <name>write_helper</name>
        <qualifiedname>ILLIXR::network::TCPSocket::write_helper</qualifiedname>
        <param>
          <type>const string::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const string::const_iterator &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="106" column="29" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="106" bodyend="110"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" line="14" column="1" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/network/tcpsocket.hpp" bodystart="14" bodyend="115"/>
    <listofallmembers>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a70585037847ddf5457b3dc4043901cbc" prot="private" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>BUFFER_SIZE</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a4f8d02bb99bcd24b9fdf1a679659c04e" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>enable_no_delay</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a6e0e0e8987894992b92afac4bdcc9870" prot="private" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>fd_</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a9027cda8452c1c936147f569e410fe7a" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>local_address</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a6a557e56472759d97693114034d17dde" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>peer_address</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a5f69d21328170f028d68a8390ec0e346" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>read_data</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a776f5af885ff45ff32e7d5b82b716337" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>socket_accept</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a18afd03f272dbc7483e01a46698ff2e0" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>socket_bind</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1ad7972466f2c59f356a23ca9c86f70015" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>socket_connect</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1abd2c36fe68b3d40772e3d8a06cb29eec" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>socket_listen</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a15ae6b3c8bb5b0fe020c11910b75b99b" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>socket_set_reuseaddr</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1ac9a7cf04cb1729b6ab2b1dbfd6f9a43b" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>TCPSocket</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1adc1f9187814c66a122caa14758a4c4a9" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>TCPSocket</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a484a7c41729e8fcb0824e16741b3fc23" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>write_data</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1a82632f2b276e5d340f889749c00c480a" prot="private" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>write_helper</name></member>
      <member refid="classILLIXR_1_1network_1_1TCPSocket_1af0338be39d1d07e94833ce499487710a" prot="public" virt="non-virtual"><scope>ILLIXR::network::TCPSocket</scope><name>~TCPSocket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
