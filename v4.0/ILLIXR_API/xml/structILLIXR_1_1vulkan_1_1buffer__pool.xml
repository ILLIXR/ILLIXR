<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structILLIXR_1_1vulkan_1_1buffer__pool" kind="struct" language="C++" prot="public">
    <compoundname>ILLIXR::vulkan::buffer_pool</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="structILLIXR_1_1vulkan_1_1buffer__pool_1abb5c3307908428495d349626635b1236" prot="public" static="no" strong="no">
        <type></type>
        <name>image_state</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::image_state</qualifiedname>
        <enumvalue id="structILLIXR_1_1vulkan_1_1buffer__pool_1abb5c3307908428495d349626635b1236a1010da633e708cbb77e5a890fd6f2727" prot="public">
          <name>FREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structILLIXR_1_1vulkan_1_1buffer__pool_1abb5c3307908428495d349626635b1236a239bc755cf9243cd25f2ae6541b89411" prot="public">
          <name>SRC_IN_FLIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structILLIXR_1_1vulkan_1_1buffer__pool_1abb5c3307908428495d349626635b1236a959e3cdb93cde8ca2c79b5da8ed2b404" prot="public">
          <name>AVAILABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structILLIXR_1_1vulkan_1_1buffer__pool_1abb5c3307908428495d349626635b1236ad9c1afe14225f340ff0bbbcae24c402a" prot="public">
          <name>POST_PROCESSING_IN_FLIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="23" column="5" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structILLIXR_1_1vulkan_1_1buffer__pool_1a962bc4bc6a54865116f8e7b4ebd2e2f2" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::array&lt; vk_image, 2 &gt; &gt;</type>
        <definition>std::vector&lt;std::array&lt;vk_image, 2&gt; &gt; ILLIXR::vulkan::buffer_pool&lt; T &gt;::image_pool</definition>
        <argsstring></argsstring>
        <name>image_pool</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::image_pool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="25" column="17" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structILLIXR_1_1vulkan_1_1buffer__pool_1ad423bf2684ef6b41dee832d23e96143b" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::array&lt; vk_image, 2 &gt; &gt;</type>
        <definition>std::vector&lt;std::array&lt;vk_image, 2&gt; &gt; ILLIXR::vulkan::buffer_pool&lt; T &gt;::depth_image_pool</definition>
        <argsstring></argsstring>
        <name>depth_image_pool</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::depth_image_pool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="26" column="17" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structILLIXR_1_1vulkan_1_1buffer__pool_1ab1bd8a0bdda8bc6dbc0b570eaae5a634" prot="public" static="no" mutable="no">
        <type>std::vector&lt; image_state &gt;</type>
        <definition>std::vector&lt;image_state&gt; ILLIXR::vulkan::buffer_pool&lt; T &gt;::image_states</definition>
        <argsstring></argsstring>
        <name>image_states</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::image_states</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="28" column="17" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="variable" id="structILLIXR_1_1vulkan_1_1buffer__pool_1a0a27f45c46803d5e7d97593576aa1731" prot="public" static="no" mutable="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; ILLIXR::vulkan::buffer_pool&lt; T &gt;::image_data</definition>
        <argsstring></argsstring>
        <name>image_data</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::image_data</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="29" column="27" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="variable" id="structILLIXR_1_1vulkan_1_1buffer__pool_1a4bcbf3a01602ed7aca418f9cd12495b5" prot="public" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex ILLIXR::vulkan::buffer_pool&lt; T &gt;::image_state_mutex</definition>
        <argsstring></argsstring>
        <name>image_state_mutex</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::image_state_mutex</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="30" column="30" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="variable" id="structILLIXR_1_1vulkan_1_1buffer__pool_1a5455c5636b51a0ca3dbfc286929581aa" prot="public" static="no" mutable="no">
        <type>image_index_t</type>
        <definition>image_index_t ILLIXR::vulkan::buffer_pool&lt; T &gt;::latest_decoded_image</definition>
        <argsstring></argsstring>
        <name>latest_decoded_image</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::latest_decoded_image</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="32" column="19" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structILLIXR_1_1vulkan_1_1buffer__pool_1a44afd1ed4e4508ce93271b44bb22ea43" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ILLIXR::vulkan::buffer_pool&lt; T &gt;::buffer_pool</definition>
        <argsstring>(const std::vector&lt; std::array&lt; vk_image, 2 &gt; &gt; &amp;image_pool, const std::vector&lt; std::array&lt; vk_image, 2 &gt; &gt; &amp;depth_image_pool)</argsstring>
        <name>buffer_pool</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::buffer_pool</qualifiedname>
        <param>
          <type>const std::vector&lt; std::array&lt; vk_image, 2 &gt; &gt; &amp;</type>
          <declname>image_pool</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::array&lt; vk_image, 2 &gt; &gt; &amp;</type>
          <declname>depth_image_pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="34" column="14" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="34" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="structILLIXR_1_1vulkan_1_1buffer__pool_1a6b35227b543304ce96403c0dd1847bf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>image_index_t</type>
        <definition>image_index_t ILLIXR::vulkan::buffer_pool&lt; T &gt;::src_acquire_image</definition>
        <argsstring>()</argsstring>
        <name>src_acquire_image</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::src_acquire_image</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="42" column="19" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="42" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structILLIXR_1_1vulkan_1_1buffer__pool_1a53688b4088def56b8f1f0d74bb025160" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ILLIXR::vulkan::buffer_pool&lt; T &gt;::src_release_image</definition>
        <argsstring>(image_index_t image_index, T &amp;&amp;data)</argsstring>
        <name>src_release_image</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::src_release_image</qualifiedname>
        <param>
          <type>image_index_t</type>
          <declname>image_index</declname>
        </param>
        <param>
          <type>T &amp;&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Release the image after it has been decoded. </para>
        </briefdescription>
        <detaileddescription>
<para>It is the caller&apos;s responsibility to ensure that the image is in the DECODE_IN_FLIGHT state. Images must be released in order. If an image is released out of order, the previous images will be marked as free. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the image to release. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="63" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structILLIXR_1_1vulkan_1_1buffer__pool_1a2c9255f8da274952308e1dafc8502794" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; image_index_t, T &gt;</type>
        <definition>std::pair&lt; image_index_t, T &gt; ILLIXR::vulkan::buffer_pool&lt; T &gt;::post_processing_acquire_image</definition>
        <argsstring>(image_index_t last_image_index=-1)</argsstring>
        <name>post_processing_acquire_image</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::post_processing_acquire_image</qualifiedname>
        <param>
          <type>image_index_t</type>
          <declname>last_image_index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="79" column="15" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="79" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structILLIXR_1_1vulkan_1_1buffer__pool_1a159dc8bcb4fbdb5578605db661ccc67f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ILLIXR::vulkan::buffer_pool&lt; T &gt;::post_processing_release_image</definition>
        <argsstring>(image_index_t image_index)</argsstring>
        <name>post_processing_release_image</name>
        <qualifiedname>ILLIXR::vulkan::buffer_pool::post_processing_release_image</qualifiedname>
        <param>
          <type>image_index_t</type>
          <declname>image_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="95" column="10" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="95" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" line="22" column="1" bodyfile="/home/friedel/devel/ILLIXR/include/illixr/vk/vulkan_objects.hpp" bodystart="22" bodyend="106"/>
    <listofallmembers>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1abb5c3307908428495d349626635b1236a959e3cdb93cde8ca2c79b5da8ed2b404" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>AVAILABLE</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1a44afd1ed4e4508ce93271b44bb22ea43" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>buffer_pool</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1ad423bf2684ef6b41dee832d23e96143b" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>depth_image_pool</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1abb5c3307908428495d349626635b1236a1010da633e708cbb77e5a890fd6f2727" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>FREE</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1a0a27f45c46803d5e7d97593576aa1731" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>image_data</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1a962bc4bc6a54865116f8e7b4ebd2e2f2" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>image_pool</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1abb5c3307908428495d349626635b1236" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>image_state</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1a4bcbf3a01602ed7aca418f9cd12495b5" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>image_state_mutex</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1ab1bd8a0bdda8bc6dbc0b570eaae5a634" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>image_states</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1a5455c5636b51a0ca3dbfc286929581aa" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>latest_decoded_image</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1a2c9255f8da274952308e1dafc8502794" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>post_processing_acquire_image</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1abb5c3307908428495d349626635b1236ad9c1afe14225f340ff0bbbcae24c402a" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>POST_PROCESSING_IN_FLIGHT</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1a159dc8bcb4fbdb5578605db661ccc67f" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>post_processing_release_image</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1a6b35227b543304ce96403c0dd1847bf3" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>src_acquire_image</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1abb5c3307908428495d349626635b1236a239bc755cf9243cd25f2ae6541b89411" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>SRC_IN_FLIGHT</name></member>
      <member refid="structILLIXR_1_1vulkan_1_1buffer__pool_1a53688b4088def56b8f1f0d74bb025160" prot="public" virt="non-virtual"><scope>ILLIXR::vulkan::buffer_pool</scope><name>src_release_image</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
