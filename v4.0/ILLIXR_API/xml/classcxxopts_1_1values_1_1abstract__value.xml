<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classcxxopts_1_1values_1_1abstract__value" kind="class" language="C++" prot="public">
    <compoundname>cxxopts::values::abstract_value</compoundname>
    <basecompoundref prot="public" virt="non-virtual">cxxopts::Value</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">cxxopts::Value</basecompoundref>
    <derivedcompoundref refid="classcxxopts_1_1values_1_1standard__value" prot="public" virt="non-virtual">cxxopts::values::standard_value&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcxxopts_1_1values_1_1standard__value" prot="public" virt="non-virtual">cxxopts::values::standard_value&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4" prot="public" virt="non-virtual">cxxopts::values::standard_value&lt; bool &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcxxopts_1_1values_1_1standard__value_3_01bool_01_4" prot="public" virt="non-virtual">cxxopts::values::standard_value&lt; bool &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classcxxopts_1_1values_1_1abstract__value_1a6b8c97ae22663547247602545e8a1cf9" prot="private" static="no">
        <type>abstract_value&lt; T &gt;</type>
        <definition>using cxxopts::values::abstract_value&lt; T &gt;::Self =  abstract_value&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <qualifiedname>cxxopts::values::abstract_value::Self</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="849" column="9" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="849" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcxxopts_1_1values_1_1abstract__value_1a6b8c97ae22663547247602545e8a1cf9" prot="private" static="no">
        <type>abstract_value&lt; T &gt;</type>
        <definition>using cxxopts::values::abstract_value&lt; T &gt;::Self =  abstract_value&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <qualifiedname>cxxopts::values::abstract_value::Self</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="849" column="9" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="849" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcxxopts_1_1values_1_1abstract__value_1ac655a2328f8f00c2938a817bcf97c292" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; T &gt;</type>
        <definition>std::shared_ptr&lt; T &gt; cxxopts::values::abstract_value&lt; T &gt;::m_result</definition>
        <argsstring></argsstring>
        <name>m_result</name>
        <qualifiedname>cxxopts::values::abstract_value::m_result</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="934" column="25" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="934" bodyend="934"/>
      </memberdef>
      <memberdef kind="variable" id="classcxxopts_1_1values_1_1abstract__value_1a2c64d7bf9dce521406755899402ffc06" prot="protected" static="no" mutable="no">
        <type>T *</type>
        <definition>T * cxxopts::values::abstract_value&lt; T &gt;::m_store</definition>
        <argsstring></argsstring>
        <name>m_store</name>
        <qualifiedname>cxxopts::values::abstract_value::m_store</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="935" column="27" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="935" bodyend="935"/>
      </memberdef>
      <memberdef kind="variable" id="classcxxopts_1_1values_1_1abstract__value_1ad16dfdf6856b66c4ed6b35edfade5218" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool cxxopts::values::abstract_value&lt; T &gt;::m_default</definition>
        <argsstring></argsstring>
        <name>m_default</name>
        <qualifiedname>cxxopts::values::abstract_value::m_default</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="937" column="14" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="937" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcxxopts_1_1values_1_1abstract__value_1a3f9bdb2d94189ddf78eb5b338d5c33bc" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool cxxopts::values::abstract_value&lt; T &gt;::m_implicit</definition>
        <argsstring></argsstring>
        <name>m_implicit</name>
        <qualifiedname>cxxopts::values::abstract_value::m_implicit</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="938" column="14" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="938" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcxxopts_1_1values_1_1abstract__value_1a0e3f038dc1c0aeab3e5c517d9e033ee4" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string cxxopts::values::abstract_value&lt; T &gt;::m_default_value</definition>
        <argsstring></argsstring>
        <name>m_default_value</name>
        <qualifiedname>cxxopts::values::abstract_value::m_default_value</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="940" column="21" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="940" bodyend="940"/>
      </memberdef>
      <memberdef kind="variable" id="classcxxopts_1_1values_1_1abstract__value_1a69ed02e5ce2c431fad801ed5bb1cde26" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string cxxopts::values::abstract_value&lt; T &gt;::m_implicit_value</definition>
        <argsstring></argsstring>
        <name>m_implicit_value</name>
        <qualifiedname>cxxopts::values::abstract_value::m_implicit_value</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="941" column="21" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="941" bodyend="941"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1abaf85af44d7de0d08508ea50c911062f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cxxopts::values::abstract_value&lt; T &gt;::abstract_value</definition>
        <argsstring>()</argsstring>
        <name>abstract_value</name>
        <qualifiedname>cxxopts::values::abstract_value::abstract_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="852" column="9" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="852" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a578211778e2d3a3eb5c9f9a57b5b9cd1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cxxopts::values::abstract_value&lt; T &gt;::abstract_value</definition>
        <argsstring>(T *t)</argsstring>
        <name>abstract_value</name>
        <qualifiedname>cxxopts::values::abstract_value::abstract_value</qualifiedname>
        <param>
          <type>T *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="856" column="18" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="856" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1adeb790d413e867e47324d1a04ff9e601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cxxopts::values::abstract_value&lt; T &gt;::~abstract_value</definition>
        <argsstring>() override=default</argsstring>
        <name>~abstract_value</name>
        <qualifiedname>cxxopts::values::abstract_value::~abstract_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="859" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1ae7953d00c1885a9704dba9cbba166e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>abstract_value &amp;</type>
        <definition>abstract_value &amp; cxxopts::values::abstract_value&lt; T &gt;::operator=</definition>
        <argsstring>(const abstract_value &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>cxxopts::values::abstract_value::operator=</qualifiedname>
        <param>
          <type>const abstract_value &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="861" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a512fb323456e370b1f7b784d57b55c25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cxxopts::values::abstract_value&lt; T &gt;::abstract_value</definition>
        <argsstring>(const abstract_value &amp;rhs)</argsstring>
        <name>abstract_value</name>
        <qualifiedname>cxxopts::values::abstract_value::abstract_value</qualifiedname>
        <param>
          <type>const abstract_value &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="863" column="9" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="863" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1ad6599c6a72ae7903a7a9b6dda2f828cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::values::abstract_value&lt; T &gt;::parse</definition>
        <argsstring>(const std::string &amp;text) const override</argsstring>
        <name>parse</name>
        <qualifiedname>cxxopts::values::abstract_value::parse</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="877" column="14" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="877" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a1b7954bea9d4db388125d3427203dba8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cxxopts::values::abstract_value&lt; T &gt;::is_container</definition>
        <argsstring>() const override</argsstring>
        <name>is_container</name>
        <qualifiedname>cxxopts::values::abstract_value::is_container</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="881" column="14" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="881" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1aa8dfcbbfb1f9b28261a3e4fa564a02c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::values::abstract_value&lt; T &gt;::parse</definition>
        <argsstring>() const override</argsstring>
        <name>parse</name>
        <qualifiedname>cxxopts::values::abstract_value::parse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="885" column="14" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="885" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a8ab35d0f85ed76406651b442f4094cb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cxxopts::values::abstract_value&lt; T &gt;::has_default</definition>
        <argsstring>() const override</argsstring>
        <name>has_default</name>
        <qualifiedname>cxxopts::values::abstract_value::has_default</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="889" column="14" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="889" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1af832b3696ce245e5b4c402ffc5af6155" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cxxopts::values::abstract_value&lt; T &gt;::has_implicit</definition>
        <argsstring>() const override</argsstring>
        <name>has_implicit</name>
        <qualifiedname>cxxopts::values::abstract_value::has_implicit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="893" column="14" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="893" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a3bc6dc59f9bec5811bda3ca86a5ba22e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; Value &gt;</type>
        <definition>std::shared_ptr&lt; Value &gt; cxxopts::values::abstract_value&lt; T &gt;::default_value</definition>
        <argsstring>(const std::string &amp;value) override</argsstring>
        <name>default_value</name>
        <qualifiedname>cxxopts::values::abstract_value::default_value</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="897" column="25" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="897" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1aac9bc16b6695a1b1aca9d87ed2c3261a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; Value &gt;</type>
        <definition>std::shared_ptr&lt; Value &gt; cxxopts::values::abstract_value&lt; T &gt;::implicit_value</definition>
        <argsstring>(const std::string &amp;value) override</argsstring>
        <name>implicit_value</name>
        <qualifiedname>cxxopts::values::abstract_value::implicit_value</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="903" column="25" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="903" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a286d315daba090046b6c72a6711d389d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; Value &gt;</type>
        <definition>std::shared_ptr&lt; Value &gt; cxxopts::values::abstract_value&lt; T &gt;::no_implicit_value</definition>
        <argsstring>() override</argsstring>
        <name>no_implicit_value</name>
        <qualifiedname>cxxopts::values::abstract_value::no_implicit_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="909" column="25" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="909" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a901928871ef3566e74f081d5ab9020aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string cxxopts::values::abstract_value&lt; T &gt;::get_default_value</definition>
        <argsstring>() const override</argsstring>
        <name>get_default_value</name>
        <qualifiedname>cxxopts::values::abstract_value::get_default_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="914" column="21" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="914" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a5e5aa0e29056c3daa7e5a1defd69f20f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string cxxopts::values::abstract_value&lt; T &gt;::get_implicit_value</definition>
        <argsstring>() const override</argsstring>
        <name>get_implicit_value</name>
        <qualifiedname>cxxopts::values::abstract_value::get_implicit_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="918" column="21" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="918" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1ac4a5f57c63086de1eac4cbefe09d99ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cxxopts::values::abstract_value&lt; T &gt;::is_boolean</definition>
        <argsstring>() const override</argsstring>
        <name>is_boolean</name>
        <qualifiedname>cxxopts::values::abstract_value::is_boolean</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="922" column="14" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="922" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a13587e25582d606cd757d3ad5a4df3b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; cxxopts::values::abstract_value&lt; T &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>cxxopts::values::abstract_value::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="926" column="17" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="926" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1abaf85af44d7de0d08508ea50c911062f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cxxopts::values::abstract_value&lt; T &gt;::abstract_value</definition>
        <argsstring>()</argsstring>
        <name>abstract_value</name>
        <qualifiedname>cxxopts::values::abstract_value::abstract_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="852" column="9" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="852" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a578211778e2d3a3eb5c9f9a57b5b9cd1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cxxopts::values::abstract_value&lt; T &gt;::abstract_value</definition>
        <argsstring>(T *t)</argsstring>
        <name>abstract_value</name>
        <qualifiedname>cxxopts::values::abstract_value::abstract_value</qualifiedname>
        <param>
          <type>T *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="856" column="18" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="856" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1adeb790d413e867e47324d1a04ff9e601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cxxopts::values::abstract_value&lt; T &gt;::~abstract_value</definition>
        <argsstring>() override=default</argsstring>
        <name>~abstract_value</name>
        <qualifiedname>cxxopts::values::abstract_value::~abstract_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="859" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1ae7953d00c1885a9704dba9cbba166e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>abstract_value &amp;</type>
        <definition>abstract_value &amp; cxxopts::values::abstract_value&lt; T &gt;::operator=</definition>
        <argsstring>(const abstract_value &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>cxxopts::values::abstract_value::operator=</qualifiedname>
        <param>
          <type>const abstract_value &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="861" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a512fb323456e370b1f7b784d57b55c25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cxxopts::values::abstract_value&lt; T &gt;::abstract_value</definition>
        <argsstring>(const abstract_value &amp;rhs)</argsstring>
        <name>abstract_value</name>
        <qualifiedname>cxxopts::values::abstract_value::abstract_value</qualifiedname>
        <param>
          <type>const abstract_value &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="863" column="9" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="863" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1ad6599c6a72ae7903a7a9b6dda2f828cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::values::abstract_value&lt; T &gt;::parse</definition>
        <argsstring>(const std::string &amp;text) const override</argsstring>
        <name>parse</name>
        <qualifiedname>cxxopts::values::abstract_value::parse</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="877" column="14" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="877" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a1b7954bea9d4db388125d3427203dba8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cxxopts::values::abstract_value&lt; T &gt;::is_container</definition>
        <argsstring>() const override</argsstring>
        <name>is_container</name>
        <qualifiedname>cxxopts::values::abstract_value::is_container</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="881" column="14" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="881" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1aa8dfcbbfb1f9b28261a3e4fa564a02c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::values::abstract_value&lt; T &gt;::parse</definition>
        <argsstring>() const override</argsstring>
        <name>parse</name>
        <qualifiedname>cxxopts::values::abstract_value::parse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="885" column="14" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="885" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a8ab35d0f85ed76406651b442f4094cb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cxxopts::values::abstract_value&lt; T &gt;::has_default</definition>
        <argsstring>() const override</argsstring>
        <name>has_default</name>
        <qualifiedname>cxxopts::values::abstract_value::has_default</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="889" column="14" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="889" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1af832b3696ce245e5b4c402ffc5af6155" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cxxopts::values::abstract_value&lt; T &gt;::has_implicit</definition>
        <argsstring>() const override</argsstring>
        <name>has_implicit</name>
        <qualifiedname>cxxopts::values::abstract_value::has_implicit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="893" column="14" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="893" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a3bc6dc59f9bec5811bda3ca86a5ba22e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; Value &gt;</type>
        <definition>std::shared_ptr&lt; Value &gt; cxxopts::values::abstract_value&lt; T &gt;::default_value</definition>
        <argsstring>(const std::string &amp;value) override</argsstring>
        <name>default_value</name>
        <qualifiedname>cxxopts::values::abstract_value::default_value</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="897" column="25" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="897" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1aac9bc16b6695a1b1aca9d87ed2c3261a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; Value &gt;</type>
        <definition>std::shared_ptr&lt; Value &gt; cxxopts::values::abstract_value&lt; T &gt;::implicit_value</definition>
        <argsstring>(const std::string &amp;value) override</argsstring>
        <name>implicit_value</name>
        <qualifiedname>cxxopts::values::abstract_value::implicit_value</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="903" column="25" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="903" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a286d315daba090046b6c72a6711d389d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; Value &gt;</type>
        <definition>std::shared_ptr&lt; Value &gt; cxxopts::values::abstract_value&lt; T &gt;::no_implicit_value</definition>
        <argsstring>() override</argsstring>
        <name>no_implicit_value</name>
        <qualifiedname>cxxopts::values::abstract_value::no_implicit_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="909" column="25" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="909" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a901928871ef3566e74f081d5ab9020aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string cxxopts::values::abstract_value&lt; T &gt;::get_default_value</definition>
        <argsstring>() const override</argsstring>
        <name>get_default_value</name>
        <qualifiedname>cxxopts::values::abstract_value::get_default_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="914" column="21" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="914" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a5e5aa0e29056c3daa7e5a1defd69f20f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string cxxopts::values::abstract_value&lt; T &gt;::get_implicit_value</definition>
        <argsstring>() const override</argsstring>
        <name>get_implicit_value</name>
        <qualifiedname>cxxopts::values::abstract_value::get_implicit_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="918" column="21" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="918" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1ac4a5f57c63086de1eac4cbefe09d99ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool cxxopts::values::abstract_value&lt; T &gt;::is_boolean</definition>
        <argsstring>() const override</argsstring>
        <name>is_boolean</name>
        <qualifiedname>cxxopts::values::abstract_value::is_boolean</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="922" column="14" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="922" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1values_1_1abstract__value_1a13587e25582d606cd757d3ad5a4df3b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; cxxopts::values::abstract_value&lt; T &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>cxxopts::values::abstract_value::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="926" column="17" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="926" bodyend="931"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="848" column="5" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="848" bodyend="942"/>
    <listofallmembers>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1abaf85af44d7de0d08508ea50c911062f" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>abstract_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a578211778e2d3a3eb5c9f9a57b5b9cd1" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>abstract_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a512fb323456e370b1f7b784d57b55c25" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>abstract_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1abaf85af44d7de0d08508ea50c911062f" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>abstract_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a578211778e2d3a3eb5c9f9a57b5b9cd1" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>abstract_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a512fb323456e370b1f7b784d57b55c25" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>abstract_value</name></member>
      <member refid="classcxxopts_1_1Value_1a17916d6a48e57c999c2dc23fa6b22539" prot="public" virt="pure-virtual"><scope>cxxopts::values::abstract_value</scope><name>clone</name></member>
      <member refid="classcxxopts_1_1Value_1a17916d6a48e57c999c2dc23fa6b22539" prot="public" virt="pure-virtual"><scope>cxxopts::values::abstract_value</scope><name>clone</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a3bc6dc59f9bec5811bda3ca86a5ba22e" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>default_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a3bc6dc59f9bec5811bda3ca86a5ba22e" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>default_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a13587e25582d606cd757d3ad5a4df3b9" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>get</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a13587e25582d606cd757d3ad5a4df3b9" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>get</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a901928871ef3566e74f081d5ab9020aa" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>get_default_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a901928871ef3566e74f081d5ab9020aa" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>get_default_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a5e5aa0e29056c3daa7e5a1defd69f20f" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>get_implicit_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a5e5aa0e29056c3daa7e5a1defd69f20f" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>get_implicit_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a8ab35d0f85ed76406651b442f4094cb9" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>has_default</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a8ab35d0f85ed76406651b442f4094cb9" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>has_default</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1af832b3696ce245e5b4c402ffc5af6155" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>has_implicit</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1af832b3696ce245e5b4c402ffc5af6155" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>has_implicit</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1aac9bc16b6695a1b1aca9d87ed2c3261a" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>implicit_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1aac9bc16b6695a1b1aca9d87ed2c3261a" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>implicit_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1ac4a5f57c63086de1eac4cbefe09d99ce" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>is_boolean</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1ac4a5f57c63086de1eac4cbefe09d99ce" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>is_boolean</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a1b7954bea9d4db388125d3427203dba8" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>is_container</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a1b7954bea9d4db388125d3427203dba8" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>is_container</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1ad16dfdf6856b66c4ed6b35edfade5218" prot="protected" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>m_default</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a0e3f038dc1c0aeab3e5c517d9e033ee4" prot="protected" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>m_default_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a3f9bdb2d94189ddf78eb5b338d5c33bc" prot="protected" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>m_implicit</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a69ed02e5ce2c431fad801ed5bb1cde26" prot="protected" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>m_implicit_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1ac655a2328f8f00c2938a817bcf97c292" prot="protected" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>m_result</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a2c64d7bf9dce521406755899402ffc06" prot="protected" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>m_store</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a286d315daba090046b6c72a6711d389d" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>no_implicit_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a286d315daba090046b6c72a6711d389d" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>no_implicit_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1ae7953d00c1885a9704dba9cbba166e4d" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>operator=</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1ae7953d00c1885a9704dba9cbba166e4d" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>operator=</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1ad6599c6a72ae7903a7a9b6dda2f828cf" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>parse</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1aa8dfcbbfb1f9b28261a3e4fa564a02c1" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>parse</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1ad6599c6a72ae7903a7a9b6dda2f828cf" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>parse</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1aa8dfcbbfb1f9b28261a3e4fa564a02c1" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>parse</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a6b8c97ae22663547247602545e8a1cf9" prot="private" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>Self</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1a6b8c97ae22663547247602545e8a1cf9" prot="private" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>Self</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1adeb790d413e867e47324d1a04ff9e601" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>~abstract_value</name></member>
      <member refid="classcxxopts_1_1values_1_1abstract__value_1adeb790d413e867e47324d1a04ff9e601" prot="public" virt="non-virtual"><scope>cxxopts::values::abstract_value</scope><name>~abstract_value</name></member>
      <member refid="classcxxopts_1_1Value_1afbbfc1c371d0b8bab3548be76523d12c" prot="public" virt="virtual"><scope>cxxopts::values::abstract_value</scope><name>~Value</name></member>
      <member refid="classcxxopts_1_1Value_1afbbfc1c371d0b8bab3548be76523d12c" prot="public" virt="virtual"><scope>cxxopts::values::abstract_value</scope><name>~Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
