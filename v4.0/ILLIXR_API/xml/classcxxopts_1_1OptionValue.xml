<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classcxxopts_1_1OptionValue" kind="class" language="C++" prot="public">
    <compoundname>cxxopts::OptionValue</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcxxopts_1_1OptionValue_1a71e084e652b1d44351452bf647860554" prot="private" static="no" mutable="no">
        <type>const OptionNames *</type>
        <definition>const OptionNames * cxxopts::OptionValue::m_long_names</definition>
        <argsstring></argsstring>
        <name>m_long_names</name>
        <qualifiedname>cxxopts::OptionValue::m_long_names</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1145" column="23" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcxxopts_1_1OptionValue_1a1e61862e3c68a7cec67d5bdfb0183870" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; Value &gt;</type>
        <definition>std::shared_ptr&lt; Value &gt; cxxopts::OptionValue::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <qualifiedname>cxxopts::OptionValue::m_value</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1148" column="21" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1148" bodyend="1148"/>
      </memberdef>
      <memberdef kind="variable" id="classcxxopts_1_1OptionValue_1a80bfd82d3bf24a7b6f517cb5046af0d5" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t cxxopts::OptionValue::m_count</definition>
        <argsstring></argsstring>
        <name>m_count</name>
        <qualifiedname>cxxopts::OptionValue::m_count</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1149" column="28" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcxxopts_1_1OptionValue_1a4b65034339c40c08656fa674680d99e1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool cxxopts::OptionValue::m_default</definition>
        <argsstring></argsstring>
        <name>m_default</name>
        <qualifiedname>cxxopts::OptionValue::m_default</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1150" column="28" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1150" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a69645a46405198eea09f45137f1bcf8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::OptionValue::parse</definition>
        <argsstring>(const std::shared_ptr&lt; const OptionDetails &gt; &amp;details, const std::string &amp;text)</argsstring>
        <name>parse</name>
        <qualifiedname>cxxopts::OptionValue::parse</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; const OptionDetails &gt; &amp;</type>
          <declname>details</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1091" column="10" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1091" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a58f4dc95f2a36c01f64c026baae6795f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::OptionValue::parse_default</definition>
        <argsstring>(const std::shared_ptr&lt; const OptionDetails &gt; &amp;details)</argsstring>
        <name>parse_default</name>
        <qualifiedname>cxxopts::OptionValue::parse_default</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; const OptionDetails &gt; &amp;</type>
          <declname>details</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1098" column="10" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1098" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a85af628f49023ea63e1983d1f350cb34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::OptionValue::parse_no_value</definition>
        <argsstring>(const std::shared_ptr&lt; const OptionDetails &gt; &amp;details)</argsstring>
        <name>parse_no_value</name>
        <qualifiedname>cxxopts::OptionValue::parse_no_value</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; const OptionDetails &gt; &amp;</type>
          <declname>details</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1105" column="10" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1105" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a9d8fc19cfc051a4d1d435c424deb6b49" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>CXXOPTS_NODISCARD std::size_t</type>
        <definition>CXXOPTS_NODISCARD std::size_t cxxopts::OptionValue::count</definition>
        <argsstring>() const noexcept</argsstring>
        <name>count</name>
        <qualifiedname>cxxopts::OptionValue::count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1115" column="17" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1115" bodyend="1117"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1ab36579e07e3f29af87aa870f996a7906" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>CXXOPTS_NODISCARD bool</type>
        <definition>CXXOPTS_NODISCARD bool cxxopts::OptionValue::has_default</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_default</name>
        <qualifiedname>cxxopts::OptionValue::has_default</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1125" column="10" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1125" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a6953817ba21f573f4c305bda31084d1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T &amp; cxxopts::OptionValue::as</definition>
        <argsstring>() const</argsstring>
        <name>as</name>
        <qualifiedname>cxxopts::OptionValue::as</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1130" column="13" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1130" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a69645a46405198eea09f45137f1bcf8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::OptionValue::parse</definition>
        <argsstring>(const std::shared_ptr&lt; const OptionDetails &gt; &amp;details, const std::string &amp;text)</argsstring>
        <name>parse</name>
        <qualifiedname>cxxopts::OptionValue::parse</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; const OptionDetails &gt; &amp;</type>
          <declname>details</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="1091" column="10" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="1091" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a58f4dc95f2a36c01f64c026baae6795f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::OptionValue::parse_default</definition>
        <argsstring>(const std::shared_ptr&lt; const OptionDetails &gt; &amp;details)</argsstring>
        <name>parse_default</name>
        <qualifiedname>cxxopts::OptionValue::parse_default</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; const OptionDetails &gt; &amp;</type>
          <declname>details</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="1098" column="10" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="1098" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a85af628f49023ea63e1983d1f350cb34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::OptionValue::parse_no_value</definition>
        <argsstring>(const std::shared_ptr&lt; const OptionDetails &gt; &amp;details)</argsstring>
        <name>parse_no_value</name>
        <qualifiedname>cxxopts::OptionValue::parse_no_value</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; const OptionDetails &gt; &amp;</type>
          <declname>details</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="1105" column="10" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="1105" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a9d8fc19cfc051a4d1d435c424deb6b49" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>CXXOPTS_NODISCARD std::size_t</type>
        <definition>CXXOPTS_NODISCARD std::size_t cxxopts::OptionValue::count</definition>
        <argsstring>() const noexcept</argsstring>
        <name>count</name>
        <qualifiedname>cxxopts::OptionValue::count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="1115" column="17" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="1115" bodyend="1117"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1ab36579e07e3f29af87aa870f996a7906" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>CXXOPTS_NODISCARD bool</type>
        <definition>CXXOPTS_NODISCARD bool cxxopts::OptionValue::has_default</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_default</name>
        <qualifiedname>cxxopts::OptionValue::has_default</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="1125" column="10" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="1125" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a6953817ba21f573f4c305bda31084d1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T &amp; cxxopts::OptionValue::as</definition>
        <argsstring>() const</argsstring>
        <name>as</name>
        <qualifiedname>cxxopts::OptionValue::as</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="1130" column="13" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="1130" bodyend="1136"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a5e62e7e64679e627ba8946c36a559f2a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::OptionValue::ensure_value</definition>
        <argsstring>(const std::shared_ptr&lt; const OptionDetails &gt; &amp;details)</argsstring>
        <name>ensure_value</name>
        <qualifiedname>cxxopts::OptionValue::ensure_value</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; const OptionDetails &gt; &amp;</type>
          <declname>details</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1139" column="10" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1139" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="classcxxopts_1_1OptionValue_1a5e62e7e64679e627ba8946c36a559f2a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void cxxopts::OptionValue::ensure_value</definition>
        <argsstring>(const std::shared_ptr&lt; const OptionDetails &gt; &amp;details)</argsstring>
        <name>ensure_value</name>
        <qualifiedname>cxxopts::OptionValue::ensure_value</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; const OptionDetails &gt; &amp;</type>
          <declname>details</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" line="1139" column="10" bodyfile="/home/friedel/devel/ILLIXR/src/cxxopts.hpp" bodystart="1139" bodyend="1143"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" line="1089" column="1" bodyfile="/home/friedel/devel/ILLIXR/plugins/zed/capture/cxxopts.hpp" bodystart="1089" bodyend="1151"/>
    <listofallmembers>
      <member refid="classcxxopts_1_1OptionValue_1a6953817ba21f573f4c305bda31084d1b" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>as</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a6953817ba21f573f4c305bda31084d1b" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>as</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a9d8fc19cfc051a4d1d435c424deb6b49" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>count</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a9d8fc19cfc051a4d1d435c424deb6b49" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>count</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a5e62e7e64679e627ba8946c36a559f2a" prot="private" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>ensure_value</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a5e62e7e64679e627ba8946c36a559f2a" prot="private" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>ensure_value</name></member>
      <member refid="classcxxopts_1_1OptionValue_1ab36579e07e3f29af87aa870f996a7906" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>has_default</name></member>
      <member refid="classcxxopts_1_1OptionValue_1ab36579e07e3f29af87aa870f996a7906" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>has_default</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a80bfd82d3bf24a7b6f517cb5046af0d5" prot="private" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>m_count</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a4b65034339c40c08656fa674680d99e1" prot="private" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>m_default</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a71e084e652b1d44351452bf647860554" prot="private" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>m_long_names</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a1e61862e3c68a7cec67d5bdfb0183870" prot="private" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>m_value</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a69645a46405198eea09f45137f1bcf8b" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>parse</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a69645a46405198eea09f45137f1bcf8b" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>parse</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a58f4dc95f2a36c01f64c026baae6795f" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>parse_default</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a58f4dc95f2a36c01f64c026baae6795f" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>parse_default</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a85af628f49023ea63e1983d1f350cb34" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>parse_no_value</name></member>
      <member refid="classcxxopts_1_1OptionValue_1a85af628f49023ea63e1983d1f350cb34" prot="public" virt="non-virtual"><scope>cxxopts::OptionValue</scope><name>parse_no_value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
